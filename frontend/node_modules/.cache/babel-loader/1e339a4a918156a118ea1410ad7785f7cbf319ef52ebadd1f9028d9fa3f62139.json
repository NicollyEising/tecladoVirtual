{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [buttons, setButtons] = useState([]);\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(data.sequence); // Guarda a senha correta (hashes)\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence); // Gera os botões com a sequência misturada\n\n        console.log(\"Token de Verificação:\", data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  };\n\n  // Função para lidar com o clique nos botões\n  const handleButtonClick = pair => {\n    const nextExpectedHash = password[inputSequence.length]; // Obtém o próximo hash esperado da senha\n\n    const isValid = pair.includes(nextExpectedHash); // Verifica se o hash correto está no par\n\n    if (isValid) {\n      setInputSequence(prevSequence => {\n        const newSequence = [...prevSequence, nextExpectedHash];\n        console.log(\"Sequência do usuário após clique:\", newSequence);\n        return newSequence;\n      });\n    } else {\n      toast.error(`Hash ${nextExpectedHash} não está no par. Tente novamente.`);\n    }\n  };\n\n  // Gera botões misturados, incluindo as alternativas corretas\n  const generateButtons = sequence => {\n    let allButtons = [];\n\n    // Adiciona os pares corretos (hashes)\n    sequence.forEach((hash, index) => {\n      const nextHash = sequence[index + 1];\n      if (nextHash) {\n        allButtons.push([hash, nextHash]);\n      }\n    });\n\n    // Adiciona pares aleatórios\n    for (let i = 0; i < sequence.length; i++) {\n      let randomHash1 = Math.random().toString(36).substring(2, 10); // Gera hash aleatório\n      let randomHash2 = Math.random().toString(36).substring(2, 10); // Gera hash aleatório\n      allButtons.push([randomHash1, randomHash2]);\n    }\n\n    // Embaralha a ordem dos botões\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\n    setButtons(allButtons);\n  };\n\n  // Exibe os botões misturados\n  const displayButtons = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(pair) // Passa o par de hashes para a função de clique\n        ,\n        className: \"button\",\n        children: [\"[\", pair[0], \" ou \", pair[1], \"]\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Função para validar a sequência ao final\n  const handleValidatePassword = async () => {\n    try {\n      console.log(\"Session ID enviado:\", sessionId);\n      const data = {\n        session_id: sessionId,\n        sequence: password\n      };\n      const response = await axios.post(\"http://127.0.0.1:8000/validate_sequence\", data, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n    } catch (error) {\n      console.log('Error response:', error.response ? error.response.data : error.message);\n      toast.error('Erro ao validar a sequência');\n    }\n  };\n\n  // Função para gerar sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      className: \"primary-button\",\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: buttons.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(pair),\n          className: \"button\",\n          children: [\"[\", pair[0], \" ou \", pair[1], \"]\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputSequence.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        className: \"primary-button\",\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"token-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0Oz7uMQfE/ExaQb1KCbi1NcKacE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","buttons","setButtons","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","generateButtons","success","handleButtonClick","pair","nextExpectedHash","length","isValid","includes","prevSequence","newSequence","allButtons","forEach","hash","index","nextHash","push","i","randomHash1","Math","random","toString","substring","randomHash2","sort","displayButtons","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","handleValidatePassword","response","post","headers","Authorization","message","htmlFor","id","type","value","onChange","e","target","placeholder","join","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(data.sequence); // Guarda a senha correta (hashes)\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence); // Gera os botões com a sequência misturada\r\n\r\n        console.log(\"Token de Verificação:\", data.token);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões\r\n  const handleButtonClick = (pair) => {\r\n    const nextExpectedHash = password[inputSequence.length]; // Obtém o próximo hash esperado da senha\r\n    \r\n    const isValid = pair.includes(nextExpectedHash); // Verifica se o hash correto está no par\r\n\r\n    if (isValid) {\r\n      setInputSequence((prevSequence) => {\r\n        const newSequence = [...prevSequence, nextExpectedHash];\r\n        console.log(\"Sequência do usuário após clique:\", newSequence);\r\n        return newSequence;\r\n      });\r\n    } else {\r\n      toast.error(`Hash ${nextExpectedHash} não está no par. Tente novamente.`);\r\n    }\r\n  };\r\n\r\n  // Gera botões misturados, incluindo as alternativas corretas\r\n  const generateButtons = (sequence) => {\r\n    let allButtons = [];\r\n    \r\n    // Adiciona os pares corretos (hashes)\r\n    sequence.forEach((hash, index) => {\r\n      const nextHash = sequence[index + 1];\r\n      if (nextHash) {\r\n        allButtons.push([hash, nextHash]);\r\n      }\r\n    });\r\n\r\n    // Adiciona pares aleatórios\r\n    for (let i = 0; i < sequence.length; i++) {\r\n      let randomHash1 = Math.random().toString(36).substring(2, 10); // Gera hash aleatório\r\n      let randomHash2 = Math.random().toString(36).substring(2, 10); // Gera hash aleatório\r\n      allButtons.push([randomHash1, randomHash2]);\r\n    }\r\n\r\n    // Embaralha a ordem dos botões\r\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\r\n    setButtons(allButtons);\r\n  };\r\n\r\n  // Exibe os botões misturados\r\n  const displayButtons = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n\r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((pair, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleButtonClick(pair)}  // Passa o par de hashes para a função de clique\r\n            className=\"button\"\r\n          >\r\n            [{pair[0]} ou {pair[1]}]\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Função para validar a sequência ao final\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      console.log(\"Session ID enviado:\", sessionId);\r\n\r\n      const data = {\r\n        session_id: sessionId,\r\n        sequence: password\r\n      };\r\n\r\n      const response = await axios.post(\"http://127.0.0.1:8000/validate_sequence\", data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      console.log('Error response:', error.response ? error.response.data : error.message);\r\n      toast.error('Erro ao validar a sequência');\r\n    }\r\n  };\r\n\r\n  // Função para gerar sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div className=\"form-container\">\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession} className=\"primary-button\">\r\n        Gerar Nova Sessão\r\n      </button>\r\n\r\n      {isSessionValid ? (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          <p>{password.join(' ')}</p>\r\n\r\n          <h2>Clique nos botões abaixo para digitar a senha:</h2>\r\n          <div className=\"buttons-container\">\r\n            {buttons.map((pair, index) => (\r\n              <button key={index} onClick={() => handleButtonClick(pair)} className=\"button\">\r\n                [{pair[0]} ou {pair[1]}]\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <p>{inputSequence.join(' ')}</p>\r\n\r\n          <button onClick={handleValidatePassword} className=\"primary-button\">\r\n            Validar Senha\r\n          </button>\r\n\r\n          <div className=\"token-info\">\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}