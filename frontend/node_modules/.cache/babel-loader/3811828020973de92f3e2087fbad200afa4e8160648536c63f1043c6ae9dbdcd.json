{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [buttons, setButtons] = useState([]);\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const data = await generateSession(username);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(formatSequence(data.sequence));\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n  const generateButtons = sequence => {\n    let correctPairs = formatSequence(sequence);\n    let allButtons = [...correctPairs];\n    for (let i = 0; i < correctPairs.length; i++) {\n      let num1 = Math.floor(Math.random() * 10);\n      let num2 = Math.floor(Math.random() * 10);\n      allButtons.push([num1, num2]);\n    }\n    setButtons(allButtons.sort(() => Math.random() - 0.5));\n  };\n  const handleButtonClick = pair => {\n    const flatPassword = password.flat();\n    const nextExpectedNumber = flatPassword[inputSequence.length];\n    const isValid = pair.includes(nextExpectedNumber);\n    if (isValid) {\n      setInputSequence(prev => [...prev, nextExpectedNumber]);\n    } else {\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\n    }\n  };\n  const handleValidatePassword = async () => {\n    try {\n      const formattedSequence = password.flat().map(String);\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\n      const data = {\n        session_id: sessionId,\n        sequence: formattedSequence\n      };\n      const response = await axios.post(\"http://127.0.0.1:8000/validate_sequence\", data, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Encrypted-Session-Id': encryptedSessionId\n        }\n      });\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n    } catch (error) {\n      toast.error('Erro ao validar a sequência');\n    }\n  };\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    return response.data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Digite seu nome de usu\\xE1rio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      disabled: isLoading,\n      children: isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), isSessionValid && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selecione os pares corretos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: buttons.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(pair),\n          children: [\"[\", pair[0], \", \", pair[1], \"]\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q/yCQN2kORQ6jbJqYQL5QruiilY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","axios","CryptoJS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isLoading","setIsLoading","buttons","setButtons","handleGenerateSession","error","data","generateSession","sequence","Array","isArray","session_id","formatSequence","generateButtons","success","console","formatted","i","length","push","correctPairs","allButtons","num1","Math","floor","random","num2","sort","handleButtonClick","pair","flatPassword","flat","nextExpectedNumber","isValid","includes","prev","handleValidatePassword","formattedSequence","map","String","encryptedSessionId","AES","encrypt","toString","response","post","headers","Authorization","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","join","index","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const data = await generateSession(username);\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(formatSequence(data.sequence));\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n  const generateButtons = (sequence) => {\r\n    let correctPairs = formatSequence(sequence);\r\n    let allButtons = [...correctPairs];\r\n\r\n    for (let i = 0; i < correctPairs.length; i++) {\r\n      let num1 = Math.floor(Math.random() * 10);\r\n      let num2 = Math.floor(Math.random() * 10);\r\n      allButtons.push([num1, num2]);\r\n    }\r\n\r\n    setButtons(allButtons.sort(() => Math.random() - 0.5));\r\n  };\r\n\r\n  const handleButtonClick = (pair) => {\r\n    const flatPassword = password.flat();\r\n    const nextExpectedNumber = flatPassword[inputSequence.length];\r\n    const isValid = pair.includes(nextExpectedNumber);\r\n\r\n    if (isValid) {\r\n      setInputSequence((prev) => [...prev, nextExpectedNumber]);\r\n    } else {\r\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\r\n    }\r\n  };\r\n\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      const formattedSequence = password.flat().map(String);\r\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\r\n      const data = { session_id: sessionId, sequence: formattedSequence };\r\n      const response = await axios.post(\"http://127.0.0.1:8000/validate_sequence\", data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Encrypted-Session-Id': encryptedSessionId\r\n        }\r\n      });\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      toast.error('Erro ao validar a sequência');\r\n    }\r\n  };\r\n\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n      <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Digite seu nome de usuário\" />\r\n      <button onClick={handleGenerateSession} disabled={isLoading}>{isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'}</button>\r\n      {isSessionValid && (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          <p>{password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')}</p>\r\n          <h2>Selecione os pares corretos:</h2>\r\n          <div>\r\n            {buttons.map((pair, index) => (\r\n              <button key={index} onClick={() => handleButtonClick(pair)}>\r\n                [{pair[0]}, {pair[1]}]\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <button onClick={handleValidatePassword}>Validar Senha</button>\r\n        </>\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}