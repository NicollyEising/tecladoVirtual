{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n\n  // Função para converter hash em número inteiro\n  const hashToInt = hash => {\n    if (!hash) return 0;\n    let sum = 0;\n    for (let i = 0; i < hash.length; i++) {\n      sum += hash.charCodeAt(i);\n    }\n    // Limitar o número a 6 dígitos, por exemplo, para facilitar a visualização\n    return sum % 1000000;\n  };\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(formatSequence(data.sequence)); // Guarda a senha formatada\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence); // Gera botões misturados\n\n        console.log(\"Token de Verificação:\", data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  };\n\n  // Formata a sequência correta em pares\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n\n  // Função para lidar com o clique nos botões\n  const handleButtonClick = pair => {\n    const flatPassword = password.flat(); // \"Achata\" a senha para comparação\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Próximo número esperado\n\n    const isValid = pair.includes(nextExpectedNumber);\n    if (isValid) {\n      setInputSequence(prevSequence => {\n        const newSequence = [...prevSequence, nextExpectedNumber];\n        console.log(\"Sequência do usuário após clique:\", newSequence);\n        return newSequence;\n      });\n    } else {\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\n    }\n  };\n\n  // Gera botões misturados, incluindo as alternativas corretas e falsas\n  const generateButtons = sequence => {\n    let correctPairs = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      correctPairs.push([sequence[i], sequence[i + 1]]);\n    }\n    let allButtons = [];\n    correctPairs.forEach(pair => allButtons.push(pair));\n\n    // Adiciona pares falsos aleatórios\n    for (let i = 0; i < correctPairs.length; i++) {\n      let num1 = Math.floor(Math.random() * 10);\n      let num2 = Math.floor(Math.random() * 10);\n      allButtons.push([num1, num2]);\n    }\n\n    // Embaralha os pares\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\n    setButtons(allButtons);\n  };\n\n  // Exibe os botões misturados\n  const displayButtons = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(pair),\n        disabled: isButtonDisabled,\n        children: [\"[\", pair[0], \" ou \", pair[1], \"]\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Valida a sequência de senha selecionada\n  const handleValidatePassword = async () => {\n    try {\n      const formattedSequence = [];\n      for (let i = 0; i < inputSequence.length; i += 2) {\n        formattedSequence.push([inputSequence[i], inputSequence[i + 1]]);\n      }\n      console.log(\"Senha do usuário antes do envio:\", formattedSequence);\n      const isSequenceCorrect = formattedSequence.every((pair, index) => {\n        return pair[0] === password[index][0] && pair[1] === password[index][1];\n      });\n      if (!isSequenceCorrect) {\n        toast.error('Sequência incorreta');\n        return;\n      }\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: formattedSequence\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n      setIsButtonDisabled(true);\n    } catch (error) {\n      console.log('Error response:', error.response ? error.response.data : error.message);\n      toast.error('Erro ao validar a sequência');\n    }\n  };\n\n  // Função para gerar sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n\n  // Exibe a senha gerada de forma formatada\n  const displayPassword = () => {\n    if (password.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando senha...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 39\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"password-display\",\n      children: password.map(pair => `[${pair[0]}, ${pair[1]}]`).join(' ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Teclado Virtual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"session-init\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Nome de Usu\\xE1rio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Digite seu nome de usu\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateSession,\n          children: \"Gerar Nova Sess\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), isSessionValid && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"session-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-password\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Senha Gerada:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), displayPassword()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), displayButtons()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Senha Selecionada:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: inputSequence.length > 0 ? inputSequence.map((num, index) => `${num}${(index + 1) % 2 === 0 ? ' ' : ', '}`) : \"Nenhuma sequência selecionada ainda...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"validate-button\",\n          onClick: handleValidatePassword,\n          children: [\"Validar Senha (Sess\\xE3o #\", hashToInt(sessionId), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Token de Verifica\\xE7\\xE3o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QP7fkk/X+Eyp9jbv71tHJv8d/Ls=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","axios","jsxDEV","_jsxDEV","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","hashToInt","hash","sum","i","length","charCodeAt","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","formatSequence","generateButtons","success","formatted","push","handleButtonClick","pair","flatPassword","flat","nextExpectedNumber","isValid","includes","prevSequence","newSequence","correctPairs","allButtons","forEach","num1","Math","floor","random","num2","sort","displayButtons","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","onClick","disabled","handleValidatePassword","formattedSequence","isSequenceCorrect","every","response","post","headers","Authorization","message","displayPassword","join","htmlFor","id","type","value","onChange","e","target","placeholder","num","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n\r\n  // Função para converter hash em número inteiro\r\n  const hashToInt = (hash) => {\r\n    if (!hash) return 0;\r\n    let sum = 0;\r\n    for (let i = 0; i < hash.length; i++) {\r\n      sum += hash.charCodeAt(i);\r\n    }\r\n    // Limitar o número a 6 dígitos, por exemplo, para facilitar a visualização\r\n    return sum % 1000000;\r\n  };\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(formatSequence(data.sequence)); // Guarda a senha formatada\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence); // Gera botões misturados\r\n\r\n        console.log(\"Token de Verificação:\", data.token);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  };\r\n\r\n  // Formata a sequência correta em pares\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões\r\n  const handleButtonClick = (pair) => {\r\n    const flatPassword = password.flat(); // \"Achata\" a senha para comparação\r\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Próximo número esperado\r\n\r\n    const isValid = pair.includes(nextExpectedNumber);\r\n    if (isValid) {\r\n      setInputSequence((prevSequence) => {\r\n        const newSequence = [...prevSequence, nextExpectedNumber];\r\n        console.log(\"Sequência do usuário após clique:\", newSequence);\r\n        return newSequence;\r\n      });\r\n    } else {\r\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\r\n    }\r\n  };\r\n\r\n  // Gera botões misturados, incluindo as alternativas corretas e falsas\r\n  const generateButtons = (sequence) => {\r\n    let correctPairs = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      correctPairs.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n\r\n    let allButtons = [];\r\n    correctPairs.forEach(pair => allButtons.push(pair));\r\n\r\n    // Adiciona pares falsos aleatórios\r\n    for (let i = 0; i < correctPairs.length; i++) {\r\n      let num1 = Math.floor(Math.random() * 10);\r\n      let num2 = Math.floor(Math.random() * 10);\r\n      allButtons.push([num1, num2]);\r\n    }\r\n\r\n    // Embaralha os pares\r\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\r\n    setButtons(allButtons);\r\n  };\r\n\r\n  // Exibe os botões misturados\r\n  const displayButtons = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n\r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((pair, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleButtonClick(pair)}\r\n            disabled={isButtonDisabled}\r\n          >\r\n            [{pair[0]} ou {pair[1]}]\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Valida a sequência de senha selecionada\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      const formattedSequence = [];\r\n      for (let i = 0; i < inputSequence.length; i += 2) {\r\n        formattedSequence.push([inputSequence[i], inputSequence[i + 1]]);\r\n      }\r\n\r\n      console.log(\"Senha do usuário antes do envio:\", formattedSequence);\r\n\r\n      const isSequenceCorrect = formattedSequence.every((pair, index) => {\r\n        return (\r\n          pair[0] === password[index][0] && pair[1] === password[index][1]\r\n        );\r\n      });\r\n\r\n      if (!isSequenceCorrect) {\r\n        toast.error('Sequência incorreta');\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\r\n        session_id: sessionId,\r\n        sequence: formattedSequence,\r\n      }, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n      setIsButtonDisabled(true);\r\n    } catch (error) {\r\n      console.log('Error response:', error.response ? error.response.data : error.message);\r\n      toast.error('Erro ao validar a sequência');\r\n    }\r\n  };\r\n\r\n  // Função para gerar sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  // Exibe a senha gerada de forma formatada\r\n  const displayPassword = () => {\r\n    if (password.length === 0) return <p>Carregando senha...</p>;\r\n    return (\r\n      <p className=\"password-display\">\r\n        {password.map(pair => `[${pair[0]}, ${pair[1]}]`).join(' ')}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Teclado Virtual</h1>\r\n      </header>\r\n      <main>\r\n        <section className=\"session-init\">\r\n          <label htmlFor=\"username\">Nome de Usuário:</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Digite seu nome de usuário\"\r\n          />\r\n          <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n        </section>\r\n\r\n        {isSessionValid && (\r\n          <section className=\"session-details\">\r\n            <div className=\"generated-password\">\r\n              <h2>Senha Gerada:</h2>\r\n              {displayPassword()}\r\n            </div>\r\n\r\n            <div className=\"buttons-container\">\r\n              <h2>Clique nos botões abaixo para digitar a senha:</h2>\r\n              {displayButtons()}\r\n            </div>\r\n\r\n            <div className=\"user-input\">\r\n              <h3>Senha Selecionada:</h3>\r\n              <p>\r\n                {inputSequence.length > 0\r\n                  ? inputSequence.map((num, index) =>\r\n                      `${num}${(index + 1) % 2 === 0 ? ' ' : ', '}`\r\n                    )\r\n                  : \"Nenhuma sequência selecionada ainda...\"}\r\n              </p>\r\n            </div>\r\n\r\n            {/* Botão de validação com número gerado a partir do session_id */}\r\n            <button className=\"validate-button\" onClick={handleValidatePassword}>\r\n              Validar Senha (Sessão #{hashToInt(sessionId)})\r\n            </button>\r\n\r\n            <div className=\"token-info\">\r\n              <h3>Token de Verificação:</h3>\r\n              <p>{token}</p>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </main>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}