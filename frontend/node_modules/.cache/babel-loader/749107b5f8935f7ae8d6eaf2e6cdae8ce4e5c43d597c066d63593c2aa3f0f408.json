{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [sequence, setSequence] = useState([]); // Sequência de pares (agora um array de números)\n  const [inputSequence, setInputSequence] = useState([]); // Sequência do usuário (índices dos botões)\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttonNumbers, setButtonNumbers] = useState([]); // Números exibidos em cada botão\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setSequence(data.sequence); // Agora é um array de números, não mais pares\n        setToken(data.token);\n        setIsSessionValid(true);\n\n        // Gerar os números para os botões (dois números por botão)\n        setButtonNumbers(generateButtonNumbers(data.sequence));\n        console.log(\"Token de Verificação:\", data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  };\n\n  // Função para gerar os números a serem exibidos nos botões\n  const generateButtonNumbers = sequence => {\n    let numbers = [];\n    for (let i = 0; i < sequence.length; i++) {\n      // Escolhe dois números aleatórios diferentes para cada botão\n      let num1 = sequence[i];\n      let num2;\n      do {\n        num2 = Math.floor(Math.random() * 9) + 1; // Números de 1 a 9\n      } while (num2 === num1);\n      numbers.push([num1, num2]);\n    }\n    return numbers;\n  };\n\n  // Função para enviar a sequência e validar\n  const handleValidateSequence = async () => {\n    try {\n      console.log(\"Sequência do usuário antes do envio:\", inputSequence);\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: inputSequence // Envia os ÍNDICES dos botões clicados\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n      setIsButtonDisabled(true);\n    } catch (error) {\n      console.log(error.response ? error.response.data : error.message);\n      toast.error('Sequência incorreta');\n    }\n  };\n\n  // Função para gerar a sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n\n  // Função para lidar com o clique nos botões\n  const handleButtonClick = buttonIndex => {\n    setInputSequence(prevSequence => [...prevSequence, buttonIndex + 1]);\n  };\n\n  // Verificação do estado da sequência\n  useEffect(() => {\n    if (Array.isArray(sequence) && sequence.length > 0) {\n      console.log('Sequência carregada:', sequence);\n    }\n  }, [sequence]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sequ\\xEAncia Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique na sequ\\xEAncia:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), sequence.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Esperando sequ\\xEAncia...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: buttonNumbers.map((numbers, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(index) // Envia o ÍNDICE do botão\n          ,\n          disabled: isButtonDisabled,\n          children: [numbers[0], \" | \", numbers[1]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sequ\\xEAncia Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: inputSequence.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nenhuma sequ\\xEAncia selecionada ainda...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this) : inputSequence.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidateSequence,\n        children: \"Validar Sequ\\xEAncia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m6RUC4sFMvqalGSeTXeVJIo5Mac=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","sequence","setSequence","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttonNumbers","setButtonNumbers","handleGenerateSession","error","data","generateSession","console","log","Array","isArray","session_id","generateButtonNumbers","success","numbers","i","length","num1","num2","Math","floor","random","push","handleValidateSequence","response","post","headers","Authorization","message","handleButtonClick","buttonIndex","prevSequence","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","map","index","disabled","num","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [sequence, setSequence] = useState([]); // Sequência de pares (agora um array de números)\r\n  const [inputSequence, setInputSequence] = useState([]); // Sequência do usuário (índices dos botões)\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttonNumbers, setButtonNumbers] = useState([]); // Números exibidos em cada botão\r\n\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setSequence(data.sequence); // Agora é um array de números, não mais pares\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n\r\n        // Gerar os números para os botões (dois números por botão)\r\n        setButtonNumbers(generateButtonNumbers(data.sequence));\r\n\r\n\r\n        console.log(\"Token de Verificação:\", data.token);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  };\r\n\r\n// Função para gerar os números a serem exibidos nos botões\r\nconst generateButtonNumbers = (sequence) => {\r\n    let numbers = [];\r\n    for (let i = 0; i < sequence.length; i++) {\r\n        // Escolhe dois números aleatórios diferentes para cada botão\r\n        let num1 = sequence[i];\r\n        let num2;\r\n        do {\r\n            num2 = Math.floor(Math.random() * 9) + 1; // Números de 1 a 9\r\n        } while (num2 === num1);\r\n        numbers.push([num1, num2]);\r\n    }\r\n    return numbers;\r\n};\r\n\r\n  // Função para enviar a sequência e validar\r\nconst handleValidateSequence = async () => {\r\n    try {\r\n        console.log(\"Sequência do usuário antes do envio:\", inputSequence);\r\n\r\n        const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\r\n            session_id: sessionId,\r\n            sequence: inputSequence, // Envia os ÍNDICES dos botões clicados\r\n        }, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        });\r\n\r\n        console.log(\"✅ Sequência validada com sucesso:\", response.data);\r\n        toast.success('Sequência validada com sucesso!');\r\n        setIsSessionValid(false);\r\n        setIsButtonDisabled(true);\r\n    } catch (error) {\r\n        console.log(error.response ? error.response.data : error.message);\r\n        toast.error('Sequência incorreta');\r\n    }\r\n};\r\n\r\n\r\n  // Função para gerar a sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões\r\nconst handleButtonClick = (buttonIndex) => {\r\n    setInputSequence((prevSequence) => [...prevSequence, buttonIndex +1]);\r\n};\r\n\r\n  // Verificação do estado da sequência\r\n  useEffect(() => {\r\n    if (Array.isArray(sequence) && sequence.length > 0) {\r\n      console.log('Sequência carregada:', sequence);\r\n    }\r\n  }, [sequence]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div>\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n\r\n      {isSessionValid ? (\r\n        <>\r\n          <h2>Sequência Gerada:</h2>\r\n             {/* Exibe a sequência numérica real, se necessário para depuração */}\r\n            {/* <p>Sequência: {sequence.join(', ')}</p> */}\r\n\r\n          <h2>Clique na sequência:</h2>\r\n          {sequence.length === 0 ? (\r\n            <p>Esperando sequência...</p>\r\n          ) : (\r\n            <div className=\"buttons\">\r\n                {buttonNumbers.map((numbers, index) => (\r\n                    <button\r\n                        key={index}\r\n                        onClick={() => handleButtonClick(index)} // Envia o ÍNDICE do botão\r\n                        disabled={isButtonDisabled}\r\n                    >\r\n                        {/* Exibe os dois números no botão */}\r\n                        {numbers[0]} | {numbers[1]}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n          )}\r\n\r\n          <h3>Sequência Selecionada:</h3>\r\n          <ul>\r\n            {inputSequence.length === 0 ? (\r\n              <p>Nenhuma sequência selecionada ainda...</p>\r\n            ) : (\r\n              inputSequence.map((num, index) => (\r\n                <li key={index}>{num}</li>  \r\n              ))\r\n            )}\r\n          </ul>\r\n\r\n          <button onClick={handleValidateSequence}>Validar Sequência</button>\r\n\r\n          {/* Exibe o Token de Verificação */}\r\n          <div>\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}