{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [buttons, setButtons] = useState([]);\n  const [token, setToken] = useState('');\n  const [inputSequence, setInputSequence] = useState([]);\n  const password = [1, 2, 3, 4, 5]; // A senha que deve ser validada\n\n  const generateSession = async () => {\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/generate_session');\n      console.log('Dados da sessão gerada:', response.data);\n      setSessionId(response.data.session_id);\n      setButtons(response.data.sequence);\n      setToken(response.data.token);\n      setInputSequence([]); // Limpar a sequência ao gerar nova sessão\n    } catch (error) {\n      console.error('Erro ao gerar sessão:', error);\n      alert('Erro ao gerar sessão. Verifique a conexão com o servidor.');\n    }\n  };\n  const handleButtonClick = num => {\n    // Verifica se o número corresponde à senha\n    for (let i = 0; i < password.length; i++) {\n      if (password[i] === num) {\n        // Se corresponder, adiciona o número à sequência\n        setInputSequence(prevSequence => {\n          const newSequence = [...prevSequence, num];\n          console.log('Sequência de entrada atualizada:', newSequence);\n          return newSequence;\n        });\n        break; // Para o loop após encontrar o número correspondente\n      }\n    }\n  };\n  const validateSequence = async () => {\n    if (!sessionId || inputSequence.length === 0) {\n      alert('Sessão inválida ou sequência vazia.');\n      return;\n    }\n    console.log('Dados enviados para validação:', {\n      session_id: sessionId,\n      sequence: inputSequence\n    });\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: inputSequence\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Resposta da validação:', response.data);\n      alert(response.data.message);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Erro na validação:', error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Erro na validação da sequência.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateSession,\n      children: \"Gerar Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: buttons.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(pair[0]),\n        children: pair[0]\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: validateSequence,\n      children: \"Validar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hIMAapF1uSBoHMSL1gneI9ChiiU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","sessionId","setSessionId","buttons","setButtons","token","setToken","inputSequence","setInputSequence","password","generateSession","response","post","console","log","data","session_id","sequence","error","alert","handleButtonClick","num","i","length","prevSequence","newSequence","validateSequence","headers","Authorization","message","_error$response","_error$response$data","detail","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","pair","index","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [buttons, setButtons] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n\r\n  const password = [1, 2, 3, 4, 5]; // A senha que deve ser validada\r\n\r\n  const generateSession = async () => {\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:8000/generate_session');\r\n      console.log('Dados da sessão gerada:', response.data);\r\n      setSessionId(response.data.session_id);\r\n      setButtons(response.data.sequence);\r\n      setToken(response.data.token);\r\n      setInputSequence([]); // Limpar a sequência ao gerar nova sessão\r\n    } catch (error) {\r\n      console.error('Erro ao gerar sessão:', error);\r\n      alert('Erro ao gerar sessão. Verifique a conexão com o servidor.');\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = (num) => {\r\n    // Verifica se o número corresponde à senha\r\n    for (let i = 0; i < password.length; i++) {\r\n      if (password[i] === num) {\r\n        // Se corresponder, adiciona o número à sequência\r\n        setInputSequence((prevSequence) => {\r\n          const newSequence = [...prevSequence, num];\r\n          console.log('Sequência de entrada atualizada:', newSequence);\r\n          return newSequence;\r\n        });\r\n        break; // Para o loop após encontrar o número correspondente\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateSequence = async () => {\r\n    if (!sessionId || inputSequence.length === 0) {\r\n      alert('Sessão inválida ou sequência vazia.');\r\n      return;\r\n    }\r\n\r\n    console.log('Dados enviados para validação:', { session_id: sessionId, sequence: inputSequence });\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'http://127.0.0.1:8000/validate_sequence',\r\n        { session_id: sessionId, sequence: inputSequence },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      console.log('Resposta da validação:', response.data);\r\n      alert(response.data.message);\r\n    } catch (error) {\r\n      console.error('Erro na validação:', error);\r\n      alert(error.response?.data?.detail || 'Erro na validação da sequência.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={generateSession}>Gerar Sessão</button>\r\n      <div>\r\n        {buttons.map((pair, index) => (\r\n          <button key={index} onClick={() => handleButtonClick(pair[0])}>\r\n            {pair[0]}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <button onClick={validateSequence}>Validar</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}