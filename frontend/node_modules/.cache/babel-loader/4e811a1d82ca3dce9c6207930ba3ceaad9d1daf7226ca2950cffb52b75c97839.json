{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n  const [expectedCounts, setExpectedCounts] = useState({});\n  const [buttonMapping, setButtonMapping] = useState({}); // Mapa:  índice do botão -> número real\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(data.sequence); // Guarda a senha *sem formatar*\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence);\n\n        // Inicializa a contagem esperada.\n        const counts = {};\n        data.sequence.forEach(num => {\n          counts[num] = (counts[num] || 0) + 1;\n        });\n        setExpectedCounts(counts);\n        console.log(\"Token de Verificação:\", data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  };\n\n  // Função para lidar com o clique nos botões\n  const handleButtonClick = buttonIndex => {\n    const actualNumber = buttonMapping[buttonIndex]; // Obtém o número REAL associado ao botão\n    const nextExpectedNumber = password[inputSequence.length];\n    if (actualNumber === nextExpectedNumber && expectedCounts[actualNumber] > 0) {\n      setInputSequence(prevSequence => [...prevSequence, actualNumber]);\n      setExpectedCounts(prevCounts => ({\n        ...prevCounts,\n        [actualNumber]: prevCounts[actualNumber] - 1\n      }));\n    } else {\n      if (expectedCounts[actualNumber] === undefined || expectedCounts[actualNumber] === 0) {\n        toast.error(`Número ${actualNumber} incorreto. Tente novamente.`);\n      } else {\n        toast.error(`Número incorreto. Tente novamente.`);\n      }\n    }\n  };\n\n  // Gera botões com números individuais, misturados\n  const generateButtons = sequence => {\n    const correctNumbers = [...sequence];\n    let allNumbers = [...correctNumbers];\n    const numDistractors = sequence.length;\n    for (let i = 0; i < numDistractors; i++) {\n      let randomNum;\n      do {\n        randomNum = Math.floor(Math.random() * 10);\n      } while (allNumbers.includes(randomNum));\n      allNumbers.push(randomNum);\n    }\n\n    // Cria um array de índices e embaralha *os índices*\n    let buttonIndices = Array.from({\n      length: allNumbers.length\n    }, (_, i) => i);\n    buttonIndices = buttonIndices.sort(() => Math.random() - 0.5);\n\n    // Cria o mapeamento:  índice do botão -> número real\n    const mapping = {};\n    const shuffledButtons = [];\n    buttonIndices.forEach((buttonIndex, visualIndex) => {\n      const actualNumber = allNumbers[buttonIndex];\n      mapping[visualIndex] = actualNumber; // visualIndex é a chave, buttonIndex acessa o valor embaralhado\n      shuffledButtons.push(actualNumber);\n    });\n    setButtonMapping(mapping);\n    setButtons(shuffledButtons); // Define os botões com os números embaralhados (mas o mapeamento sabe a ordem correta)\n  };\n\n  // Exibe os botões misturados\n  const displayButtons = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map((number, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(index) // Passa o *índice* do botão\n        ,\n        disabled: isButtonDisabled,\n        children: number\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Valida a sequência de senha selecionada\n  const handleValidatePassword = async () => {\n    try {\n      const isSequenceCorrect = inputSequence.length === password.length && inputSequence.every((num, index) => num === password[index]);\n      if (!isSequenceCorrect) {\n        toast.error('Sequência incorreta');\n        setInputSequence([]);\n        const counts = {};\n        password.forEach(num => {\n          counts[num] = (counts[num] || 0) + 1;\n        });\n        setExpectedCounts(counts);\n        return;\n      }\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: inputSequence\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n      setIsButtonDisabled(true);\n      setExpectedCounts({});\n      setInputSequence([]);\n    } catch (error) {\n      console.log('Error response:', error.response ? error.response.data : error.message);\n      toast.error('Erro ao validar a sequência');\n      setInputSequence([]);\n      const counts = {};\n      password.forEach(num => {\n        counts[num] = (counts[num] || 0) + 1;\n      });\n      setExpectedCounts(counts);\n    }\n  };\n\n  // Função para gerar sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n\n  // Exibe a senha gerada de forma formatada (mantido, mas agora com números separados por vírgula)\n  const displayPassword = () => {\n    if (password.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando senha...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 39\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"password-display\",\n      children: password.join(', ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Teclado Virtual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"session-init\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Nome de Usu\\xE1rio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Digite seu nome de usu\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateSession,\n          children: \"Gerar Nova Sess\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), isSessionValid && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"session-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-password\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Senha Gerada:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), displayPassword()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), displayButtons()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Senha Selecionada:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: inputSequence.length > 0 ? inputSequence.join(', ') : \"Nenhuma sequência selecionada ainda...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"validate-button\",\n          onClick: handleValidatePassword,\n          children: \"Validar Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Token de Verifica\\xE7\\xE3o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z4822lJ3+lGTSPBy3/JT8gMZlt8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","jsxDEV","_jsxDEV","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","expectedCounts","setExpectedCounts","buttonMapping","setButtonMapping","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","generateButtons","counts","forEach","num","success","handleButtonClick","buttonIndex","actualNumber","nextExpectedNumber","length","prevSequence","prevCounts","undefined","correctNumbers","allNumbers","numDistractors","i","randomNum","Math","floor","random","includes","push","buttonIndices","from","_","sort","mapping","shuffledButtons","visualIndex","displayButtons","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","number","index","onClick","disabled","handleValidatePassword","isSequenceCorrect","every","response","post","headers","Authorization","message","displayPassword","join","htmlFor","id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n  const [expectedCounts, setExpectedCounts] = useState({});\r\n  const [buttonMapping, setButtonMapping] = useState({}); // Mapa:  índice do botão -> número real\r\n\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(data.sequence); // Guarda a senha *sem formatar*\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence);\r\n\r\n        // Inicializa a contagem esperada.\r\n        const counts = {};\r\n        data.sequence.forEach(num => {\r\n          counts[num] = (counts[num] || 0) + 1;\r\n        });\r\n        setExpectedCounts(counts);\r\n\r\n        console.log(\"Token de Verificação:\", data.token);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões\r\n    const handleButtonClick = (buttonIndex) => {\r\n      const actualNumber = buttonMapping[buttonIndex]; // Obtém o número REAL associado ao botão\r\n      const nextExpectedNumber = password[inputSequence.length];\r\n\r\n        if (actualNumber === nextExpectedNumber && expectedCounts[actualNumber] > 0) {\r\n          setInputSequence((prevSequence) => [...prevSequence, actualNumber]);\r\n\r\n          setExpectedCounts(prevCounts => ({\r\n            ...prevCounts,\r\n            [actualNumber]: prevCounts[actualNumber] - 1\r\n          }));\r\n        } else {\r\n             if (expectedCounts[actualNumber] === undefined || expectedCounts[actualNumber] === 0) {\r\n               toast.error(`Número ${actualNumber} incorreto. Tente novamente.`);\r\n             }\r\n             else{\r\n              toast.error(`Número incorreto. Tente novamente.`);\r\n             }\r\n\r\n        }\r\n    };\r\n\r\n    // Gera botões com números individuais, misturados\r\n    const generateButtons = (sequence) => {\r\n      const correctNumbers = [...sequence];\r\n      let allNumbers = [...correctNumbers];\r\n      const numDistractors = sequence.length;\r\n      for (let i = 0; i < numDistractors; i++) {\r\n        let randomNum;\r\n        do {\r\n          randomNum = Math.floor(Math.random() * 10);\r\n        } while (allNumbers.includes(randomNum));\r\n        allNumbers.push(randomNum);\r\n      }\r\n\r\n      // Cria um array de índices e embaralha *os índices*\r\n      let buttonIndices = Array.from({ length: allNumbers.length }, (_, i) => i);\r\n      buttonIndices = buttonIndices.sort(() => Math.random() - 0.5);\r\n\r\n      // Cria o mapeamento:  índice do botão -> número real\r\n      const mapping = {};\r\n      const shuffledButtons = [];\r\n      buttonIndices.forEach((buttonIndex, visualIndex) => {\r\n        const actualNumber = allNumbers[buttonIndex];\r\n        mapping[visualIndex] = actualNumber;  // visualIndex é a chave, buttonIndex acessa o valor embaralhado\r\n        shuffledButtons.push(actualNumber);\r\n      });\r\n\r\n      setButtonMapping(mapping);\r\n      setButtons(shuffledButtons);  // Define os botões com os números embaralhados (mas o mapeamento sabe a ordem correta)\r\n    };\r\n\r\n\r\n  // Exibe os botões misturados\r\n  const displayButtons = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n\r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((number, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleButtonClick(index)} // Passa o *índice* do botão\r\n            disabled={isButtonDisabled}\r\n          >\r\n            {number}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n// Valida a sequência de senha selecionada\r\nconst handleValidatePassword = async () => {\r\n  try {\r\n\r\n    const isSequenceCorrect =\r\n      inputSequence.length === password.length &&\r\n      inputSequence.every((num, index) => num === password[index]);\r\n\r\n    if (!isSequenceCorrect) {\r\n      toast.error('Sequência incorreta');\r\n        setInputSequence([]);\r\n        const counts = {};\r\n        password.forEach(num => {\r\n          counts[num] = (counts[num] || 0) + 1;\r\n        });\r\n        setExpectedCounts(counts)\r\n      return;\r\n    }\r\n\r\n    const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\r\n      session_id: sessionId,\r\n      sequence: inputSequence,\r\n    }, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n\r\n    console.log(\"✅ Sequência validada com sucesso:\", response.data);\r\n    toast.success('Sequência validada com sucesso!');\r\n    setIsSessionValid(false);\r\n    setIsButtonDisabled(true);\r\n    setExpectedCounts({});\r\n    setInputSequence([])\r\n\r\n  } catch (error) {\r\n    console.log('Error response:', error.response ? error.response.data : error.message);\r\n    toast.error('Erro ao validar a sequência');\r\n      setInputSequence([]);\r\n        const counts = {};\r\n        password.forEach(num => {\r\n          counts[num] = (counts[num] || 0) + 1;\r\n        });\r\n        setExpectedCounts(counts)\r\n  }\r\n};\r\n\r\n  // Função para gerar sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n// Exibe a senha gerada de forma formatada (mantido, mas agora com números separados por vírgula)\r\n  const displayPassword = () => {\r\n    if (password.length === 0) return <p>Carregando senha...</p>;\r\n    return (\r\n      <p className=\"password-display\">\r\n        {password.join(', ')}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Teclado Virtual</h1>\r\n      </header>\r\n      <main>\r\n        <section className=\"session-init\">\r\n          <label htmlFor=\"username\">Nome de Usuário:</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Digite seu nome de usuário\"\r\n          />\r\n          <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n        </section>\r\n\r\n        {isSessionValid && (\r\n          <section className=\"session-details\">\r\n            <div className=\"generated-password\">\r\n              <h2>Senha Gerada:</h2>\r\n              {displayPassword()}\r\n            </div>\r\n\r\n            <div className=\"buttons-container\">\r\n              <h2>Clique nos botões abaixo para digitar a senha:</h2>\r\n              {displayButtons()}\r\n            </div>\r\n\r\n            <div className=\"user-input\">\r\n              <h3>Senha Selecionada:</h3>\r\n              <p>\r\n                {inputSequence.length > 0\r\n                  ? inputSequence.join(', ')\r\n                  : \"Nenhuma sequência selecionada ainda...\"}\r\n              </p>\r\n            </div>\r\n\r\n            <button className=\"validate-button\" onClick={handleValidatePassword}>\r\n              Validar Senha\r\n            </button>\r\n\r\n            <div className=\"token-info\">\r\n              <h3>Token de Verificação:</h3>\r\n              <p>{token}</p>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </main>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}