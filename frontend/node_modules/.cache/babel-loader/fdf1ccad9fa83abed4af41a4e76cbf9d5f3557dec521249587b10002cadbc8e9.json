{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]); // [[1,2], [3,4]]\n  const [inputSequence, setInputSequence] = useState([]); // [1, 2, 3, 4]\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n  const [expectedCounts, setExpectedCounts] = useState({}); // {1: 1, 2: 1, 3: 1, 4: 1}  // Contagem de ocorrências esperadas de cada número\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(formatSequence(data.sequence)); // Guarda a senha formatada\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence); // Gera botões misturados\n\n        // Inicializa a contagem esperada de cada número na senha.\n        const counts = {};\n        data.sequence.forEach(num => {\n          counts[num] = (counts[num] || 0) + 1;\n        });\n        setExpectedCounts(counts);\n        console.log(\"Token de Verificação:\", data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  };\n\n  // Formata a sequência correta em pares (mantido para compatibilidade, mas poderia ser simplificado)\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n\n  // Função para lidar com o clique nos botões\n  const handleButtonClick = number => {\n    const flatPassword = password.flat();\n    const nextExpectedNumber = flatPassword[inputSequence.length];\n\n    // Verifica se o número clicado é o esperado E se ainda há ocorrências esperadas dele.\n    if (number === nextExpectedNumber && expectedCounts[number] > 0) {\n      setInputSequence(prevSequence => [...prevSequence, number]);\n\n      // Decrementa a contagem esperada do número.\n      setExpectedCounts(prevCounts => ({\n        ...prevCounts,\n        [number]: prevCounts[number] - 1\n      }));\n    } else {\n      toast.error(`Número incorreto. Tente novamente.`);\n    }\n  };\n\n  // Gera botões com números individuais, misturados\n  const generateButtons = sequence => {\n    const correctNumbers = [...sequence]; // Números da senha\n    let allNumbers = [...correctNumbers];\n\n    // Adiciona números aleatórios (distratores)\n    const numDistractors = sequence.length; // Ou qualquer outra lógica para o número de distratores\n    for (let i = 0; i < numDistractors; i++) {\n      let randomNum;\n      do {\n        randomNum = Math.floor(Math.random() * 10); // Números de 0 a 9\n      } while (allNumbers.includes(randomNum)); // Garante que não haja repetição\n      allNumbers.push(randomNum);\n    }\n\n    // Embaralha os números\n    allNumbers = allNumbers.sort(() => Math.random() - 0.5);\n    setButtons(allNumbers);\n  };\n\n  // Exibe os botões misturados\n  const displayButtons = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map((number, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(number),\n        disabled: isButtonDisabled,\n        children: number\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  };\n  // Valida a sequência de senha selecionada\n  const handleValidatePassword = async () => {\n    try {\n      const flatPassword = password.flat();\n\n      // Compara diretamente as sequências\n      const isSequenceCorrect = inputSequence.length === flatPassword.length && inputSequence.every((num, index) => num === flatPassword[index]);\n      if (!isSequenceCorrect) {\n        toast.error('Sequência incorreta');\n        setInputSequence([]);\n        const counts = {};\n        flatPassword.forEach(num => {\n          counts[num] = (counts[num] || 0) + 1;\n        });\n        setExpectedCounts(counts);\n        return;\n      }\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: inputSequence // Envia a sequência como está\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n      setIsButtonDisabled(true);\n      setExpectedCounts({}); //reset\n      setInputSequence([]); //reset\n    } catch (error) {\n      console.log('Error response:', error.response ? error.response.data : error.message);\n      toast.error('Erro ao validar a sequência');\n      setInputSequence([]);\n      const counts = {};\n      password.flat().forEach(num => {\n        counts[num] = (counts[num] || 0) + 1;\n      });\n      setExpectedCounts(counts);\n    }\n  };\n\n  // Função para gerar sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n\n  // Exibe a senha gerada de forma formatada (mantido, mas agora com números separados por vírgula)\n  const displayPassword = () => {\n    if (password.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando senha...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 37\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"password-display\",\n      children: password.flat().join(', ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Teclado Virtual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"session-init\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Nome de Usu\\xE1rio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Digite seu nome de usu\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateSession,\n          children: \"Gerar Nova Sess\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), isSessionValid && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"session-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-password\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Senha Gerada:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), displayPassword()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), displayButtons()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Senha Selecionada:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: inputSequence.length > 0 ? inputSequence.join(', ') : \"Nenhuma sequência selecionada ainda...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"validate-button\",\n          onClick: handleValidatePassword,\n          children: \"Validar Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Token de Verifica\\xE7\\xE3o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oeA4hioGzTY2y7cN/z7NNM9iwS8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","axios","jsxDEV","_jsxDEV","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","expectedCounts","setExpectedCounts","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","formatSequence","generateButtons","counts","forEach","num","success","formatted","i","length","push","handleButtonClick","number","flatPassword","flat","nextExpectedNumber","prevSequence","prevCounts","correctNumbers","allNumbers","numDistractors","randomNum","Math","floor","random","includes","sort","displayButtons","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","onClick","disabled","handleValidatePassword","isSequenceCorrect","every","response","post","headers","Authorization","message","displayPassword","join","htmlFor","id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]); // [[1,2], [3,4]]\r\n  const [inputSequence, setInputSequence] = useState([]); // [1, 2, 3, 4]\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n  const [expectedCounts, setExpectedCounts] = useState({}); // {1: 1, 2: 1, 3: 1, 4: 1}  // Contagem de ocorrências esperadas de cada número\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(formatSequence(data.sequence)); // Guarda a senha formatada\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence); // Gera botões misturados\r\n\r\n        // Inicializa a contagem esperada de cada número na senha.\r\n        const counts = {};\r\n        data.sequence.forEach(num => {\r\n            counts[num] = (counts[num] || 0) + 1;\r\n        });\r\n        setExpectedCounts(counts);\r\n\r\n        console.log(\"Token de Verificação:\", data.token);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  };\r\n\r\n  // Formata a sequência correta em pares (mantido para compatibilidade, mas poderia ser simplificado)\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões\r\n  const handleButtonClick = (number) => {\r\n    const flatPassword = password.flat();\r\n    const nextExpectedNumber = flatPassword[inputSequence.length];\r\n\r\n    // Verifica se o número clicado é o esperado E se ainda há ocorrências esperadas dele.\r\n    if (number === nextExpectedNumber && expectedCounts[number] > 0) {\r\n      setInputSequence((prevSequence) => [...prevSequence, number]);\r\n\r\n      // Decrementa a contagem esperada do número.\r\n      setExpectedCounts(prevCounts => ({\r\n          ...prevCounts,\r\n          [number]: prevCounts[number] - 1\r\n      }));\r\n    } else {\r\n      toast.error(`Número incorreto. Tente novamente.`);\r\n    }\r\n  };\r\n\r\n    // Gera botões com números individuais, misturados\r\n  const generateButtons = (sequence) => {\r\n    const correctNumbers = [...sequence]; // Números da senha\r\n    let allNumbers = [...correctNumbers];\r\n\r\n    // Adiciona números aleatórios (distratores)\r\n    const numDistractors = sequence.length; // Ou qualquer outra lógica para o número de distratores\r\n    for (let i = 0; i < numDistractors; i++) {\r\n      let randomNum;\r\n      do {\r\n        randomNum = Math.floor(Math.random() * 10); // Números de 0 a 9\r\n      } while (allNumbers.includes(randomNum)); // Garante que não haja repetição\r\n      allNumbers.push(randomNum);\r\n    }\r\n\r\n    // Embaralha os números\r\n    allNumbers = allNumbers.sort(() => Math.random() - 0.5);\r\n    setButtons(allNumbers);\r\n  };\r\n\r\n\r\n  // Exibe os botões misturados\r\n const displayButtons = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((number, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleButtonClick(number)}\r\n            disabled={isButtonDisabled}\r\n          >\r\n            {number}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  // Valida a sequência de senha selecionada\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      const flatPassword = password.flat();\r\n\r\n      // Compara diretamente as sequências\r\n      const isSequenceCorrect = inputSequence.length === flatPassword.length &&\r\n                                inputSequence.every((num, index) => num === flatPassword[index]);\r\n      if (!isSequenceCorrect) {\r\n        toast.error('Sequência incorreta');\r\n        setInputSequence([]);\r\n        const counts = {};\r\n        flatPassword.forEach(num => {\r\n          counts[num] = (counts[num] || 0) + 1;\r\n        });\r\n        setExpectedCounts(counts)\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\r\n        session_id: sessionId,\r\n        sequence: inputSequence, // Envia a sequência como está\r\n      }, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n      setIsButtonDisabled(true);\r\n      setExpectedCounts({}); //reset\r\n      setInputSequence([]); //reset\r\n\r\n\r\n    } catch (error) {\r\n      console.log('Error response:', error.response ? error.response.data : error.message);\r\n      toast.error('Erro ao validar a sequência');\r\n        setInputSequence([]);\r\n        const counts = {};\r\n        password.flat().forEach(num => {\r\n          counts[num] = (counts[num] || 0) + 1;\r\n        });\r\n        setExpectedCounts(counts)\r\n    }\r\n  };\r\n\r\n  // Função para gerar sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  // Exibe a senha gerada de forma formatada (mantido, mas agora com números separados por vírgula)\r\nconst displayPassword = () => {\r\n  if (password.length === 0) return <p>Carregando senha...</p>;\r\n  return (\r\n    <p className=\"password-display\">\r\n      {password.flat().join(', ')} \r\n    </p>\r\n  );\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Teclado Virtual</h1>\r\n      </header>\r\n      <main>\r\n        <section className=\"session-init\">\r\n          <label htmlFor=\"username\">Nome de Usuário:</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Digite seu nome de usuário\"\r\n          />\r\n          <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n        </section>\r\n\r\n        {isSessionValid && (\r\n          <section className=\"session-details\">\r\n            <div className=\"generated-password\">\r\n              <h2>Senha Gerada:</h2>\r\n              {displayPassword()}\r\n            </div>\r\n\r\n            <div className=\"buttons-container\">\r\n              <h2>Clique nos botões abaixo para digitar a senha:</h2>\r\n              {displayButtons()}\r\n            </div>\r\n\r\n            <div className=\"user-input\">\r\n              <h3>Senha Selecionada:</h3>\r\n              <p>\r\n                {inputSequence.length > 0\r\n                  ? inputSequence.join(', ')\r\n                  : \"Nenhuma sequência selecionada ainda...\"}\r\n              </p>\r\n            </div>\r\n\r\n            <button className=\"validate-button\" onClick={handleValidatePassword}>\r\n              Validar Senha\r\n            </button>\r\n\r\n            <div className=\"token-info\">\r\n              <h3>Token de Verificação:</h3>\r\n              <p>{token}</p>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </main>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}