{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sessionId, setSessionId] = useState(''); // Sessão identificada apenas pelo session_id\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n\n  // Função para validar a sessão com o session_id\n  const handleValidateSession = async () => {\n    if (!sessionId) {\n      toast.error('Por favor, insira um session_id.');\n      return;\n    }\n    try {\n      // Chama o backend para validar a sessão\n      const response = await axios.post('http://127.0.0.1:8000/validate_session', {\n        session_id: sessionId\n      });\n      console.log('Sessão validada:', response.data);\n      if (response.data.is_valid) {\n        setPassword(formatSequence(response.data.sequence)); // Se a sessão for válida, define a senha\n        setToken(response.data.token); // Salva o token\n        setIsSessionValid(true);\n        generateButtons(response.data.sequence); // Gera os botões a partir da sequência\n      } else {\n        toast.error('Sessão inválida!');\n      }\n    } catch (error) {\n      console.error(\"Erro ao validar a sessão:\", error);\n      toast.error('Erro ao validar a sessão.');\n    }\n  };\n\n  // Função para gerar botões misturados, incluindo as alternativas corretas\n  const generateButtons = sequence => {\n    let correctPairs = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      let num1 = sequence[i];\n      let num2 = sequence[i + 1];\n      correctPairs.push([num1, num2]);\n    }\n    let allButtons = [...correctPairs];\n\n    // Adiciona pares falsos aleatórios\n    for (let i = 0; i < correctPairs.length; i++) {\n      let num1 = Math.floor(Math.random() * 10); // Número aleatório entre 0-9\n      let num2 = Math.floor(Math.random() * 10);\n      allButtons.push([num1, num2]);\n    }\n\n    // Embaralha os pares de botões\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\n    setButtons(allButtons);\n  };\n\n  // Formata a sequência de senha\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n\n  // Lógica de clique nos botões\n  const handleButtonClick = pair => {\n    const flatPassword = password.flat();\n    const nextExpectedNumber = flatPassword[inputSequence.length];\n    const isValid = pair.includes(nextExpectedNumber);\n    if (isValid) {\n      setInputSequence(prevSequence => [...prevSequence, nextExpectedNumber]);\n    } else {\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\n    }\n  };\n\n  // Validação da sequência\n  const handleValidatePassword = async () => {\n    if (!sessionId || password.length === 0) {\n      toast.error('Sessão não válida ou senha não definida.');\n      return;\n    }\n    const dataToSend = {\n      session_id: sessionId,\n      sequence: password.flat()\n    };\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', dataToSend, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Resposta da validação:', response.data);\n      toast.success('Sequência validada com sucesso.');\n    } catch (error) {\n      console.error(\"Erro na validação da sequência:\", error.response.data);\n      toast.error(`Erro na validação da sequência: ${error.response.data.detail}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sessionId\",\n        children: \"Session ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"sessionId\",\n        type: \"text\",\n        value: sessionId,\n        onChange: e => setSessionId(e.target.value),\n        placeholder: \"Digite seu session_id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleValidateSession,\n      children: \"Validar Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: buttons.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(pair),\n          disabled: isButtonDisabled,\n          children: [\"[\", pair[0], \" ou \", pair[1], \"]\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputSequence.map(pair => `[${pair[0]},${pair[1]}]`).join(' ') || \"Nenhuma sequência selecionada ainda...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uTdeU3nO176BAQ7zkFqcwsYmdfI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","handleValidateSession","error","response","post","session_id","console","log","data","is_valid","formatSequence","sequence","generateButtons","correctPairs","i","length","num1","num2","push","allButtons","Math","floor","random","sort","formatted","handleButtonClick","pair","flatPassword","flat","nextExpectedNumber","isValid","includes","prevSequence","handleValidatePassword","dataToSend","headers","Authorization","success","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","map","join","index","disabled","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [sessionId, setSessionId] = useState('');  // Sessão identificada apenas pelo session_id\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n\r\n  // Função para validar a sessão com o session_id\r\n  const handleValidateSession = async () => {\r\n    if (!sessionId) {\r\n      toast.error('Por favor, insira um session_id.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Chama o backend para validar a sessão\r\n      const response = await axios.post('http://127.0.0.1:8000/validate_session', { session_id: sessionId });\r\n      console.log('Sessão validada:', response.data);\r\n\r\n      if (response.data.is_valid) {\r\n        setPassword(formatSequence(response.data.sequence)); // Se a sessão for válida, define a senha\r\n        setToken(response.data.token);  // Salva o token\r\n        setIsSessionValid(true);\r\n        generateButtons(response.data.sequence); // Gera os botões a partir da sequência\r\n      } else {\r\n        toast.error('Sessão inválida!');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao validar a sessão:\", error);\r\n      toast.error('Erro ao validar a sessão.');\r\n    }\r\n  };\r\n\r\n  // Função para gerar botões misturados, incluindo as alternativas corretas\r\n  const generateButtons = (sequence) => {\r\n    let correctPairs = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      let num1 = sequence[i];\r\n      let num2 = sequence[i + 1];\r\n      correctPairs.push([num1, num2]);\r\n    }\r\n\r\n    let allButtons = [...correctPairs];\r\n\r\n    // Adiciona pares falsos aleatórios\r\n    for (let i = 0; i < correctPairs.length; i++) {\r\n      let num1 = Math.floor(Math.random() * 10);  // Número aleatório entre 0-9\r\n      let num2 = Math.floor(Math.random() * 10);\r\n      allButtons.push([num1, num2]);\r\n    }\r\n\r\n    // Embaralha os pares de botões\r\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\r\n    setButtons(allButtons);\r\n  };\r\n\r\n  // Formata a sequência de senha\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n  // Lógica de clique nos botões\r\n  const handleButtonClick = (pair) => {\r\n    const flatPassword = password.flat();\r\n    const nextExpectedNumber = flatPassword[inputSequence.length];\r\n    const isValid = pair.includes(nextExpectedNumber);\r\n\r\n    if (isValid) {\r\n      setInputSequence((prevSequence) => [...prevSequence, nextExpectedNumber]);\r\n    } else {\r\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\r\n    }\r\n  };\r\n\r\n  // Validação da sequência\r\n  const handleValidatePassword = async () => {\r\n    if (!sessionId || password.length === 0) {\r\n      toast.error('Sessão não válida ou senha não definida.');\r\n      return;\r\n    }\r\n\r\n    const dataToSend = {\r\n      session_id: sessionId, \r\n      sequence: password.flat() \r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', dataToSend, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      console.log('Resposta da validação:', response.data);\r\n      toast.success('Sequência validada com sucesso.');\r\n    } catch (error) {\r\n      console.error(\"Erro na validação da sequência:\", error.response.data);\r\n      toast.error(`Erro na validação da sequência: ${error.response.data.detail}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div>\r\n        <label htmlFor=\"sessionId\">Session ID:</label>\r\n        <input\r\n          id=\"sessionId\"\r\n          type=\"text\"\r\n          value={sessionId}\r\n          onChange={(e) => setSessionId(e.target.value)}\r\n          placeholder=\"Digite seu session_id\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleValidateSession}>Validar Sessão</button>\r\n\r\n      {isSessionValid ? (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          <p>{password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')}</p>\r\n\r\n          <h2>Clique nos botões abaixo para digitar a senha:</h2>\r\n          <div className=\"buttons\">\r\n            {buttons.map((pair, index) => (\r\n              <button key={index} onClick={() => handleButtonClick(pair)} disabled={isButtonDisabled}>\r\n                [{pair[0]} ou {pair[1]}]\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <p>{inputSequence.map(pair => `[${pair[0]},${pair[1]}]`).join(' ') || \"Nenhuma sequência selecionada ainda...\"}</p>\r\n\r\n          <button onClick={handleValidatePassword}>Validar Senha</button>\r\n\r\n          <div>\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}