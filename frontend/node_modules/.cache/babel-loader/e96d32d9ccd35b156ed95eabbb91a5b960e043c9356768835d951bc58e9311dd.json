{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport CryptoJS from 'crypto-js'; // Importe a biblioteca\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n  const [isLoading, setIsLoading] = useState(false); // Para controle de loading\n  const [hashToNumberMap, setHashToNumberMap] = useState({});\n\n  // Função para converter um hash em um número curto (ex.: entre 1000 e 9999)\n  const hashToShortNumber = input => {\n    // Gera um hash SHA-256 do input\n    const hash = CryptoJS.SHA256(input.toString()).toString();\n    // Pega os primeiros 8 caracteres do hash e converte para decimal\n    const hashPart = parseInt(hash.slice(0, 8), 16);\n    // Limita o número ao intervalo 1000-9999\n    return 0 + hashPart % 9; // Garante que o número esteja entre 1000 e 9999\n  };\n  const hashToTwoNumbers = input => {\n    // Gera um hash SHA-256 do input\n    const hash = CryptoJS.SHA256(input.toString()).toString();\n\n    // Pega diferentes partes do hash para garantir exclusividade\n    const num1 = parseInt(hash.slice(0, 8), 16) % 10; // Primeiro número\n    const num2 = parseInt(hash.slice(8, 16), 16) % 10; // Segundo número\n\n    // Certifica-se de que num1 e num2 são sempre exclusivos para esse par\n    return [num1, num2];\n  };\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(formatSequence(data.sequence)); // Guardando a senha formatada\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence); // Gera botões com números misturados\n\n        console.log(\"Token de Verificação:\", data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  };\n\n  // Função para formatar a sequência em pares\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n\n  // Função para gerar os botões (misturados)\n  // Função para gerar os botões (misturados)\n  const generateButtons = sequence => {\n    let uniqueHashes = new Map(); // Armazena os hashes e seus números gerados\n    let correctPairs = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      let num1 = sequence[i];\n      let num2 = sequence[i + 1];\n      correctPairs.push([num1, num2]);\n    }\n    let allButtons = [];\n    correctPairs.forEach((pair, index) => {\n      const hashKey = `${pair[0]}${pair[1]}${index}`;\n      if (!uniqueHashes.has(hashKey)) {\n        uniqueHashes.set(hashKey, hashToTwoNumbers(hashKey));\n      }\n      allButtons.push({\n        pair,\n        shortNumbers: uniqueHashes.get(hashKey),\n        hashKey,\n        isCorrect: true\n      });\n    });\n\n    // Embaralha a ordem dos botões (somente os corretos)\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\n\n    // Remove a parte de adicionar os botões \"fakes\"\n\n    setButtons(allButtons);\n  };\n\n  // Exibe os botões misturados\n  const displayButtons = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map(button => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(button.pair),\n        disabled: isButtonDisabled,\n        className: \"button\",\n        style: inputSequence.includes(button.pair[0]) || inputSequence.includes(button.pair[1]) ? {\n          backgroundColor: 'green'\n        } : {},\n        children: [button.shortNumbers[0], \" \", button.shortNumbers[1], \" \"]\n      }, button.hashKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Função para lidar com o clique nos botões\n  const handleButtonClick = pair => {\n    const flatPassword = password.flat();\n    const nextExpectedIndex = inputSequence.length;\n    const expectedPair = password[Math.floor(nextExpectedIndex / 2)];\n    if (nextExpectedIndex % 2 === 0) {\n      // Primeiro número do par\n      if (pair[0] !== expectedPair[0]) {\n        toast.error(`Número ${expectedPair[0]} esperado. Tente novamente.`);\n        return;\n      }\n    } else {\n      // Segundo número do par\n      if (pair[1] !== expectedPair[1]) {\n        toast.error(`Número ${expectedPair[1]} esperado. Tente novamente.`);\n        return;\n      }\n    }\n    setInputSequence(prevSequence => {\n      const newSequence = [...prevSequence, flatPassword[nextExpectedIndex]];\n      console.log('Sequência do usuário após clique:', newSequence);\n      return newSequence;\n    });\n  };\n\n  // Exibe a senha gerada com os números curtos\n  const displayGeneratedPassword = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 36\n    }, this);\n\n    // Filtrando apenas os botões corretos e exibindo os números curtos correspondentes\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [password.map(pair => {\n          // Para cada par, vamos gerar os números curtos correspondentes\n          const button = buttons.find(b => b.pair[0] === pair[0] && b.pair[1] === pair[1] && b.isCorrect);\n          if (button) {\n            return `${button.shortNumbers[0]} ${button.shortNumbers[1]}`; // Exibe os números curtos correspondentes\n          }\n          return '';\n        }).join(' '), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }, this);\n  };\n  const getUniqueNumberForHash = hash => {\n    let number = hashToNumberMap[hash];\n    if (!number) {\n      // Se o hash não existe, atribui um novo número (pode ser o próximo número na sequência, por exemplo)\n      number = Object.keys(hashToNumberMap).length + 1;\n      setHashToNumberMap(prevMap => ({\n        ...prevMap,\n        [hash]: number\n      }));\n    }\n    return number;\n  };\n\n  // Função para validar a sequência\n  const handleValidatePassword = async () => {\n    try {\n      console.log('Session ID enviado:', sessionId);\n      const formattedSequence = password.flat().map(item => item.toString());\n      console.log('Senha do usuário antes do envio:', formattedSequence);\n      const data = {\n        session_id: sessionId,\n        sequence: formattedSequence\n      };\n\n      // Criptografa o sessionId antes de enviar ao backend\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', data, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Encrypted-Session-Id': encryptedSessionId // Envia sessionId criptografado\n        }\n      });\n      console.log('✅ Sequência validada com sucesso:', response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n    } catch (error) {\n      console.log('Error response:', error.response ? error.response.data : error.message);\n      toast.error('Erro ao validar a sequência');\n    }\n  };\n\n  // Função para gerar sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      className: \"primary-button\",\n      disabled: isLoading,\n      children: isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [displayGeneratedPassword(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: displayButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputSequence.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        className: \"primary-button\",\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"token-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+lQKlT0wK2Sug2ny/KRnhK6SODQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","CryptoJS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","isLoading","setIsLoading","hashToNumberMap","setHashToNumberMap","hashToShortNumber","input","hash","SHA256","toString","hashPart","parseInt","slice","hashToTwoNumbers","num1","num2","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","formatSequence","generateButtons","success","formatted","i","length","push","uniqueHashes","Map","correctPairs","allButtons","forEach","pair","index","hashKey","has","set","shortNumbers","get","isCorrect","sort","Math","random","displayButtons","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","button","onClick","handleButtonClick","disabled","style","includes","backgroundColor","flatPassword","flat","nextExpectedIndex","expectedPair","floor","prevSequence","newSequence","displayGeneratedPassword","find","b","join","getUniqueNumberForHash","number","Object","keys","prevMap","handleValidatePassword","formattedSequence","item","encryptedSessionId","AES","encrypt","response","post","headers","Authorization","message","htmlFor","id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\nimport CryptoJS from 'crypto-js'; // Importe a biblioteca\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false); // Para controle de loading\r\n  const [hashToNumberMap, setHashToNumberMap] = useState({});\r\n\r\n  // Função para converter um hash em um número curto (ex.: entre 1000 e 9999)\r\n  const hashToShortNumber = (input) => {\r\n    // Gera um hash SHA-256 do input\r\n    const hash = CryptoJS.SHA256(input.toString()).toString();\r\n    // Pega os primeiros 8 caracteres do hash e converte para decimal\r\n    const hashPart = parseInt(hash.slice(0, 8), 16);\r\n    // Limita o número ao intervalo 1000-9999\r\n    return 0 + (hashPart % 9); // Garante que o número esteja entre 1000 e 9999\r\n  };\r\n  const hashToTwoNumbers = (input) => {\r\n    // Gera um hash SHA-256 do input\r\n    const hash = CryptoJS.SHA256(input.toString()).toString();\r\n    \r\n    // Pega diferentes partes do hash para garantir exclusividade\r\n    const num1 = parseInt(hash.slice(0, 8), 16) % 10; // Primeiro número\r\n    const num2 = parseInt(hash.slice(8, 16), 16) % 10; // Segundo número\r\n    \r\n    // Certifica-se de que num1 e num2 são sempre exclusivos para esse par\r\n    return [num1, num2];\r\n  };\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(formatSequence(data.sequence)); // Guardando a senha formatada\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence); // Gera botões com números misturados\r\n\r\n        console.log(\"Token de Verificação:\", data.token);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  };\r\n\r\n  // Função para formatar a sequência em pares\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n\r\n  // Função para gerar os botões (misturados)\r\n // Função para gerar os botões (misturados)\r\n const generateButtons = (sequence) => {\r\n  let uniqueHashes = new Map(); // Armazena os hashes e seus números gerados\r\n  let correctPairs = [];\r\n  \r\n  for (let i = 0; i < sequence.length; i += 2) {\r\n    let num1 = sequence[i];\r\n    let num2 = sequence[i + 1];\r\n    correctPairs.push([num1, num2]);\r\n  }\r\n\r\n  let allButtons = [];\r\n  correctPairs.forEach((pair, index) => {\r\n    const hashKey = `${pair[0]}${pair[1]}${index}`;\r\n    if (!uniqueHashes.has(hashKey)) {\r\n      uniqueHashes.set(hashKey, hashToTwoNumbers(hashKey));\r\n    }\r\n    allButtons.push({ pair, shortNumbers: uniqueHashes.get(hashKey), hashKey, isCorrect: true });\r\n  });\r\n\r\n  // Embaralha a ordem dos botões (somente os corretos)\r\n  allButtons = allButtons.sort(() => Math.random() - 0.5);\r\n\r\n  // Remove a parte de adicionar os botões \"fakes\"\r\n\r\n  setButtons(allButtons);\r\n};\r\n\r\n\r\n  // Exibe os botões misturados\r\n  const displayButtons = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n\r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((button) => (\r\n          <button\r\n            key={button.hashKey}\r\n            onClick={() => handleButtonClick(button.pair)}\r\n            disabled={isButtonDisabled}\r\n            className=\"button\"\r\n            style={\r\n              inputSequence.includes(button.pair[0]) || inputSequence.includes(button.pair[1])\r\n                ? { backgroundColor: 'green' }\r\n                : {}\r\n            }\r\n          >\r\n            {button.shortNumbers[0]} {button.shortNumbers[1]} {/* Exibe os dois números curtos */}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões\r\n  const handleButtonClick = (pair) => {\r\n    const flatPassword = password.flat();\r\n    const nextExpectedIndex = inputSequence.length;\r\n    const expectedPair = password[Math.floor(nextExpectedIndex / 2)];\r\n    \r\n    if (nextExpectedIndex % 2 === 0) { // Primeiro número do par\r\n      if (pair[0] !== expectedPair[0]) {\r\n        toast.error(`Número ${expectedPair[0]} esperado. Tente novamente.`);\r\n        return;\r\n      }\r\n    } else { // Segundo número do par\r\n      if (pair[1] !== expectedPair[1]) {\r\n        toast.error(`Número ${expectedPair[1]} esperado. Tente novamente.`);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    setInputSequence((prevSequence) => {\r\n      const newSequence = [...prevSequence, flatPassword[nextExpectedIndex]];\r\n      console.log('Sequência do usuário após clique:', newSequence);\r\n      return newSequence;\r\n    });\r\n  };\r\n  \r\n  // Exibe a senha gerada com os números curtos\r\n  const displayGeneratedPassword = () => {\r\n  if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n\r\n  // Filtrando apenas os botões corretos e exibindo os números curtos correspondentes\r\n  return (\r\n    <div>\r\n      <h2>Senha Gerada:</h2>\r\n      <p>\r\n        {password\r\n          .map(pair => {\r\n            // Para cada par, vamos gerar os números curtos correspondentes\r\n            const button = buttons.find(b => b.pair[0] === pair[0] && b.pair[1] === pair[1] && b.isCorrect);\r\n            if (button) {\r\n              return `${button.shortNumbers[0]} ${button.shortNumbers[1]}`;  // Exibe os números curtos correspondentes\r\n            }\r\n            return '';\r\n          })\r\n          .join(' ')}  {/* Junta os números curtos com espaço */}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getUniqueNumberForHash = (hash) => {\r\n  let number = hashToNumberMap[hash];\r\n  \r\n  if (!number) {\r\n    // Se o hash não existe, atribui um novo número (pode ser o próximo número na sequência, por exemplo)\r\n    number = Object.keys(hashToNumberMap).length + 1;\r\n    setHashToNumberMap(prevMap => ({\r\n      ...prevMap,\r\n      [hash]: number\r\n    }));\r\n  }\r\n  \r\n  return number;\r\n};\r\n\r\n\r\n  // Função para validar a sequência\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      console.log('Session ID enviado:', sessionId);\r\n\r\n      const formattedSequence = password.flat().map((item) => item.toString());\r\n      console.log('Senha do usuário antes do envio:', formattedSequence);\r\n\r\n      const data = {\r\n        session_id: sessionId,\r\n        sequence: formattedSequence,\r\n      };\r\n\r\n      // Criptografa o sessionId antes de enviar ao backend\r\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\r\n\r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Encrypted-Session-Id': encryptedSessionId, // Envia sessionId criptografado\r\n        },\r\n      });\r\n\r\n      console.log('✅ Sequência validada com sucesso:', response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      console.log('Error response:', error.response ? error.response.data : error.message);\r\n      toast.error('Erro ao validar a sequência');\r\n    }\r\n  };\r\n\r\n  // Função para gerar sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div className=\"form-container\">\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession} className=\"primary-button\" disabled={isLoading}>\r\n        {isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'}\r\n      </button>\r\n\r\n      {isSessionValid ? (\r\n        <>\r\n          {displayGeneratedPassword()}\r\n\r\n          <h2>Clique nos botões abaixo para digitar a senha:</h2>\r\n          <div className=\"buttons-container\">{displayButtons()}</div>\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <p>{inputSequence.join(' ')}</p>\r\n\r\n          <button onClick={handleValidatePassword} className=\"primary-button\">\r\n            Validar Senha\r\n          </button>\r\n\r\n          <div className=\"token-info\">\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}