{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport CryptoJS from 'crypto-js'; // Importe a biblioteca CryptoJS\nimport https from 'https';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      // Define 'data' corretamente\n      const data = {\n        username\n      };\n      const response = await axios.post('https://localhost:8000/generate_session', data, {\n        httpsAgent: agent\n      });\n      console.log('Dados recebidos da API:', response.data);\n      if (response.data && response.data.sequence && Array.isArray(response.data.sequence)) {\n        setSessionId(response.data.session_id);\n        setPassword(formatSequence(response.data.sequence));\n        setToken(response.data.token);\n        setIsSessionValid(true);\n        generateButtons(response.data.sequence);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  };\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n  const generateButtons = sequence => {\n    let correctPairs = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      let num1 = sequence[i];\n      let num2 = sequence[i + 1];\n      correctPairs.push([num1, num2]);\n    }\n    let allButtons = [];\n    correctPairs.forEach(pair => {\n      allButtons.push(pair);\n    });\n    for (let i = 0; i < correctPairs.length; i++) {\n      let num1 = Math.floor(Math.random() * 10);\n      let num2 = Math.floor(Math.random() * 10);\n      allButtons.push([num1, num2]);\n    }\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\n    setButtons(allButtons);\n  };\n  const displayButtons = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(pair),\n        disabled: isButtonDisabled,\n        children: [\"[\", pair[0], \" ou \", pair[1], \"]\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  };\n  const apiUrl = \"https://127.0.0.1:443\"; // Use 127.0.0.1 para localhost\n  // Certifique-se de usar o endereço correto\n\n  const agent = new https.Agent({\n    rejectUnauthorized: false // Isso ignora os erros de certificados autoassinados\n  });\n  axios.post('https://localhost:8000/generate_session', data, {\n    httpsAgent: agent\n  }).then(response => {\n    console.log(response.data);\n  }).catch(error => {\n    console.error('Erro na requisição:', error);\n  });\n  // URL com HTTPS\n\n  const handleValidatePassword = async () => {\n    try {\n      const formattedSequence = [];\n      for (let i = 0; i < inputSequence.length; i += 2) {\n        formattedSequence.push([inputSequence[i], inputSequence[i + 1]]);\n      }\n      const isSequenceCorrect = formattedSequence.every((pair, index) => {\n        return pair[0] === password[index][0] && pair[1] === password[index][1];\n      });\n      if (!isSequenceCorrect) {\n        toast.error('Sequência incorreta');\n        return;\n      }\n      const response = await axios.post(`https://0.0.0.1:443/validate_sequence`, {\n        httpsAgent: new https.Agent({\n          rejectUnauthorized: false\n        }),\n        session_id: sessionId,\n        sequence: formattedSequence\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n      setIsButtonDisabled(true);\n    } catch (error) {\n      console.log('Error response:', error.response ? error.response.data : error.message);\n      toast.error('Erro ao validar a sequência');\n    }\n  };\n  const handleButtonClick = pair => {\n    const flatPassword = password.flat(); // Cria uma lista plana da senha\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Obtém o próximo número esperado\n\n    const isValid = pair.includes(nextExpectedNumber); // Verifica se o número selecionado está no par\n\n    if (isValid) {\n      setInputSequence(prevSequence => {\n        const newSequence = [...prevSequence, nextExpectedNumber];\n        console.log(\"Sequência do usuário após clique:\", newSequence);\n        return newSequence;\n      });\n    } else {\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\n    }\n  };\n  const generateSession = async username => {\n    const response = await axios.post(`${apiUrl}/generate_session`, {\n      username\n    });\n\n    // Criptografando o ID de Sessão antes de usá-lo\n    const encryptedSessionId = encryptSessionId(response.data.session_id);\n    setSessionId(encryptedSessionId);\n    setPassword(formatSequence(response.data.sequence));\n    setToken(response.data.token);\n    console.log('ID da sessão criptografado:', encryptedSessionId);\n    return response.data;\n  };\n  const encryptSessionId = sessionId => {\n    // Use CryptoJS para criptografar o ID de Sessão\n    const encrypted = CryptoJS.AES.encrypt(sessionId, 'sua_chave_secreta').toString();\n    return encrypted;\n  };\n  const displayPassword = () => {\n    if (password.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando senha...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 39\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), displayPassword(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), displayButtons(), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputSequence.map(pair => `[${pair[0]},${pair[1]}]`).join(' ') || \"Nenhuma sequência selecionada ainda...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QP7fkk/X+Eyp9jbv71tHJv8d/Ls=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","axios","CryptoJS","https","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","handleGenerateSession","error","data","response","post","httpsAgent","agent","console","log","sequence","Array","isArray","session_id","formatSequence","generateButtons","success","formatted","i","length","push","correctPairs","num1","num2","allButtons","forEach","pair","Math","floor","random","sort","displayButtons","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","onClick","handleButtonClick","disabled","apiUrl","Agent","rejectUnauthorized","then","catch","handleValidatePassword","formattedSequence","isSequenceCorrect","every","headers","Authorization","message","flatPassword","flat","nextExpectedNumber","isValid","includes","prevSequence","newSequence","generateSession","encryptedSessionId","encryptSessionId","encrypted","AES","encrypt","toString","displayPassword","join","htmlFor","id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\nimport CryptoJS from 'crypto-js';  // Importe a biblioteca CryptoJS\r\nimport https from 'https';\r\n\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      // Define 'data' corretamente\r\n      const data = { username };  \r\n      const response = await axios.post('https://localhost:8000/generate_session', data, { httpsAgent: agent });\r\n      console.log('Dados recebidos da API:', response.data);\r\n  \r\n      if (response.data && response.data.sequence && Array.isArray(response.data.sequence)) {\r\n        setSessionId(response.data.session_id);\r\n        setPassword(formatSequence(response.data.sequence));\r\n        setToken(response.data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(response.data.sequence);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n  const generateButtons = (sequence) => {\r\n    let correctPairs = [];\r\n    \r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      let num1 = sequence[i];\r\n      let num2 = sequence[i + 1];\r\n      \r\n      correctPairs.push([num1, num2]);\r\n    }\r\n\r\n    let allButtons = [];\r\n    correctPairs.forEach(pair => {\r\n      allButtons.push(pair);\r\n    });\r\n\r\n    for (let i = 0; i < correctPairs.length; i++) {\r\n      let num1 = Math.floor(Math.random() * 10);  \r\n      let num2 = Math.floor(Math.random() * 10);\r\n      allButtons.push([num1, num2]);\r\n    }\r\n\r\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\r\n\r\n    setButtons(allButtons);\r\n  };\r\n\r\n  const displayButtons = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n\r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((pair, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleButtonClick(pair)} \r\n            disabled={isButtonDisabled}\r\n          >\r\n            [{pair[0]} ou {pair[1]}]\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const apiUrl = \"https://127.0.0.1:443\";  // Use 127.0.0.1 para localhost\r\n  // Certifique-se de usar o endereço correto\r\n\r\n  const agent = new https.Agent({  \r\n    rejectUnauthorized: false  // Isso ignora os erros de certificados autoassinados\r\n  });\r\n  \r\n  axios.post('https://localhost:8000/generate_session', data, { httpsAgent: agent })\r\n    .then(response => {\r\n      console.log(response.data);\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro na requisição:', error);\r\n    });\r\n  // URL com HTTPS\r\n\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      const formattedSequence = [];\r\n      for (let i = 0; i < inputSequence.length; i += 2) {\r\n        formattedSequence.push([inputSequence[i], inputSequence[i + 1]]);\r\n      }\r\n\r\n      const isSequenceCorrect = formattedSequence.every((pair, index) => {\r\n        return pair[0] === password[index][0] && pair[1] === password[index][1];\r\n      });\r\n\r\n      if (!isSequenceCorrect) {\r\n        toast.error('Sequência incorreta');\r\n        return;\r\n      }\r\n\r\nconst response = await axios.post(`https://0.0.0.1:443/validate_sequence`, {\r\n  httpsAgent: new https.Agent({ rejectUnauthorized: false }),\r\n  session_id: sessionId,\r\n  sequence: formattedSequence,\r\n}, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n      setIsButtonDisabled(true);\r\n    } catch (error) {\r\n      console.log('Error response:', error.response ? error.response.data : error.message);\r\n      toast.error('Erro ao validar a sequência');\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = (pair) => {\r\n    const flatPassword = password.flat();  // Cria uma lista plana da senha\r\n    const nextExpectedNumber = flatPassword[inputSequence.length];  // Obtém o próximo número esperado\r\n    \r\n    const isValid = pair.includes(nextExpectedNumber);  // Verifica se o número selecionado está no par\r\n  \r\n    if (isValid) {\r\n      setInputSequence((prevSequence) => {\r\n        const newSequence = [...prevSequence, nextExpectedNumber];\r\n        console.log(\"Sequência do usuário após clique:\", newSequence);\r\n        return newSequence;\r\n      });\r\n    } else {\r\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\r\n    }\r\n  };\r\n\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post(`${apiUrl}/generate_session`, { username });\r\n\r\n    \r\n    // Criptografando o ID de Sessão antes de usá-lo\r\n    const encryptedSessionId = encryptSessionId(response.data.session_id);\r\n    \r\n    setSessionId(encryptedSessionId);\r\n    setPassword(formatSequence(response.data.sequence));\r\n    setToken(response.data.token);\r\n    \r\n    console.log('ID da sessão criptografado:', encryptedSessionId);\r\n    \r\n    return response.data;\r\n  };\r\n\r\n  const encryptSessionId = (sessionId) => {\r\n    // Use CryptoJS para criptografar o ID de Sessão\r\n    const encrypted = CryptoJS.AES.encrypt(sessionId, 'sua_chave_secreta').toString();\r\n    return encrypted;\r\n  };\r\n\r\n  const displayPassword = () => {\r\n    if (password.length === 0) return <p>Carregando senha...</p>;\r\n\r\n    return (\r\n      <p>\r\n        {password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div>\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n\r\n      {isSessionValid ? (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          {displayPassword()}\r\n\r\n          <h2>Clique nos botões abaixo para digitar a senha:</h2>\r\n          {displayButtons()}\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <p>{inputSequence.map(pair => `[${pair[0]},${pair[1]}]`).join(' ') || \"Nenhuma sequência selecionada ainda...\"}</p>\r\n\r\n          <button onClick={handleValidatePassword}>Validar Senha</button>\r\n\r\n          {/* Exibe o Token de Verificação */}\r\n          <div>\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}