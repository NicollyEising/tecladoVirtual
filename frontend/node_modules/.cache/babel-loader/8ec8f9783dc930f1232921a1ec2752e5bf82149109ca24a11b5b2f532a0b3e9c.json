{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]); // Senha gerada com pares de números\n  const [inputPassword, setInputPassword] = useState([]); // Senha digitada\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  console.log(password);\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(data.sequence); // Guardando a senha\n        setToken(data.token);\n        setIsSessionValid(true);\n        console.log(\"Token de Verificação:\", data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  };\n\n  // Função para enviar a senha e validar no backend\n  const handleValidatePassword = async () => {\n    try {\n      // Wrap each element of the sequence in an array\n      const wrappedSequence = inputPassword.map(num => [num]);\n      console.log(\"Senha do usuário antes do envio:\", wrappedSequence); // Check the new sequence format\n\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: wrappedSequence // Send the wrapped sequence\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n      setIsButtonDisabled(true); // Disable buttons after validation\n    } catch (error) {\n      console.log(error.response ? error.response.data : error.message); // Log error details\n      toast.error('Sequência incorreta');\n    }\n  };\n\n  // Função para gerar a sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n\n  // Função para lidar com o clique nos botões da sequência\n  const handleButtonClick = position => {\n    const selectedNumber = password[position].number; // Pega o número baseado na posição do botão\n    setInputPassword(prevSequence => {\n      const newSequence = [...prevSequence, selectedNumber];\n      console.log(\"Sequência do usuário após clique:\", newSequence);\n      return newSequence;\n    });\n  };\n\n  // Verificação do estado da sequência\n  useEffect(() => {\n    if (Array.isArray(password) && password.length > 0) {\n      console.log('Senha carregada:', password);\n    }\n  }, [password]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), password.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando senha...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Array.isArray(password) && password.length > 0 ? password.map((pair, index) => {\n          // Verifique se o item é uma array válida e não está indefinido\n          if (Array.isArray(pair) && pair.length > 0) {\n            return pair.join(' / '); // Aplica join nos elementos internos da array\n          }\n          return `Erro no item ${index + 1}: Estrutura inválida ou vazio`;\n        }).join(' ') : 'Senha não gerada ou estrutura incorreta'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos n\\xFAmeros abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), password.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Esperando sequ\\xEAncia...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: password.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(index),\n          disabled: isButtonDisabled // Desabilita os botões após a validação\n          ,\n          children: [pair.display.join(' / '), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: inputPassword.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nenhuma sequ\\xEAncia selecionada ainda...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this) : inputPassword.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YoLxDjlV9yuUAVxrmqCldVBE/Go=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputPassword","setInputPassword","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","console","log","handleGenerateSession","error","data","generateSession","sequence","Array","isArray","session_id","success","handleValidatePassword","wrappedSequence","map","num","response","post","headers","Authorization","message","handleButtonClick","position","selectedNumber","number","prevSequence","newSequence","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","pair","index","join","disabled","display","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]); // Senha gerada com pares de números\r\n  const [inputPassword, setInputPassword] = useState([]); // Senha digitada\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\nconsole.log(password);\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(data.sequence); // Guardando a senha\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n\r\n        console.log(\"Token de Verificação:\", data.token);\r\n\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  };\r\n\r\n  // Função para enviar a senha e validar no backend\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      // Wrap each element of the sequence in an array\r\n      const wrappedSequence = inputPassword.map(num => [num]);\r\n  \r\n      console.log(\"Senha do usuário antes do envio:\", wrappedSequence); // Check the new sequence format\r\n  \r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\r\n        session_id: sessionId,\r\n        sequence: wrappedSequence,  // Send the wrapped sequence\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n  \r\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n      setIsButtonDisabled(true);  // Disable buttons after validation\r\n    } catch (error) {\r\n      console.log(error.response ? error.response.data : error.message);  // Log error details\r\n      toast.error('Sequência incorreta');\r\n    }\r\n  };\r\n\r\n  // Função para gerar a sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões da sequência\r\n  const handleButtonClick = (position) => {\r\n    const selectedNumber = password[position].number; // Pega o número baseado na posição do botão\r\n    setInputPassword((prevSequence) => {\r\n      const newSequence = [...prevSequence, selectedNumber];\r\n      console.log(\"Sequência do usuário após clique:\", newSequence);\r\n      return newSequence;\r\n    });\r\n  };\r\n\r\n  // Verificação do estado da sequência\r\n  useEffect(() => {\r\n    if (Array.isArray(password) && password.length > 0) {\r\n      console.log('Senha carregada:', password);\r\n    }\r\n  }, [password]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div>\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n\r\n      {isSessionValid ? (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          {password.length === 0 ? (\r\n            <p>Carregando senha...</p>\r\n          ) : (\r\n<p>\r\n  {Array.isArray(password) && password.length > 0\r\n    ? password.map((pair, index) => {\r\n        // Verifique se o item é uma array válida e não está indefinido\r\n        if (Array.isArray(pair) && pair.length > 0) {\r\n          return pair.join(' / '); // Aplica join nos elementos internos da array\r\n        }\r\n        return `Erro no item ${index + 1}: Estrutura inválida ou vazio`;\r\n      }).join(' ') \r\n    : 'Senha não gerada ou estrutura incorreta'}\r\n</p>\r\n\r\n\r\n\r\n          )}\r\n\r\n          <h2>Clique nos números abaixo para digitar a senha:</h2>\r\n          {password.length === 0 ? (\r\n            <p>Esperando sequência...</p>\r\n          ) : (\r\n            <div className=\"buttons\">\r\n              {password.map((pair, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => handleButtonClick(index)}\r\n                  disabled={isButtonDisabled} // Desabilita os botões após a validação\r\n                >\r\n                  {pair.display.join(' / ')} {/* Exibe os dois números no botão */}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <ul>\r\n            {inputPassword.length === 0 ? (\r\n              <p>Nenhuma sequência selecionada ainda...</p>\r\n            ) : (\r\n              inputPassword.map((num, index) => (\r\n                <li key={index}>{num}</li>\r\n              ))\r\n            )}\r\n          </ul>\r\n\r\n          <button onClick={handleValidatePassword}>Validar Senha</button>\r\n\r\n          {/* Exibe o Token de Verificação */}\r\n          <div>\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}