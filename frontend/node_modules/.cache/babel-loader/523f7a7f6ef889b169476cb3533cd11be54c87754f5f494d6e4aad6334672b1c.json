{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport CryptoJS from 'crypto-js'; // Importe a biblioteca\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n  const [isLoading, setIsLoading] = useState(false); // Para controle de loading\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    setIsLoading(true); // Ativa o loading\n\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(formatSequence(data.sequence)); // Guardando a senha formatada\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence); // Gera botões com misturados\n\n        console.log(\"Token de Verificação:\", data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    } finally {\n      setIsLoading(false); // Desativa o loading\n    }\n  };\n\n  // Função para formatar a sequência em pares\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n\n  // Função para gerar os botões (misturados)\n  const generateButtons = () => {\n    const combinations = gerarCombinacoesUnicas();\n    setUniqueCombinations(combinations);\n    const allButtons = combinations.map(comb => comb);\n\n    // Adiciona botões com valores alternativos (números aleatórios)\n    for (let i = 0; i < allButtons.length; i++) {\n      let num1 = Math.floor(Math.random() * 10);\n      let num2 = Math.floor(Math.random() * 10);\n      allButtons.push([num1, num2]);\n    }\n\n    // Embaralha a ordem dos botões\n    allButtons.sort(() => Math.random() - 0.5);\n    setButtons(allButtons);\n  };\n\n  // Exibe os botões misturados\n  const displayButtons = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(pair) // Passa o par inteiro para a função de clique\n        ,\n        disabled: isButtonDisabled,\n        className: \"button\",\n        style: inputSequence.includes(pair[0]) || inputSequence.includes(pair[1]) ? {\n          backgroundColor: 'green'\n        } : {},\n        children: uniqueCombinations[index] ? `[${uniqueCombinations[index][0]} ou ${uniqueCombinations[index][1]}]` : 'Número Oculto'\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Função para lidar com o clique nos botões\n  const handleButtonClick = pair => {\n    const flatPassword = password.flat(); // \"Achata\" a senha para facilitar a comparação\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Obtém o próximo número esperado da senha\n\n    const isValid = pair.includes(nextExpectedNumber); // Verifica se o próximo número esperado está no par\n\n    if (isValid) {\n      setInputSequence(prevSequence => {\n        const newSequence = [...prevSequence, nextExpectedNumber];\n        console.log(\"Sequência do usuário após clique:\", newSequence);\n        return newSequence;\n      });\n    } else {\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\n    }\n  };\n\n  // Função para validar a sequência\n  const handleValidatePassword = async () => {\n    try {\n      console.log(\"Session ID enviado:\", sessionId);\n      const formattedSequence = password.flat().map(item => item.toString());\n      console.log(\"Senha do usuário antes do envio:\", formattedSequence);\n      const data = {\n        session_id: sessionId,\n        sequence: formattedSequence\n      };\n\n      // Criptografa o sessionId antes de enviar ao backend\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\n      const response = await axios.post(\"http://127.0.0.1:8000/validate_sequence\", data, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Encrypted-Session-Id': encryptedSessionId // Envia sessionId criptografado\n        }\n      });\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n    } catch (error) {\n      console.log('Error response:', error.response ? error.response.data : error.message);\n      toast.error('Erro ao validar a sequência');\n    }\n  };\n\n  // Função para gerar sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      className: \"primary-button\",\n      disabled: isLoading,\n      children: isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: displayButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputSequence.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        className: \"primary-button\",\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"token-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eIx+b+r9j2UTAAJYly2mAUAaAp8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","CryptoJS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","isLoading","setIsLoading","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","formatSequence","generateButtons","success","formatted","i","length","push","combinations","gerarCombinacoesUnicas","setUniqueCombinations","allButtons","map","comb","num1","Math","floor","random","num2","sort","displayButtons","children","fileName","_jsxFileName","lineNumber","columnNumber","className","pair","index","onClick","handleButtonClick","disabled","style","includes","backgroundColor","uniqueCombinations","flatPassword","flat","nextExpectedNumber","isValid","prevSequence","newSequence","handleValidatePassword","formattedSequence","item","toString","encryptedSessionId","AES","encrypt","response","post","headers","Authorization","message","htmlFor","id","type","value","onChange","e","target","placeholder","join","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\nimport CryptoJS from 'crypto-js';  // Importe a biblioteca\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false); // Para controle de loading\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n\r\n  \r\n\r\n    setIsLoading(true); // Ativa o loading\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(formatSequence(data.sequence)); // Guardando a senha formatada\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence); // Gera botões com misturados\r\n\r\n        console.log(\"Token de Verificação:\", data.token);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    } finally {\r\n      setIsLoading(false); // Desativa o loading\r\n    }\r\n  };\r\n\r\n  // Função para formatar a sequência em pares\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n  // Função para gerar os botões (misturados)\r\n  const generateButtons = () => {\r\n    const combinations = gerarCombinacoesUnicas();\r\n    setUniqueCombinations(combinations);\r\n    \r\n    const allButtons = combinations.map(comb => comb);\r\n    \r\n    // Adiciona botões com valores alternativos (números aleatórios)\r\n    for (let i = 0; i < allButtons.length; i++) {\r\n      let num1 = Math.floor(Math.random() * 10);\r\n      let num2 = Math.floor(Math.random() * 10);\r\n      allButtons.push([num1, num2]);\r\n    }\r\n\r\n    // Embaralha a ordem dos botões\r\n    allButtons.sort(() => Math.random() - 0.5);\r\n    setButtons(allButtons);\r\n  };\r\n\r\n\r\n  // Exibe os botões misturados\r\n  const displayButtons = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n\r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((pair, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleButtonClick(pair)}  // Passa o par inteiro para a função de clique\r\n            disabled={isButtonDisabled}\r\n            className=\"button\"\r\n            style={inputSequence.includes(pair[0]) || inputSequence.includes(pair[1]) ? { backgroundColor: 'green' } : {}}\r\n          >\r\n            {/* Exibe os números gerados dentro dos botões */}\r\n            {uniqueCombinations[index] \r\n              ? `[${uniqueCombinations[index][0]} ou ${uniqueCombinations[index][1]}]`\r\n              : 'Número Oculto'}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\n  // Função para lidar com o clique nos botões\r\n  const handleButtonClick = (pair) => {\r\n    const flatPassword = password.flat(); // \"Achata\" a senha para facilitar a comparação\r\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Obtém o próximo número esperado da senha\r\n\r\n    const isValid = pair.includes(nextExpectedNumber); // Verifica se o próximo número esperado está no par\r\n\r\n    if (isValid) {\r\n      setInputSequence((prevSequence) => {\r\n        const newSequence = [...prevSequence, nextExpectedNumber];\r\n        console.log(\"Sequência do usuário após clique:\", newSequence);\r\n        return newSequence;\r\n      });\r\n    } else {\r\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\r\n    }\r\n  };\r\n\r\n  // Função para validar a sequência\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      console.log(\"Session ID enviado:\", sessionId);\r\n\r\n      const formattedSequence = password.flat().map(item => item.toString());\r\n      console.log(\"Senha do usuário antes do envio:\", formattedSequence);\r\n\r\n      const data = {\r\n        session_id: sessionId,\r\n        sequence: formattedSequence\r\n      };\r\n\r\n      // Criptografa o sessionId antes de enviar ao backend\r\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\r\n\r\n      const response = await axios.post(\"http://127.0.0.1:8000/validate_sequence\", data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Encrypted-Session-Id': encryptedSessionId // Envia sessionId criptografado\r\n        }\r\n      });\r\n\r\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      console.log('Error response:', error.response ? error.response.data : error.message);\r\n      toast.error('Erro ao validar a sequência');\r\n    }\r\n  };\r\n\r\n  // Função para gerar sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div className=\"form-container\">\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession} className=\"primary-button\" disabled={isLoading}>\r\n        {isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'}\r\n      </button>\r\n\r\n      {isSessionValid ? (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          <p>{password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')}</p>\r\n\r\n          <h2>Clique nos botões abaixo para digitar a senha:</h2>\r\n          <div className=\"buttons-container\">\r\n            {displayButtons()}\r\n          </div>\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <p>{inputSequence.join(' ')}</p>\r\n\r\n          <button onClick={handleValidatePassword} className=\"primary-button\">\r\n            Validar Senha\r\n          </button>\r\n\r\n          <div className=\"token-info\">\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}