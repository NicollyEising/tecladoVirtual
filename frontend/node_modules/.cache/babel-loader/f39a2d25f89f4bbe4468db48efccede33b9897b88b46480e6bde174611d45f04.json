{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]); // Senha gerada (pares [posição, número])\n  const [inputPassword, setInputPassword] = useState([]); // Senha digitada pelo usuário\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  console.log('Senha carregada:', password);\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && Array.isArray(data.sequence)) {\n        // Transforma a sequência plana em pares [posição, número]\n        const formattedPassword = [];\n        for (let i = 0; i < data.sequence.length; i += 2) {\n          formattedPassword.push([data.sequence[i], data.sequence[i + 1]]);\n        }\n        setSessionId(data.session_id);\n        setPassword(formattedPassword); // Guardando a senha\n        setToken(data.token);\n        setIsSessionValid(true);\n        console.log('Token de Verificação:', data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  };\n\n  // Função para enviar a senha e validar no backend\n  const handleValidatePassword = async () => {\n    try {\n      console.log('Senha digitada antes do envio:', inputPassword);\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: inputPassword // Envia os pares diretamente\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('✅ Sequência validada com sucesso:', response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n      setIsButtonDisabled(true); // Desabilita botões após validação\n    } catch (error) {\n      console.log(error.response ? error.response.data : error.message);\n      toast.error('Sequência incorreta');\n    }\n  };\n\n  // Função para gerar a sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n\n  // Função para lidar com o clique nos botões da sequência\n  const handleButtonClick = (position, number) => {\n    setInputPassword(prevSequence => {\n      const newSequence = [...prevSequence, [position, number]];\n      console.log('Sequência do usuário após clique:', newSequence);\n      return newSequence;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), isSessionValid && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), password.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando senha...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password.map(([pos, num]) => `[${pos}, ${num}]`).join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos n\\xFAmeros abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), password.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Esperando sequ\\xEAncia...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: password.map(([pos, num], index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(pos, num),\n          disabled: isButtonDisabled // Desabilita os botões após validação\n          ,\n          children: [\"[\", pos, \", \", num, \"]\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: inputPassword.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nenhuma sequ\\xEAncia selecionada ainda...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this) : inputPassword.map(([pos, num], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"[\", pos, \", \", num, \"]\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yE/mOkE5nU/FZDgIpPhfQO+kzTE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputPassword","setInputPassword","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","console","log","handleGenerateSession","error","data","generateSession","Array","isArray","sequence","formattedPassword","i","length","push","session_id","success","handleValidatePassword","response","post","headers","Authorization","message","handleButtonClick","position","number","prevSequence","newSequence","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","map","pos","num","join","index","disabled","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]); // Senha gerada (pares [posição, número])\r\n  const [inputPassword, setInputPassword] = useState([]); // Senha digitada pelo usuário\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  console.log('Senha carregada:', password);\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && Array.isArray(data.sequence)) {\r\n        // Transforma a sequência plana em pares [posição, número]\r\n        const formattedPassword = [];\r\n        for (let i = 0; i < data.sequence.length; i += 2) {\r\n          formattedPassword.push([data.sequence[i], data.sequence[i + 1]]);\r\n        }\r\n\r\n        setSessionId(data.session_id);\r\n        setPassword(formattedPassword); // Guardando a senha\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n\r\n        console.log('Token de Verificação:', data.token);\r\n\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  };\r\n\r\n  // Função para enviar a senha e validar no backend\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      console.log('Senha digitada antes do envio:', inputPassword);\r\n\r\n      const response = await axios.post(\r\n        'http://127.0.0.1:8000/validate_sequence',\r\n        {\r\n          session_id: sessionId,\r\n          sequence: inputPassword, // Envia os pares diretamente\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log('✅ Sequência validada com sucesso:', response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n      setIsButtonDisabled(true); // Desabilita botões após validação\r\n    } catch (error) {\r\n      console.log(error.response ? error.response.data : error.message);\r\n      toast.error('Sequência incorreta');\r\n    }\r\n  };\r\n\r\n  // Função para gerar a sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post(\r\n      'http://127.0.0.1:8000/generate_session',\r\n      { username }\r\n    );\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões da sequência\r\n  const handleButtonClick = (position, number) => {\r\n    setInputPassword((prevSequence) => {\r\n      const newSequence = [...prevSequence, [position, number]];\r\n      console.log('Sequência do usuário após clique:', newSequence);\r\n      return newSequence;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div>\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n\r\n      {isSessionValid && (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          {password.length === 0 ? (\r\n            <p>Carregando senha...</p>\r\n          ) : (\r\n            <p>\r\n              {password\r\n                .map(([pos, num]) => `[${pos}, ${num}]`)\r\n                .join(' ')}\r\n            </p>\r\n          )}\r\n\r\n          <h2>Clique nos números abaixo para digitar a senha:</h2>\r\n          {password.length === 0 ? (\r\n            <p>Esperando sequência...</p>\r\n          ) : (\r\n            <div className=\"buttons\">\r\n              {password.map(([pos, num], index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => handleButtonClick(pos, num)}\r\n                  disabled={isButtonDisabled} // Desabilita os botões após validação\r\n                >\r\n                  [{pos}, {num}]\r\n                </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <ul>\r\n            {inputPassword.length === 0 ? (\r\n              <p>Nenhuma sequência selecionada ainda...</p>\r\n            ) : (\r\n              inputPassword.map(([pos, num], index) => (\r\n                <li key={index}>\r\n                  [{pos}, {num}]\r\n                </li>\r\n              ))\r\n            )}\r\n          </ul>\r\n\r\n          <button onClick={handleValidatePassword}>Validar Senha</button>\r\n\r\n          <div>\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}