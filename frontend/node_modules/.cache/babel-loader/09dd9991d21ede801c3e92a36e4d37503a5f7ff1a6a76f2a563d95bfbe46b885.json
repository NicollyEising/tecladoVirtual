{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { generateSession, validateSequence, invalidateSession, registerUser, validateLogin } from './api.js'; // Adicionando a função de registro e login\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [sequence, setSequence] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [username, setUsername] = useState(''); // Para capturar o nome de usuário\n  const [password, setPassword] = useState(''); // Para capturar a senha\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Para saber se o usuário está logado\n\n  // Função para cadastro do usuário\n  const handleRegister = async () => {\n    try {\n      await registerUser(username, password);\n      toast.success('Usuário registrado com sucesso!');\n    } catch (error) {\n      toast.error('Erro ao registrar usuário');\n    }\n  };\n\n  // Função para login\n  const handleLogin = async () => {\n    try {\n      const data = await validateLogin(username, password); // A API valida o login com nome de usuário e senha\n      setSessionId(data.session_id);\n      setSequence(data.sequence);\n      setToken(data.token);\n      setIsSessionValid(true);\n      setIsLoggedIn(true);\n      toast.success('Login bem-sucedido!');\n    } catch (error) {\n      toast.error('Erro no login');\n    }\n  };\n\n  // Gera uma nova sessão\n  const handleGenerateSession = async () => {\n    try {\n      const data = await generateSession();\n      setSessionId(data.session_id);\n      setSequence(data.sequence); // Recebe a sequência completa\n      setToken(data.token);\n      setIsSessionValid(true);\n      toast.success('Sessão gerada com sucesso!');\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n    }\n  };\n\n  // Valida a sequência fornecida\n  const handleValidateSequence = async () => {\n    try {\n      await validateSequence(sessionId, inputSequence, token);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false); // Finaliza a sessão após validação\n    } catch (error) {\n      toast.error('Sequência incorreta');\n    }\n  };\n\n  // Invalidar a sessão\n  const handleInvalidateSession = async () => {\n    try {\n      await invalidateSession(sessionId);\n      toast.success('Sessão invalidada!');\n      setIsSessionValid(false);\n    } catch (error) {\n      toast.error('Erro ao invalidar sessão');\n    }\n  };\n\n  // Função para adicionar um número à sequência de entrada\n  const handleButtonClick = number => {\n    if (inputSequence.length < sequence.length) {\n      setInputSequence([...inputSequence, number]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome de usu\\xE1rio\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Senha\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome de usu\\xE1rio\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Senha\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateSession,\n        children: \"Gerar Nova Sess\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), isSessionValid && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sequ\\xEAncia Gerada:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sequence.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [num, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Clique na sequ\\xEAncia:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: sequence.map((num, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleButtonClick(num) // Agora usamos o número diretamente\n            ,\n            children: num\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sequ\\xEAncia Selecionada:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: inputSequence.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: num\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleValidateSequence,\n          children: \"Validar Sequ\\xEAncia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInvalidateSession,\n        children: \"Invalidar Sess\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2tekNcMTVRivgviZrikgDN7IbR4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","generateSession","validateSequence","invalidateSession","registerUser","validateLogin","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","sessionId","setSessionId","sequence","setSequence","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","username","setUsername","password","setPassword","isLoggedIn","setIsLoggedIn","handleRegister","success","error","handleLogin","data","session_id","handleGenerateSession","handleValidateSequence","handleInvalidateSession","handleButtonClick","number","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","num","index","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { generateSession, validateSequence, invalidateSession, registerUser, validateLogin } from './api.js'; // Adicionando a função de registro e login\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [sequence, setSequence] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [username, setUsername] = useState(''); // Para capturar o nome de usuário\r\n  const [password, setPassword] = useState(''); // Para capturar a senha\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Para saber se o usuário está logado\r\n\r\n  // Função para cadastro do usuário\r\n  const handleRegister = async () => {\r\n    try {\r\n      await registerUser(username, password);\r\n      toast.success('Usuário registrado com sucesso!');\r\n    } catch (error) {\r\n      toast.error('Erro ao registrar usuário');\r\n    }\r\n  };\r\n\r\n  // Função para login\r\n  const handleLogin = async () => {\r\n    try {\r\n      const data = await validateLogin(username, password); // A API valida o login com nome de usuário e senha\r\n      setSessionId(data.session_id);\r\n      setSequence(data.sequence);\r\n      setToken(data.token);\r\n      setIsSessionValid(true);\r\n      setIsLoggedIn(true);\r\n      toast.success('Login bem-sucedido!');\r\n    } catch (error) {\r\n      toast.error('Erro no login');\r\n    }\r\n  };\r\n\r\n  // Gera uma nova sessão\r\n  const handleGenerateSession = async () => {\r\n    try {\r\n      const data = await generateSession();\r\n      setSessionId(data.session_id);\r\n      setSequence(data.sequence); // Recebe a sequência completa\r\n      setToken(data.token);\r\n      setIsSessionValid(true);\r\n      toast.success('Sessão gerada com sucesso!');\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n    }\r\n  };\r\n\r\n  // Valida a sequência fornecida\r\n  const handleValidateSequence = async () => {\r\n    try {\r\n      await validateSequence(sessionId, inputSequence, token);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);  // Finaliza a sessão após validação\r\n    } catch (error) {\r\n      toast.error('Sequência incorreta');\r\n    }\r\n  };\r\n\r\n  // Invalidar a sessão\r\n  const handleInvalidateSession = async () => {\r\n    try {\r\n      await invalidateSession(sessionId);\r\n      toast.success('Sessão invalidada!');\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      toast.error('Erro ao invalidar sessão');\r\n    }\r\n  };\r\n\r\n  // Função para adicionar um número à sequência de entrada\r\n  const handleButtonClick = (number) => {\r\n    if (inputSequence.length < sequence.length) {\r\n      setInputSequence([...inputSequence, number]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      {/* Cadastro de usuário */}\r\n      {!isLoggedIn && (\r\n        <div>\r\n          <h2>Cadastro</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nome de usuário\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button onClick={handleRegister}>Cadastrar</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Login */}\r\n      {!isLoggedIn && (\r\n        <div>\r\n          <h2>Login</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nome de usuário\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button onClick={handleLogin}>Entrar</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Somente acessível após login */}\r\n      {isLoggedIn && (\r\n        <>\r\n          <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n\r\n          {isSessionValid && (\r\n            <>\r\n              <h2>Sequência Gerada:</h2>\r\n              <ul>\r\n                {sequence.map((num, index) => (\r\n                  <li key={index}>\r\n                    {num} {/* Aqui a sequência já está em formato correto */}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <h2>Clique na sequência:</h2>\r\n              <div className=\"buttons\">\r\n                {sequence.map((num, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => handleButtonClick(num)} // Agora usamos o número diretamente\r\n                  >\r\n                    {num}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              <h3>Sequência Selecionada:</h3>\r\n              <ul>\r\n                {inputSequence.map((num, index) => (\r\n                  <li key={index}>{num}</li>\r\n                ))}\r\n              </ul>\r\n\r\n              <button onClick={handleValidateSequence}>Validar Sequência</button>\r\n            </>\r\n          )}\r\n\r\n          <button onClick={handleInvalidateSession}>Invalidar Sessão</button>\r\n        </>\r\n      )}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}