{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { generateSession, validateSequence, invalidateSession } from './api.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState(''); // Adicionando o estado para o nome de usuário\n  const [sessionId, setSessionId] = useState('');\n  const [sequences, setSequences] = useState([]); // Agora são várias sequências\n  const [inputSequences, setInputSequences] = useState([]); // Lista para armazenar as sequências de respostas\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n\n  // Gera uma nova sessão, agora passando o username\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username); // Passando username para a função\n      setSessionId(data.session_id);\n      setSequences(data.sequences); // Agora é uma lista de sequências\n      setToken(data.token);\n      setIsSessionValid(true);\n      toast.success('Sessão gerada com sucesso!');\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n    }\n  };\n\n  // Valida todas as sequências fornecidas\n  const handleValidateSequences = async () => {\n    try {\n      for (let i = 0; i < inputSequences.length; i++) {\n        const response = await validateSequence(sessionId, inputSequences[i], token); // Valida cada sequência\n        console.log(`✅ Sequência ${i + 1} validada com sucesso:`, response.data);\n      }\n      toast.success('Todas as sequências validadas com sucesso!');\n      setIsSessionValid(false); // Finaliza a sessão após validação\n    } catch (error) {\n      console.error(\"❌ Erro ao validar sequência:\", error.response ? error.response.data : error.message);\n      toast.error('Erro ao validar sequência');\n    }\n  };\n\n  // Invalidar a sessão\n  const handleInvalidateSession = async () => {\n    try {\n      await invalidateSession(sessionId);\n      toast.success('Sessão invalidada!');\n      setIsSessionValid(false);\n    } catch (error) {\n      toast.error('Erro ao invalidar sessão');\n    }\n  };\n\n  // Função para adicionar um número à sequência de entrada\n  const handleButtonClick = (number, sequenceIndex) => {\n    const newInputSequences = [...inputSequences];\n    if (!newInputSequences[sequenceIndex]) {\n      newInputSequences[sequenceIndex] = [];\n    }\n    if (newInputSequences[sequenceIndex].length < sequences[sequenceIndex].length) {\n      newInputSequences[sequenceIndex].push(number);\n    }\n    setInputSequences(newInputSequences);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), isSessionValid && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sequ\\xEAncias Geradas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), sequences.map((sequence, sequenceIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Sequ\\xEAncia \", sequenceIndex + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sequence.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: num\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Clique na sequ\\xEAncia:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: sequence.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleButtonClick(index + 1, sequenceIndex),\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Sequ\\xEAncia Selecionada:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: inputSequences[sequenceIndex] && inputSequences[sequenceIndex].map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: num\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, sequenceIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidateSequences,\n        children: \"Validar Todas as Sequ\\xEAncias\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInvalidateSession,\n      children: \"Invalidar Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vLnhIjuM8cElckznePrIYUrLVdg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","generateSession","validateSequence","invalidateSession","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","sequences","setSequences","inputSequences","setInputSequences","token","setToken","isSessionValid","setIsSessionValid","handleGenerateSession","error","data","session_id","success","handleValidateSequences","i","length","response","console","log","message","handleInvalidateSession","handleButtonClick","number","sequenceIndex","newInputSequences","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","map","sequence","num","index","_","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { generateSession, validateSequence, invalidateSession } from './api.js';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');  // Adicionando o estado para o nome de usuário\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [sequences, setSequences] = useState([]);  // Agora são várias sequências\r\n  const [inputSequences, setInputSequences] = useState([]);  // Lista para armazenar as sequências de respostas\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n\r\n  // Gera uma nova sessão, agora passando o username\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);  // Passando username para a função\r\n      setSessionId(data.session_id);\r\n      setSequences(data.sequences);  // Agora é uma lista de sequências\r\n      setToken(data.token);\r\n      setIsSessionValid(true);\r\n      toast.success('Sessão gerada com sucesso!');\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n    }\r\n  };\r\n\r\n  // Valida todas as sequências fornecidas\r\n  const handleValidateSequences = async () => {\r\n    try {\r\n      for (let i = 0; i < inputSequences.length; i++) {\r\n        const response = await validateSequence(sessionId, inputSequences[i], token); // Valida cada sequência\r\n        console.log(`✅ Sequência ${i + 1} validada com sucesso:`, response.data);\r\n      }\r\n\r\n      toast.success('Todas as sequências validadas com sucesso!');\r\n      setIsSessionValid(false);  // Finaliza a sessão após validação\r\n    } catch (error) {\r\n      console.error(\"❌ Erro ao validar sequência:\", error.response ? error.response.data : error.message);\r\n      toast.error('Erro ao validar sequência');\r\n    }\r\n  };\r\n\r\n  // Invalidar a sessão\r\n  const handleInvalidateSession = async () => {\r\n    try {\r\n      await invalidateSession(sessionId);\r\n      toast.success('Sessão invalidada!');\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      toast.error('Erro ao invalidar sessão');\r\n    }\r\n  };\r\n\r\n  // Função para adicionar um número à sequência de entrada\r\n  const handleButtonClick = (number, sequenceIndex) => {\r\n    const newInputSequences = [...inputSequences];\r\n    if (!newInputSequences[sequenceIndex]) {\r\n      newInputSequences[sequenceIndex] = [];\r\n    }\r\n\r\n    if (newInputSequences[sequenceIndex].length < sequences[sequenceIndex].length) {\r\n      newInputSequences[sequenceIndex].push(number);\r\n    }\r\n    setInputSequences(newInputSequences);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n      \r\n      {/* Campo para inserir o nome de usuário */}\r\n      <div>\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input \r\n          id=\"username\" \r\n          type=\"text\" \r\n          value={username} \r\n          onChange={(e) => setUsername(e.target.value)} \r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n\r\n      {isSessionValid && (\r\n        <>\r\n          <h2>Sequências Geradas:</h2>\r\n          {sequences.map((sequence, sequenceIndex) => (\r\n            <div key={sequenceIndex}>\r\n              <h3>Sequência {sequenceIndex + 1}:</h3>\r\n              <ul>\r\n                {sequence.map((num, index) => (\r\n                  <li key={index}>{num}</li>\r\n                ))}\r\n              </ul>\r\n\r\n              <h4>Clique na sequência:</h4>\r\n              <div className=\"buttons\">\r\n                {sequence.map((_, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => handleButtonClick(index + 1, sequenceIndex)}\r\n                  >\r\n                    {index + 1}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              <h5>Sequência Selecionada:</h5>\r\n              <ul>\r\n                {inputSequences[sequenceIndex] && inputSequences[sequenceIndex].map((num, index) => (\r\n                  <li key={index}>{num}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n\r\n          <button onClick={handleValidateSequences}>Validar Todas as Sequências</button>\r\n        </>\r\n      )}\r\n\r\n      <button onClick={handleInvalidateSession}>Invalidar Sessão</button>\r\n      \r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}