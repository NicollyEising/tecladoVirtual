{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport CryptoJS from 'crypto-js'; // Importe a biblioteca\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]); // A senha será armazenada aqui\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]); // Armazenar botões\n  const [isLoading, setIsLoading] = useState(false); // Para controle de loading\n\n  // Função para gerar hash para cada número baseado no índice\n  // Função para gerar hash para cada número com base no índice\n  const hashToNumber = (input, index) => {\n    const combinedInput = `${input}-${index}`; // Combina o número e o índice\n    const hash = CryptoJS.SHA256(combinedInput).toString(); // Gera o hash a partir do número e do índice\n    return parseInt(hash.slice(0, 8), 16) % 10; // Gera o número curto a partir do hash\n  };\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    setIsLoading(true); // Ativa o loading\n\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(formatSequence(data.sequence)); // Guardando a senha formatada\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence); // Gera os botões misturados\n\n        console.log('Token de Verificação:', data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    } finally {\n      setIsLoading(false); // Desativa o loading\n    }\n  };\n\n  // Função para formatar a sequência em pares\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n\n  // Função para gerar os botões (agora com hash gerado por número e índice)\n  const generateButtons = sequence => {\n    let allButtons = [];\n\n    // Gera os botões com os hashes dos números e seus índices\n    sequence.forEach((num, index) => {\n      const shortNumber = hashToNumber(num, index); // Gera o número curto com base no hash do número + índice\n      allButtons.push({\n        num,\n        shortNumber\n      });\n    });\n\n    // Embaralha a ordem dos botões (somente os corretos)\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\n    setButtons(allButtons); // Atualiza os botões no estado\n  };\n\n  // Exibe os botões misturados\n  const displayButtons = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map((button, index) => {\n        const shortNumber = hashToNumber(button.num, index); // Gera o número curto para cada botão\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(button.num),\n          disabled: isButtonDisabled,\n          className: \"button\",\n          style: inputSequence.includes(button.num) ? {\n            backgroundColor: 'green'\n          } : {},\n          children: [shortNumber, \" \"]\n        }, button.num, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Função para lidar com o clique nos botões\n  const handleButtonClick = num => {\n    const flatPassword = password.flat(); // \"Achata\" a senha para facilitar a comparação\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Obtém o próximo número esperado da senha\n\n    // Verifica se há um próximo número esperado (caso a senha já tenha sido totalmente inserida)\n    if (nextExpectedNumber === undefined) {\n      toast.error('A senha já foi completamente inserida!');\n      return;\n    }\n\n    // Verifica se o próximo número esperado está no par, independentemente da posição\n    const isValid = num === nextExpectedNumber;\n    if (isValid) {\n      setInputSequence(prevSequence => {\n        const newSequence = [...prevSequence, nextExpectedNumber];\n        console.log('Sequência do usuário após clique:', newSequence);\n\n        // Verifica se a sequência está completa e corresponde à senha\n        if (newSequence.length === flatPassword.length) {\n          const isCorrect = newSequence.every((num, index) => num === flatPassword[index]);\n          if (isCorrect) {\n            toast.success('Senha correta! Acesso liberado.');\n          } else {\n            toast.error('Sequência incorreta. Tente novamente.');\n            setIsButtonDisabled(true);\n            setTimeout(() => setIsButtonDisabled(false), 2000);\n          }\n        }\n        return newSequence;\n      });\n    } else {\n      toast.error(`Par incorreto. O próximo número esperado é ${nextExpectedNumber}. Tente novamente.`);\n      setIsButtonDisabled(true); // Desabilitar todos os botões após erro\n      setTimeout(() => setIsButtonDisabled(false), 2000); // Habilitar novamente após 2 segundos\n    }\n  };\n\n  // Função para validar a sequência\n\n  // Função para gerar sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      className: \"primary-button\",\n      disabled: isLoading,\n      children: isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [displayGeneratedPassword(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: displayButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputSequence.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        className: \"primary-button\",\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"token-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eIx+b+r9j2UTAAJYly2mAUAaAp8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","CryptoJS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","isLoading","setIsLoading","hashToNumber","input","index","combinedInput","hash","SHA256","toString","parseInt","slice","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","formatSequence","generateButtons","success","formatted","i","length","push","allButtons","forEach","num","shortNumber","sort","Math","random","displayButtons","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","button","onClick","handleButtonClick","disabled","style","includes","backgroundColor","flatPassword","flat","nextExpectedNumber","undefined","isValid","prevSequence","newSequence","isCorrect","every","setTimeout","response","post","htmlFor","id","type","value","onChange","e","target","placeholder","displayGeneratedPassword","join","handleValidatePassword","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\nimport CryptoJS from 'crypto-js'; // Importe a biblioteca\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]); // A senha será armazenada aqui\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]); // Armazenar botões\r\n  const [isLoading, setIsLoading] = useState(false); // Para controle de loading\r\n\r\n  // Função para gerar hash para cada número baseado no índice\r\n// Função para gerar hash para cada número com base no índice\r\nconst hashToNumber = (input, index) => {\r\n  const combinedInput = `${input}-${index}`; // Combina o número e o índice\r\n  const hash = CryptoJS.SHA256(combinedInput).toString(); // Gera o hash a partir do número e do índice\r\n  return parseInt(hash.slice(0, 8), 16) % 10; // Gera o número curto a partir do hash\r\n};\r\n\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true); // Ativa o loading\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(formatSequence(data.sequence)); // Guardando a senha formatada\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence); // Gera os botões misturados\r\n\r\n        console.log('Token de Verificação:', data.token);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    } finally {\r\n      setIsLoading(false); // Desativa o loading\r\n    }\r\n  };\r\n\r\n  // Função para formatar a sequência em pares\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n  // Função para gerar os botões (agora com hash gerado por número e índice)\r\n  const generateButtons = (sequence) => {\r\n    let allButtons = [];\r\n\r\n    // Gera os botões com os hashes dos números e seus índices\r\n    sequence.forEach((num, index) => {\r\n      const shortNumber = hashToNumber(num, index); // Gera o número curto com base no hash do número + índice\r\n      allButtons.push({\r\n        num,\r\n        shortNumber,\r\n      });\r\n    });\r\n\r\n    // Embaralha a ordem dos botões (somente os corretos)\r\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\r\n\r\n    setButtons(allButtons); // Atualiza os botões no estado\r\n  };\r\n\r\n  // Exibe os botões misturados\r\n  const displayButtons = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n  \r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((button, index) => {\r\n          const shortNumber = hashToNumber(button.num, index); // Gera o número curto para cada botão\r\n          return (\r\n            <button\r\n              key={button.num}\r\n              onClick={() => handleButtonClick(button.num)}\r\n              disabled={isButtonDisabled}\r\n              className=\"button\"\r\n              style={\r\n                inputSequence.includes(button.num)\r\n                  ? { backgroundColor: 'green' }\r\n                  : {}\r\n              }\r\n            >\r\n              {shortNumber} {/* Exibe o número curto gerado para cada botão */}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  // Função para lidar com o clique nos botões\r\n  const handleButtonClick = (num) => {\r\n    const flatPassword = password.flat(); // \"Achata\" a senha para facilitar a comparação\r\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Obtém o próximo número esperado da senha\r\n  \r\n    // Verifica se há um próximo número esperado (caso a senha já tenha sido totalmente inserida)\r\n    if (nextExpectedNumber === undefined) {\r\n      toast.error('A senha já foi completamente inserida!');\r\n      return;\r\n    }\r\n  \r\n    // Verifica se o próximo número esperado está no par, independentemente da posição\r\n    const isValid = num === nextExpectedNumber;\r\n  \r\n    if (isValid) {\r\n      setInputSequence((prevSequence) => {\r\n        const newSequence = [...prevSequence, nextExpectedNumber];\r\n        console.log('Sequência do usuário após clique:', newSequence);\r\n  \r\n        // Verifica se a sequência está completa e corresponde à senha\r\n        if (newSequence.length === flatPassword.length) {\r\n          const isCorrect = newSequence.every((num, index) => num === flatPassword[index]);\r\n          if (isCorrect) {\r\n            toast.success('Senha correta! Acesso liberado.');\r\n          } else {\r\n            toast.error('Sequência incorreta. Tente novamente.');\r\n            setIsButtonDisabled(true);\r\n            setTimeout(() => setIsButtonDisabled(false), 2000);\r\n          }\r\n        }\r\n  \r\n        return newSequence;\r\n      });\r\n    } else {\r\n      toast.error(`Par incorreto. O próximo número esperado é ${nextExpectedNumber}. Tente novamente.`);\r\n      setIsButtonDisabled(true); // Desabilitar todos os botões após erro\r\n      setTimeout(() => setIsButtonDisabled(false), 2000); // Habilitar novamente após 2 segundos\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Função para validar a sequência\r\n    \r\n\r\n  // Função para gerar sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div className=\"form-container\">\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession} className=\"primary-button\" disabled={isLoading}>\r\n        {isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'}\r\n      </button>\r\n\r\n      {isSessionValid ? (\r\n        <>\r\n          {displayGeneratedPassword()}\r\n\r\n          <h2>Clique nos botões abaixo para digitar a senha:</h2>\r\n          <div className=\"buttons-container\">{displayButtons()}</div>\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <p>{inputSequence.join(' ')}</p>\r\n\r\n          <button onClick={handleValidatePassword} className=\"primary-button\">\r\n            Validar Senha\r\n          </button>\r\n\r\n          <div className=\"token-info\">\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}