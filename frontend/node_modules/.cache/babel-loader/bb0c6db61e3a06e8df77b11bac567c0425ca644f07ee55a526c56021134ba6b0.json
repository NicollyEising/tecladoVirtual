{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [sequence, setSequence] = useState([]); // Usando o nome 'sequence' como na API\n  const [responses, setResponses] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n        username\n      });\n      console.log('Dados recebidos da API:', response.data);\n      if (response.data && response.data.sequence && Array.isArray(response.data.sequence)) {\n        setSessionId(response.data.session_id);\n        setSequence(response.data.sequence);\n        setToken(response.data.token);\n        // Inicializa o array de respostas com null para cada par\n        setResponses(new Array(response.data.sequence.length).fill(null));\n        setIsSessionValid(true);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error('Erro ao gerar sessão: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message));\n      console.error('Erro ao gerar sessão:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Função para registrar a escolha do usuário (1 para o primeiro número, 2 para o segundo)\n  const handleButtonChoice = (pairIndex, choicePosition) => {\n    const newResponses = [...responses];\n    newResponses[pairIndex] = choicePosition;\n    setResponses(newResponses);\n  };\n\n  // Função para enviar a sequência e validar no backend\n  const handleValidateSequence = async () => {\n    // Verifica se todas as posições foram preenchidas\n    if (responses.some(response => response === null)) {\n      toast.warning('Por favor, selecione uma opção para cada dígito.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const requestData = {\n        session_id: sessionId,\n        responses: responses // Enviando as respostas no formato esperado pelo backend\n      };\n      console.log(\"Dados enviados para validação:\", requestData);\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', requestData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Resposta da validação:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n      resetForm();\n    } catch (error) {\n      var _error$response2, _error$response2$data, _error$response3;\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Sequência incorreta');\n      console.error(\"Erro na validação:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      // Opcional: resetar as respostas após erro\n      setResponses(new Array(sequence.length).fill(null));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetForm = () => {\n    setSessionId('');\n    setSequence([]);\n    setResponses([]);\n    setToken('');\n    setIsSessionValid(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual Seguro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), !isSessionValid ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Nome de Usu\\xE1rio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Digite seu nome de usu\\xE1rio\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateSession,\n        disabled: loading,\n        children: loading ? 'Carregando...' : 'Gerar Nova Sessão'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keypad-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Digite sua senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Para cada d\\xEDgito da sua senha, selecione o bot\\xE3o que cont\\xE9m o n\\xFAmero correto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keypad\",\n        children: sequence.map((pair, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pair-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"digit-label\",\n            children: [\"D\\xEDgito \", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-pair\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: responses[index] === 1 ? 'selected' : '',\n              onClick: () => handleButtonChoice(index, 1),\n              disabled: loading,\n              children: pair[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: responses[index] === 2 ? 'selected' : '',\n              onClick: () => handleButtonChoice(index, 2),\n              disabled: loading,\n              children: pair[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleValidateSequence,\n          disabled: loading || responses.some(r => r === null),\n          children: loading ? 'Validando...' : 'Validar Sequência'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetForm,\n          disabled: loading,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Informa\\xE7\\xF5es de Debug:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Sequ\\xEAncia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 16\n          }, this), \" \", JSON.stringify(sequence)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Respostas selecionadas:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 16\n          }, this), \" \", JSON.stringify(responses)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7wpqD82BMETF8NyfzM3HQFUqy5I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","axios","jsxDEV","_jsxDEV","App","_s","username","setUsername","sessionId","setSessionId","sequence","setSequence","responses","setResponses","token","setToken","isSessionValid","setIsSessionValid","loading","setLoading","handleGenerateSession","error","response","post","console","log","data","Array","isArray","session_id","length","fill","success","_error$response","_error$response$data","detail","message","handleButtonChoice","pairIndex","choicePosition","newResponses","handleValidateSequence","some","warning","requestData","headers","Authorization","resetForm","_error$response2","_error$response2$data","_error$response3","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","disabled","onClick","map","pair","index","r","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [sequence, setSequence] = useState([]); // Usando o nome 'sequence' como na API\r\n  const [responses, setResponses] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:8000/generate_session', { \r\n        username \r\n      });\r\n      \r\n      console.log('Dados recebidos da API:', response.data);\r\n\r\n      if (response.data && response.data.sequence && Array.isArray(response.data.sequence)) {\r\n        setSessionId(response.data.session_id);\r\n        setSequence(response.data.sequence);\r\n        setToken(response.data.token);\r\n        // Inicializa o array de respostas com null para cada par\r\n        setResponses(new Array(response.data.sequence.length).fill(null));\r\n        setIsSessionValid(true);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão: ' + (error.response?.data?.detail || error.message));\r\n      console.error('Erro ao gerar sessão:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Função para registrar a escolha do usuário (1 para o primeiro número, 2 para o segundo)\r\n  const handleButtonChoice = (pairIndex, choicePosition) => {\r\n    const newResponses = [...responses];\r\n    newResponses[pairIndex] = choicePosition;\r\n    setResponses(newResponses);\r\n  };\r\n\r\n  // Função para enviar a sequência e validar no backend\r\n  const handleValidateSequence = async () => {\r\n    // Verifica se todas as posições foram preenchidas\r\n    if (responses.some(response => response === null)) {\r\n      toast.warning('Por favor, selecione uma opção para cada dígito.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const requestData = {\r\n        session_id: sessionId,\r\n        responses: responses  // Enviando as respostas no formato esperado pelo backend\r\n      };\r\n      \r\n      console.log(\"Dados enviados para validação:\", requestData);\r\n      \r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', requestData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n  \r\n      console.log(\"Resposta da validação:\", response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n      resetForm();\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.detail || 'Sequência incorreta');\r\n      console.error(\"Erro na validação:\", error.response?.data || error.message);\r\n      // Opcional: resetar as respostas após erro\r\n      setResponses(new Array(sequence.length).fill(null));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setSessionId('');\r\n    setSequence([]);\r\n    setResponses([]);\r\n    setToken('');\r\n    setIsSessionValid(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual Seguro</h1>\r\n\r\n      {!isSessionValid ? (\r\n        <div className=\"login-form\">\r\n          <div>\r\n            <label htmlFor=\"username\">Nome de Usuário:</label>\r\n            <input\r\n              id=\"username\"\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder=\"Digite seu nome de usuário\"\r\n              disabled={loading}\r\n            />\r\n          </div>\r\n          <button onClick={handleGenerateSession} disabled={loading}>\r\n            {loading ? 'Carregando...' : 'Gerar Nova Sessão'}\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"keypad-container\">\r\n          <h2>Digite sua senha</h2>\r\n          <p>Para cada dígito da sua senha, selecione o botão que contém o número correto</p>\r\n          \r\n          <div className=\"keypad\">\r\n            {sequence.map((pair, index) => (\r\n              <div key={index} className=\"pair-row\">\r\n                <span className=\"digit-label\">Dígito {index + 1}:</span>\r\n                <div className=\"button-pair\">\r\n                  <button \r\n                    className={responses[index] === 1 ? 'selected' : ''}\r\n                    onClick={() => handleButtonChoice(index, 1)}\r\n                    disabled={loading}\r\n                  >\r\n                    {pair[0]}\r\n                  </button>\r\n                  <button \r\n                    className={responses[index] === 2 ? 'selected' : ''}\r\n                    onClick={() => handleButtonChoice(index, 2)}\r\n                    disabled={loading}\r\n                  >\r\n                    {pair[1]}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <div className=\"actions\">\r\n            <button onClick={handleValidateSequence} disabled={loading || responses.some(r => r === null)}>\r\n              {loading ? 'Validando...' : 'Validar Sequência'}\r\n            </button>\r\n            <button onClick={resetForm} disabled={loading}>\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n\r\n          {/* Área de debug - pode ser útil durante o desenvolvimento */}\r\n          <div className=\"debug-info\">\r\n            <h3>Informações de Debug:</h3>\r\n            <p><strong>Sequência:</strong> {JSON.stringify(sequence)}</p>\r\n            <p><strong>Respostas selecionadas:</strong> {JSON.stringify(responses)}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}