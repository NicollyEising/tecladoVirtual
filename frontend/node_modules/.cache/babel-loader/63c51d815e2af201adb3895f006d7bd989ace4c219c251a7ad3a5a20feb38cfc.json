{"ast":null,"code":"import axios from 'axios';\n\n// Endpoints da API\nconst API_URL = 'http://127.0.0.1:8000'; // Substitua pelo seu endereço da API\n\n// Função para gerar a sessão\n// Função para gerar a sessão\nexport const generateSession = async username => {\n  try {\n    const response = await axios.post(`${API_URL}/generate_session`, {\n      username: username // Enviando o username para o backend\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao gerar sessão:', error);\n    throw error;\n  }\n};\n\n// Função para validar a sequência\nasync function validateSequence(sessionId, sequence) {\n  try {\n    const response = await axios.post(\"http://127.0.0.1:8000/validate_sequence\", {\n      session_id: sessionId,\n      sequence: sequence // <-- Verifique o formato aqui!\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}` // Certifique-se de que o token está correto\n      }\n    });\n    console.log(\"Resposta do servidor:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao validar sequência:\", error);\n    throw error;\n  }\n}\n\n// Função de registro\nexport const registerUser = async (username, password) => {\n  try {\n    const response = await fetch('http://127.0.0.1:8000/register', {\n      // Caminho correto para o registro\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao registrar usuário');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Erro ao registrar usuário');\n  }\n};\n\n// Função para invalidar a sessão\nexport const invalidateSession = async sessionId => {\n  try {\n    const response = await axios.post(`${API_URL}/invalidate_session`, {\n      session_id: sessionId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao invalidar sessão:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","generateSession","username","response","post","data","error","console","validateSequence","sessionId","sequence","session_id","headers","Authorization","localStorage","getItem","log","registerUser","password","fetch","method","body","JSON","stringify","ok","Error","json","invalidateSession"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Endpoints da API\r\nconst API_URL = 'http://127.0.0.1:8000';  // Substitua pelo seu endereço da API\r\n\r\n// Função para gerar a sessão\r\n// Função para gerar a sessão\r\nexport const generateSession = async (username) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/generate_session`, {\r\n      username: username  // Enviando o username para o backend\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro ao gerar sessão:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n// Função para validar a sequência\r\nasync function validateSequence(sessionId, sequence) {\r\n  try {\r\n      const response = await axios.post(\"http://127.0.0.1:8000/validate_sequence\", {\r\n          session_id: sessionId,\r\n          sequence: sequence  // <-- Verifique o formato aqui!\r\n      }, {\r\n          headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`  // Certifique-se de que o token está correto\r\n          }\r\n      });\r\n\r\n      console.log(\"Resposta do servidor:\", response.data);\r\n      return response.data;\r\n  } catch (error) {\r\n      console.error(\"Erro ao validar sequência:\", error);\r\n      throw error;\r\n  }\r\n}\r\n\r\n// Função de registro\r\nexport const registerUser = async (username, password) => {\r\n  try {\r\n    const response = await fetch('http://127.0.0.1:8000/register', {  // Caminho correto para o registro\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Erro ao registrar usuário');\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error('Erro ao registrar usuário');\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n// Função para invalidar a sessão\r\nexport const invalidateSession = async (sessionId) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/invalidate_session`, { session_id: sessionId });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro ao invalidar sessão:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAE;;AAE1C;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,QAAQ,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,mBAAmB,EAAE;MAC/DE,QAAQ,EAAEA,QAAQ,CAAE;IACtB,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAGD;AACA,eAAeE,gBAAgBA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EACnD,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,yCAAyC,EAAE;MACzEO,UAAU,EAAEF,SAAS;MACrBC,QAAQ,EAAEA,QAAQ,CAAE;IACxB,CAAC,EAAE;MACCE,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAE;MAC9D;IACJ,CAAC,CAAC;IAEFR,OAAO,CAACS,GAAG,CAAC,uBAAuB,EAAEb,QAAQ,CAACE,IAAI,CAAC;IACnD,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACf;AACF;;AAEA;AACA,OAAO,MAAMW,YAAY,GAAG,MAAAA,CAAOf,QAAQ,EAAEgB,QAAQ,KAAK;EACxD,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMgB,KAAK,CAAC,gCAAgC,EAAE;MAAG;MAChEC,MAAM,EAAE,MAAM;MACdR,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAErB,QAAQ;QAAEgB;MAAS,CAAC;IAC7C,CAAC,CAAC;IAEF,IAAI,CAACf,QAAQ,CAACqB,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;IAEA,MAAMpB,IAAI,GAAG,MAAMF,QAAQ,CAACuB,IAAI,CAAC,CAAC;IAClC,OAAOrB,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAImB,KAAK,CAAC,2BAA2B,CAAC;EAC9C;AACF,CAAC;;AAKD;AACA,OAAO,MAAME,iBAAiB,GAAG,MAAOlB,SAAS,IAAK;EACpD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,qBAAqB,EAAE;MAAEW,UAAU,EAAEF;IAAU,CAAC,CAAC;IAC7F,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}