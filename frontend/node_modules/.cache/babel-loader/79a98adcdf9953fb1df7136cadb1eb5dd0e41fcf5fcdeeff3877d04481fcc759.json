{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Função para converter um hash em um número curto\n  const hashToShortNumber = input => {\n    const hash = CryptoJS.SHA256(input.toString()).toString();\n    const hashPart = parseInt(hash.slice(0, 8), 16);\n    return 1000 + hashPart % 9000; // Número entre 1000 e 9999\n  };\n  const hashToTwoNumbers = input => {\n    const hash = CryptoJS.SHA256(input.toString()).toString();\n    const num1 = parseInt(hash.slice(0, 8), 16) % 10;\n    const num2 = parseInt(hash.slice(8, 16), 16) % 10;\n    return [num1, num2];\n  };\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(formatSequence(data.sequence));\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence); // Gerando os botões\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n\n  // Função para gerar os botões (misturados)\n  const generateButtons = sequence => {\n    let uniqueHashes = new Map();\n    let correctPairs = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      let num1 = sequence[i];\n      let num2 = sequence[i + 1];\n      correctPairs.push([num1, num2]);\n    }\n    let allButtons = [];\n    correctPairs.forEach((pair, index) => {\n      const hashKey = `${pair[0]}${pair[1]}${index}`;\n      if (!uniqueHashes.has(hashKey)) {\n        uniqueHashes.set(hashKey, hashToTwoNumbers(hashKey));\n      }\n      allButtons.push({\n        pair,\n        shortNumbers: uniqueHashes.get(hashKey),\n        hashKey,\n        isCorrect: true\n      });\n    });\n\n    // Adicionando botões falsos\n    const fakeButtons = [];\n    for (let i = 0; i < 5; i++) {\n      const fakePair = [Math.floor(Math.random() * 10), Math.floor(Math.random() * 10)];\n      fakeButtons.push({\n        pair: fakePair,\n        shortNumbers: hashToTwoNumbers(fakePair),\n        isCorrect: false\n      });\n    }\n\n    // Combina os botões corretos com os falsos\n    allButtons = [...allButtons, ...fakeButtons];\n    allButtons = allButtons.sort(() => Math.random() - 0.5); // Embaralha os botões\n\n    setButtons(allButtons);\n  };\n\n  // Exibe os botões misturados\n  const displayButtons = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map(button => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(button.pair),\n        disabled: isButtonDisabled,\n        className: \"button\",\n        style: inputSequence.includes(button.pair[0]) || inputSequence.includes(button.pair[1]) ? {\n          backgroundColor: 'green'\n        } : {},\n        children: [button.shortNumbers[0], \" \", button.shortNumbers[1]]\n      }, button.hashKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Função para lidar com o clique nos botões\n  const handleButtonClick = pair => {\n    const flatPassword = password.flat(); // \"Achata\" a senha para facilitar a comparação\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Obtém o próximo número esperado da senha\n\n    // Verifica se o próximo número esperado está em qualquer posição no par\n    const isValid = pair.includes(nextExpectedNumber);\n\n    // Se o número esperado for encontrado no par, adiciona à sequência do usuário\n    if (isValid) {\n      setInputSequence(prevSequence => {\n        const newSequence = [...prevSequence, nextExpectedNumber];\n        console.log('Sequência do usuário após clique:', newSequence);\n        return newSequence;\n      });\n    } else {\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\n    }\n  };\n  const displayGeneratedPassword = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password.map(pair => {\n          const button = buttons.find(b => b.pair[0] === pair[0] && b.pair[1] === pair[1] && b.isCorrect);\n          if (button) {\n            return `[${button.shortNumbers[0]}, ${button.shortNumbers[1]}]`;\n          }\n          return '';\n        }).join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  };\n  const handleValidatePassword = async () => {\n    try {\n      console.log('Session ID enviado:', sessionId);\n      const formattedSequence = password.flat().map(item => item.toString());\n      console.log('Senha do usuário antes do envio:', formattedSequence);\n      const data = {\n        session_id: sessionId,\n        sequence: formattedSequence\n      };\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', data, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Encrypted-Session-Id': encryptedSessionId\n        }\n      });\n      console.log('✅ Sequência validada com sucesso:', response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n    } catch (error) {\n      console.log('Error response:', error.response ? error.response.data : error.message);\n      toast.error('Erro ao validar a sequência');\n    }\n  };\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      className: \"primary-button\",\n      disabled: isLoading,\n      children: isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [displayGeneratedPassword(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: displayButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputSequence.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        className: \"primary-button\",\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"token-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eIx+b+r9j2UTAAJYly2mAUAaAp8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","CryptoJS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","isLoading","setIsLoading","hashToShortNumber","input","hash","SHA256","toString","hashPart","parseInt","slice","hashToTwoNumbers","num1","num2","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","formatSequence","generateButtons","success","formatted","i","length","push","uniqueHashes","Map","correctPairs","allButtons","forEach","pair","index","hashKey","has","set","shortNumbers","get","isCorrect","fakeButtons","fakePair","Math","floor","random","sort","displayButtons","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","button","onClick","handleButtonClick","disabled","style","includes","backgroundColor","flatPassword","flat","nextExpectedNumber","isValid","prevSequence","newSequence","displayGeneratedPassword","find","b","join","handleValidatePassword","formattedSequence","item","encryptedSessionId","AES","encrypt","response","post","headers","Authorization","message","htmlFor","id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Função para converter um hash em um número curto\r\n  const hashToShortNumber = (input) => {\r\n    const hash = CryptoJS.SHA256(input.toString()).toString();\r\n    const hashPart = parseInt(hash.slice(0, 8), 16);\r\n    return 1000 + (hashPart % 9000); // Número entre 1000 e 9999\r\n  };\r\n\r\n  const hashToTwoNumbers = (input) => {\r\n    const hash = CryptoJS.SHA256(input.toString()).toString();\r\n    const num1 = parseInt(hash.slice(0, 8), 16) % 10;\r\n    const num2 = parseInt(hash.slice(8, 16), 16) % 10;\r\n    return [num1, num2];\r\n  };\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(formatSequence(data.sequence));\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence); // Gerando os botões\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n  // Função para gerar os botões (misturados)\r\n  const generateButtons = (sequence) => {\r\n    let uniqueHashes = new Map();\r\n    let correctPairs = [];\r\n\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      let num1 = sequence[i];\r\n      let num2 = sequence[i + 1];\r\n      correctPairs.push([num1, num2]);\r\n    }\r\n\r\n    let allButtons = [];\r\n    correctPairs.forEach((pair, index) => {\r\n      const hashKey = `${pair[0]}${pair[1]}${index}`;\r\n      if (!uniqueHashes.has(hashKey)) {\r\n        uniqueHashes.set(hashKey, hashToTwoNumbers(hashKey));\r\n      }\r\n      allButtons.push({ pair, shortNumbers: uniqueHashes.get(hashKey), hashKey, isCorrect: true });\r\n    });\r\n\r\n    // Adicionando botões falsos\r\n    const fakeButtons = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      const fakePair = [Math.floor(Math.random() * 10), Math.floor(Math.random() * 10)];\r\n      fakeButtons.push({ pair: fakePair, shortNumbers: hashToTwoNumbers(fakePair), isCorrect: false });\r\n    }\r\n\r\n    // Combina os botões corretos com os falsos\r\n    allButtons = [...allButtons, ...fakeButtons];\r\n    allButtons = allButtons.sort(() => Math.random() - 0.5); // Embaralha os botões\r\n\r\n    setButtons(allButtons);\r\n  };\r\n\r\n  // Exibe os botões misturados\r\n  const displayButtons = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n\r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((button) => (\r\n          <button\r\n            key={button.hashKey}\r\n            onClick={() => handleButtonClick(button.pair)}\r\n            disabled={isButtonDisabled}\r\n            className=\"button\"\r\n            style={\r\n              inputSequence.includes(button.pair[0]) || inputSequence.includes(button.pair[1])\r\n                ? { backgroundColor: 'green' }\r\n                : {}\r\n            }\r\n          >\r\n            {button.shortNumbers[0]} {button.shortNumbers[1]}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões\r\n  const handleButtonClick = (pair) => {\r\n    const flatPassword = password.flat(); // \"Achata\" a senha para facilitar a comparação\r\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Obtém o próximo número esperado da senha\r\n    \r\n    // Verifica se o próximo número esperado está em qualquer posição no par\r\n    const isValid = pair.includes(nextExpectedNumber); \r\n    \r\n    // Se o número esperado for encontrado no par, adiciona à sequência do usuário\r\n    if (isValid) {\r\n      setInputSequence((prevSequence) => {\r\n        const newSequence = [...prevSequence, nextExpectedNumber];\r\n        console.log('Sequência do usuário após clique:', newSequence);\r\n        return newSequence;\r\n      });\r\n    } else {\r\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\r\n    }\r\n  };\r\n  \r\n\r\n  const displayGeneratedPassword = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Senha Gerada:</h2>\r\n        <p>\r\n          {password\r\n            .map(pair => {\r\n              const button = buttons.find(b => b.pair[0] === pair[0] && b.pair[1] === pair[1] && b.isCorrect);\r\n              if (button) {\r\n                return `[${button.shortNumbers[0]}, ${button.shortNumbers[1]}]`;\r\n              }\r\n              return '';\r\n            })\r\n            .join(' ')}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      console.log('Session ID enviado:', sessionId);\r\n\r\n      const formattedSequence = password.flat().map((item) => item.toString());\r\n      console.log('Senha do usuário antes do envio:', formattedSequence);\r\n\r\n      const data = {\r\n        session_id: sessionId,\r\n        sequence: formattedSequence,\r\n      };\r\n\r\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\r\n\r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Encrypted-Session-Id': encryptedSessionId,\r\n        },\r\n      });\r\n\r\n      console.log('✅ Sequência validada com sucesso:', response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      console.log('Error response:', error.response ? error.response.data : error.message);\r\n      toast.error('Erro ao validar a sequência');\r\n    }\r\n  };\r\n\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div className=\"form-container\">\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession} className=\"primary-button\" disabled={isLoading}>\r\n        {isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'}\r\n      </button>\r\n\r\n      {isSessionValid ? (\r\n        <>\r\n          {displayGeneratedPassword()}\r\n\r\n          <h2>Clique nos botões abaixo para digitar a senha:</h2>\r\n          <div className=\"buttons-container\">{displayButtons()}</div>\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <p>{inputSequence.join(' ')}</p>\r\n\r\n          <button onClick={handleValidatePassword} className=\"primary-button\">\r\n            Validar Senha\r\n          </button>\r\n\r\n          <div className=\"token-info\">\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}