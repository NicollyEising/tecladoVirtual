{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport CryptoJS from 'crypto-js';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [buttons, setButtons] = useState([]);\n  const hashToShortNumber = input => {\n    const hash = CryptoJS.SHA256(input.toString()).toString();\n    return hash.slice(0, 8);\n  };\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    return response.data;\n  };\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const data = await generateSession(username);\n      if (data && data.sequence) {\n        setSessionId(data.session_id);\n        setPassword(formatSequence(data.sequence));\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro ao gerar sequência.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const formatSequence = sequence => {\n    return sequence.reduce((acc, val, index) => {\n      if (index % 2 === 0) acc.push([val, sequence[index + 1]]);\n      return acc;\n    }, []);\n  };\n  const generateButtons = sequence => {\n    let correctPairs = formatSequence(sequence);\n    let allButtons = correctPairs.map((pair, index) => ({\n      pair,\n      shortNumber: hashToShortNumber(`${pair[0]}${pair[1]}${index}`),\n      isCorrect: true\n    }));\n    for (let i = 0; i < correctPairs.length; i++) {\n      let num1 = Math.floor(Math.random() * 10);\n      let num2 = Math.floor(Math.random() * 10);\n      allButtons.push({\n        pair: [num1, num2],\n        shortNumber: hashToShortNumber(`${num1}${num2}${i}`),\n        isCorrect: false\n      });\n    }\n    setButtons(allButtons.sort(() => Math.random() - 0.5));\n  };\n  const handleButtonClick = pair => {\n    const flatPassword = password.flat();\n    const nextExpectedNumber = flatPassword[inputSequence.length];\n    if (pair.includes(nextExpectedNumber)) {\n      setInputSequence(prev => [...prev, nextExpectedNumber]);\n    } else {\n      toast.error(`Número ${nextExpectedNumber} incorreto. Tente novamente.`);\n    }\n  };\n  const handleValidatePassword = async () => {\n    try {\n      const formattedSequence = password.flat().map(String);\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: formattedSequence\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Encrypted-Session-Id': encryptedSessionId\n        }\n      });\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n    } catch (error) {\n      toast.error('Erro ao validar a sequência');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      className: \"primary-button\",\n      disabled: isLoading,\n      children: isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), isSessionValid && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selecione os n\\xFAmeros:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: buttons.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(pair.pair),\n          className: \"button\",\n          children: [\"[\", pair.pair[0], \", \", pair.pair[1], \"]\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputSequence.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        className: \"primary-button\",\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"token-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q/yCQN2kORQ6jbJqYQL5QruiilY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","axios","CryptoJS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isLoading","setIsLoading","buttons","setButtons","hashToShortNumber","input","hash","SHA256","toString","slice","generateSession","response","post","data","handleGenerateSession","error","sequence","session_id","formatSequence","generateButtons","success","reduce","acc","val","index","push","correctPairs","allButtons","map","pair","shortNumber","isCorrect","i","length","num1","Math","floor","random","num2","sort","handleButtonClick","flatPassword","flat","nextExpectedNumber","includes","prev","handleValidatePassword","formattedSequence","String","encryptedSessionId","AES","encrypt","headers","Authorization","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","disabled","join","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport CryptoJS from 'crypto-js';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n\r\n  const hashToShortNumber = (input) => {\r\n    const hash = CryptoJS.SHA256(input.toString()).toString();\r\n    return hash.slice(0, 8);\r\n  };\r\n\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    return response.data;\r\n  };\r\n\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      if (data && data.sequence) {\r\n        setSessionId(data.session_id);\r\n        setPassword(formatSequence(data.sequence));\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro ao gerar sequência.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatSequence = (sequence) => {\r\n    return sequence.reduce((acc, val, index) => {\r\n      if (index % 2 === 0) acc.push([val, sequence[index + 1]]);\r\n      return acc;\r\n    }, []);\r\n  };\r\n\r\n  const generateButtons = (sequence) => {\r\n    let correctPairs = formatSequence(sequence);\r\n    let allButtons = correctPairs.map((pair, index) => ({\r\n      pair,\r\n      shortNumber: hashToShortNumber(`${pair[0]}${pair[1]}${index}`),\r\n      isCorrect: true,\r\n    }));\r\n\r\n    for (let i = 0; i < correctPairs.length; i++) {\r\n      let num1 = Math.floor(Math.random() * 10);\r\n      let num2 = Math.floor(Math.random() * 10);\r\n      allButtons.push({\r\n        pair: [num1, num2],\r\n        shortNumber: hashToShortNumber(`${num1}${num2}${i}`),\r\n        isCorrect: false,\r\n      });\r\n    }\r\n\r\n    setButtons(allButtons.sort(() => Math.random() - 0.5));\r\n  };\r\n\r\n  const handleButtonClick = (pair) => {\r\n    const flatPassword = password.flat();\r\n    const nextExpectedNumber = flatPassword[inputSequence.length];\r\n\r\n    if (pair.includes(nextExpectedNumber)) {\r\n      setInputSequence((prev) => [...prev, nextExpectedNumber]);\r\n    } else {\r\n      toast.error(`Número ${nextExpectedNumber} incorreto. Tente novamente.`);\r\n    }\r\n  };\r\n\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      const formattedSequence = password.flat().map(String);\r\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\r\n      const response = await axios.post(\r\n        'http://127.0.0.1:8000/validate_sequence',\r\n        { session_id: sessionId, sequence: formattedSequence },\r\n        { headers: { Authorization: `Bearer ${token}`, 'Encrypted-Session-Id': encryptedSessionId } }\r\n      );\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      toast.error('Erro ao validar a sequência');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n      <div className=\"form-container\">\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n      <button onClick={handleGenerateSession} className=\"primary-button\" disabled={isLoading}>\r\n        {isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'}\r\n      </button>\r\n      {isSessionValid && (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          <p>{password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')}</p>\r\n          <h2>Selecione os números:</h2>\r\n          <div className=\"buttons-container\">\r\n            {buttons.map((pair, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleButtonClick(pair.pair)}\r\n                className=\"button\"\r\n              >\r\n                [{pair.pair[0]}, {pair.pair[1]}]\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <h3>Senha Selecionada:</h3>\r\n          <p>{inputSequence.join(' ')}</p>\r\n          <button onClick={handleValidatePassword} className=\"primary-button\">Validar Senha</button>\r\n          <div className=\"token-info\">\r\n            <h3>Token:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}