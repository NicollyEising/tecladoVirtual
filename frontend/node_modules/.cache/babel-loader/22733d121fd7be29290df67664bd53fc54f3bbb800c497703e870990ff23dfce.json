{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { generateSession, validateSequence, invalidateSession } from './api.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [sequence, setSequence] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n\n  // Gera uma nova sessão\n  const handleGenerateSession = async () => {\n    try {\n      const data = await generateSession();\n      setSessionId(data.session_id);\n      setSequence(data.sequence); // Recebe a sequência completa\n      setToken(data.token);\n      setIsSessionValid(true);\n      toast.success('Sessão gerada com sucesso!');\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n    }\n  };\n\n  // Valida a sequência fornecida\n  const handleValidateSequence = async () => {\n    try {\n      await validateSequence(sessionId, inputSequence, token);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false); // Finaliza a sessão após validação\n    } catch (error) {\n      toast.error('Sequência incorreta');\n    }\n  };\n\n  // Invalidar a sessão\n  const handleInvalidateSession = async () => {\n    try {\n      await invalidateSession(sessionId);\n      toast.success('Sessão invalidada!');\n      setIsSessionValid(false);\n    } catch (error) {\n      toast.error('Erro ao invalidar sessão');\n    }\n  };\n\n  // Função para adicionar um número à sequência de entrada\n  const handleButtonClick = number => {\n    if (inputSequence.length < sequence.length) {\n      setInputSequence([...inputSequence, number]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isSessionValid && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sequ\\xEAncia Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sequence.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [num, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique na sequ\\xEAncia:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: sequence.map((num, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(num) // Agora usamos o número diretamente\n          ,\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sequ\\xEAncia Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: inputSequence.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidateSequence,\n        children: \"Validar Sequ\\xEAncia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInvalidateSession,\n      children: \"Invalidar Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eV3gCmLqe2xqwnrDCU15w9j/nZ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","generateSession","validateSequence","invalidateSession","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","sessionId","setSessionId","sequence","setSequence","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","handleGenerateSession","data","session_id","success","error","handleValidateSequence","handleInvalidateSession","handleButtonClick","number","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","num","index","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { generateSession, validateSequence, invalidateSession } from './api.js';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [sequence, setSequence] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n\r\n  // Gera uma nova sessão\r\n  const handleGenerateSession = async () => {\r\n    try {\r\n      const data = await generateSession();\r\n      setSessionId(data.session_id);\r\n      setSequence(data.sequence); // Recebe a sequência completa\r\n      setToken(data.token);\r\n      setIsSessionValid(true);\r\n      toast.success('Sessão gerada com sucesso!');\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n    }\r\n  };\r\n\r\n  // Valida a sequência fornecida\r\n  const handleValidateSequence = async () => {\r\n    try {\r\n      await validateSequence(sessionId, inputSequence, token);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);  // Finaliza a sessão após validação\r\n    } catch (error) {\r\n      toast.error('Sequência incorreta');\r\n    }\r\n  };\r\n\r\n  // Invalidar a sessão\r\n  const handleInvalidateSession = async () => {\r\n    try {\r\n      await invalidateSession(sessionId);\r\n      toast.success('Sessão invalidada!');\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      toast.error('Erro ao invalidar sessão');\r\n    }\r\n  };\r\n\r\n  // Função para adicionar um número à sequência de entrada\r\n  const handleButtonClick = (number) => {\r\n    if (inputSequence.length < sequence.length) {\r\n      setInputSequence([...inputSequence, number]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n      <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n      {isSessionValid && (\r\n        <>\r\n          <h2>Sequência Gerada:</h2>\r\n          <ul>\r\n            {/* Exibe a sequência gerada de forma correta */}\r\n            {sequence.map((num, index) => (\r\n              <li key={index}>\r\n                {num} {/* Aqui a sequência já está em formato correto */}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <h2>Clique na sequência:</h2>\r\n          <div className=\"buttons\">\r\n            {/* Gerando os botões conforme a sequência completa */}\r\n            {sequence.map((num, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleButtonClick(num)} // Agora usamos o número diretamente\r\n              >\r\n                {num}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <h3>Sequência Selecionada:</h3>\r\n          <ul>\r\n            {inputSequence.map((num, index) => (\r\n              <li key={index}>{num}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button onClick={handleValidateSequence}>Validar Sequência</button>\r\n        </>\r\n      )}\r\n\r\n      <button onClick={handleInvalidateSession}>Invalidar Sessão</button>\r\n      \r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}