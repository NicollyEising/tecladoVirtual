{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\aqui\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState({\n    original: [],\n    hashed: []\n  });\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const hashToNumber = input => {\n    if (input === undefined || input === null) {\n      console.error(\"Valor inválido para hash:\", input);\n      return 0;\n    }\n    const hash = CryptoJS.SHA256(input.toString()).toString(CryptoJS.enc.Base64);\n    let uniqueNumber = 0;\n    for (let i = 0; i < hash.length; i++) {\n      uniqueNumber += hash.charCodeAt(i);\n    }\n    return uniqueNumber % 9 + 1;\n  };\n  const formatSequence = sequence => {\n    let original = [];\n    let hashed = [];\n    for (let i = 0; i < sequence.length - 1; i += 2) {\n      original.push([sequence[i], sequence[i + 1]]);\n      hashed.push([hashToNumber(sequence[i]), hashToNumber(sequence[i + 1])]);\n    }\n    if (sequence.length % 2 !== 0) {\n      const lastElement = sequence[sequence.length - 1];\n      original.push([lastElement]);\n      hashed.push([hashToNumber(lastElement)]);\n    }\n    return {\n      original,\n      hashed\n    };\n  };\n  const generateButtons = sequence => {\n    // Utilizar a sequência original (sem transformar) para gerar os botões\n    const formatted = formatSequence(sequence);\n    setPassword(formatted);\n\n    // Gerar os botões com base na sequência original\n    const allButtons = [];\n    for (let i = 0; i < sequence.length; i++) {\n      const button = sequence[i];\n      allButtons.push({\n        shortNumber: button,\n        // Usar o número original\n        secondShortNumber: button // Se necessário, você pode adicionar lógica para o segundo número\n      });\n    }\n    setButtons(allButtons);\n  };\n  const handleClearInput = () => {\n    setInputSequence([]);\n  };\n  const handleGenerateSession = async () => {\n    if (!username) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence);\n        console.log('Token de Verificação:', data.token);\n      } else {}\n    } catch (error) {\n      console.error('Erro ao gerar sessão:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const displayButtons = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map((button, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(button.shortNumber, button.secondShortNumber),\n        disabled: isButtonDisabled,\n        className: \"button\",\n        children: button.secondShortNumber != null ? `${button.shortNumber} ou ${button.secondShortNumber}` : button.shortNumber\n      }, `${button.shortNumber}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  };\n  const handleButtonClick = (shortNumber, secondShortNumber) => {\n    const flatPassword = Array.isArray(password.hashed) ? password.hashed.flat() : [];\n    const nextExpectedNumber = flatPassword[inputSequence.length];\n    if (nextExpectedNumber === undefined) {\n      return;\n    }\n    let selectedNumber = null;\n    if (shortNumber === nextExpectedNumber) {\n      selectedNumber = shortNumber;\n    } else if (secondShortNumber === nextExpectedNumber) {\n      selectedNumber = secondShortNumber;\n    }\n    if (selectedNumber !== null) {\n      setInputSequence(prevSequence => {\n        const newSequence = [...prevSequence, selectedNumber];\n        console.log('Sequência do usuário após clique:', newSequence);\n        if (newSequence.length === flatPassword.length) {\n          const isCorrect = newSequence.every((num, index) => num === flatPassword[index]);\n          if (isCorrect) {} else {\n            setIsButtonDisabled(true);\n            setTimeout(() => setIsButtonDisabled(false), 2000);\n          }\n        }\n        generateButtons(password.original.flat());\n        return newSequence;\n      });\n    } else {\n      setIsButtonDisabled(true);\n      setTimeout(() => setIsButtonDisabled(false), 2000);\n    }\n  };\n  const displayGeneratedPassword = () => {\n    if (!password.original || password.original.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 70\n    }, this);\n\n    // Exibir a senha usando a sequência original (sem aplicar o hash)\n    const generatedPassword = password.original.flat(); // Não aplicar hash, mostrar a sequência original\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"senha-gerada\",\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"senha\",\n        children: generatedPassword.join('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  };\n  const handleValidatePassword = async () => {\n    try {\n      console.log('Session ID enviado:', sessionId);\n      const flatPassword = password.original.flat(); // Usar a senha original para validar\n      if (inputSequence.join(' ') !== flatPassword.join(' ')) {\n        return;\n      }\n      const data = {\n        session_id: sessionId,\n        sequence: password.original.flat()\n      };\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', data, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Encrypted-Session-Id': encryptedSessionId\n        }\n      });\n      console.log('✅ Sequência validada com sucesso:', response.data);\n      setIsSessionValid(false);\n    } catch (error) {\n      console.log('Error response:', error.response ? error.response.data : error.message);\n    }\n  };\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), !isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Nome de usu\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bxs-user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateSession,\n        className: \"primary-button\",\n        disabled: isLoading,\n        children: isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [displayGeneratedPassword(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"clique\",\n        children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: displayButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"senha-digitada\",\n        children: inputSequence.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clear-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearInput,\n          className: \"secondary-button\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bx bxs-eraser apagar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        className: \"primary-button .validar-senha\",\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1Ih+9AnxL3JR8uj7gB6TUeuJqos=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","axios","CryptoJS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","original","hashed","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","isLoading","setIsLoading","hashToNumber","input","undefined","console","error","hash","SHA256","toString","enc","Base64","uniqueNumber","i","length","charCodeAt","formatSequence","sequence","push","lastElement","generateButtons","formatted","allButtons","button","shortNumber","secondShortNumber","handleClearInput","handleGenerateSession","data","generateSession","log","Array","isArray","session_id","displayButtons","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","onClick","handleButtonClick","disabled","flatPassword","flat","nextExpectedNumber","selectedNumber","prevSequence","newSequence","isCorrect","every","num","setTimeout","displayGeneratedPassword","generatedPassword","join","handleValidatePassword","encryptedSessionId","AES","encrypt","response","post","headers","Authorization","message","id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/aqui/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState({ original: [], hashed: [] });\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const hashToNumber = (input) => {\r\n    if (input === undefined || input === null) {\r\n      console.error(\"Valor inválido para hash:\", input);\r\n      return 0;\r\n    }\r\n\r\n    const hash = CryptoJS.SHA256(input.toString()).toString(CryptoJS.enc.Base64);\r\n    let uniqueNumber = 0;\r\n    for (let i = 0; i < hash.length; i++) {\r\n      uniqueNumber += hash.charCodeAt(i);\r\n    }\r\n    return (uniqueNumber % 9) + 1;\r\n  };\r\n\r\n  const formatSequence = (sequence) => {\r\n    let original = [];\r\n    let hashed = [];\r\n    for (let i = 0; i < sequence.length - 1; i += 2) {\r\n      original.push([sequence[i], sequence[i + 1]]);\r\n      hashed.push([hashToNumber(sequence[i]), hashToNumber(sequence[i + 1])]);\r\n    }\r\n    if (sequence.length % 2 !== 0) {\r\n      const lastElement = sequence[sequence.length - 1];\r\n      original.push([lastElement]);\r\n      hashed.push([hashToNumber(lastElement)]);\r\n    }\r\n    return { original, hashed };\r\n  };\r\n\r\n  const generateButtons = (sequence) => {\r\n    // Utilizar a sequência original (sem transformar) para gerar os botões\r\n    const formatted = formatSequence(sequence);\r\n    setPassword(formatted);\r\n\r\n    // Gerar os botões com base na sequência original\r\n    const allButtons = [];\r\n    for (let i = 0; i < sequence.length; i++) {\r\n      const button = sequence[i];\r\n      allButtons.push({\r\n        shortNumber: button,  // Usar o número original\r\n        secondShortNumber: button,  // Se necessário, você pode adicionar lógica para o segundo número\r\n      });\r\n    }\r\n\r\n    setButtons(allButtons);\r\n  };\r\n\r\n  const handleClearInput = () => {\r\n    setInputSequence([]);\r\n  };\r\n\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence);\r\n        console.log('Token de Verificação:', data.token);\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao gerar sessão:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const displayButtons = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((button, index) => (\r\n          <button\r\n            key={`${button.shortNumber}-${index}`}\r\n            onClick={() => handleButtonClick(button.shortNumber, button.secondShortNumber)}\r\n            disabled={isButtonDisabled}\r\n            className=\"button\"\r\n          >\r\n            {button.secondShortNumber != null\r\n              ? `${button.shortNumber} ou ${button.secondShortNumber}`\r\n              : button.shortNumber}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleButtonClick = (shortNumber, secondShortNumber) => {\r\n    const flatPassword = Array.isArray(password.hashed) ? password.hashed.flat() : [];\r\n    const nextExpectedNumber = flatPassword[inputSequence.length];\r\n  \r\n    if (nextExpectedNumber === undefined) {\r\n      return;\r\n    }\r\n  \r\n    let selectedNumber = null;\r\n    if (shortNumber === nextExpectedNumber) {\r\n      selectedNumber = shortNumber;\r\n    } else if (secondShortNumber === nextExpectedNumber) {\r\n      selectedNumber = secondShortNumber;\r\n    }\r\n  \r\n    if (selectedNumber !== null) {\r\n      setInputSequence((prevSequence) => {\r\n        const newSequence = [...prevSequence, selectedNumber];\r\n        console.log('Sequência do usuário após clique:', newSequence);\r\n        if (newSequence.length === flatPassword.length) {\r\n          const isCorrect = newSequence.every((num, index) => num === flatPassword[index]);\r\n          if (isCorrect) {\r\n          } else {\r\n            setIsButtonDisabled(true);\r\n            setTimeout(() => setIsButtonDisabled(false), 2000);\r\n          }\r\n        }\r\n        generateButtons(password.original.flat());\r\n        return newSequence;\r\n      });\r\n    } else {\r\n      setIsButtonDisabled(true);\r\n      setTimeout(() => setIsButtonDisabled(false), 2000);\r\n    }\r\n  };\r\n\r\n  const displayGeneratedPassword = () => {\r\n    if (!password.original || password.original.length === 0) return <p>Esperando sequência...</p>;\r\n\r\n    // Exibir a senha usando a sequência original (sem aplicar o hash)\r\n    const generatedPassword = password.original.flat();  // Não aplicar hash, mostrar a sequência original\r\n    return (\r\n      <div>\r\n        <h2 className=\"senha-gerada\">Senha Gerada:</h2>\r\n        <p className='senha'>{generatedPassword.join('')}</p>  {/* Exibe a sequência original */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      console.log('Session ID enviado:', sessionId);\r\n      const flatPassword = password.original.flat(); // Usar a senha original para validar\r\n      if (inputSequence.join(' ') !== flatPassword.join(' ')) {\r\n        return;\r\n      }\r\n      const data = {\r\n        session_id: sessionId,\r\n        sequence: password.original.flat(),\r\n      };\r\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Encrypted-Session-Id': encryptedSessionId,\r\n        },\r\n      });\r\n      console.log('✅ Sequência validada com sucesso:', response.data);\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      console.log('Error response:', error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App wrapper\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      {!isSessionValid ? (\r\n        <>\r\n          <div className=\"form-container\">\r\n            <input\r\n              id=\"username\"\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder=\"Nome de usuário\"\r\n            />\r\n            <i className=\"bx bxs-user\"></i>\r\n          </div>\r\n\r\n          <button onClick={handleGenerateSession} className=\"primary-button\" disabled={isLoading}>\r\n            {isLoading ? 'Gerando Sessão...' : 'Gerar Nova Sessão'}\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {displayGeneratedPassword()}\r\n          <h2 className='clique'>Clique nos botões abaixo para digitar a senha:</h2>\r\n          <div className=\"buttons-container\">{displayButtons()}</div>\r\n          <h3>Senha Selecionada:</h3>\r\n          <p className='senha-digitada'>{inputSequence.join(' ')}</p>\r\n          <div className=\"clear-button\">\r\n            <button onClick={handleClearInput} className=\"secondary-button\">\r\n              <i className='bx bxs-eraser apagar'></i>\r\n            </button>\r\n          </div>\r\n          <button onClick={handleValidatePassword} className=\"primary-button .validar-senha\">\r\n            Validar Senha\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}