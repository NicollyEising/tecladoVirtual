{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENCRYPTION_KEY = 'chave-secreta';\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const generateUniquePassword = length => {\n    if (length > 10) {\n      throw new Error(\"A senha não pode ter mais de 10 números únicos.\");\n    }\n    return [...Array(10).keys()].sort(() => Math.random() - 0.5).slice(0, length);\n  };\n  const hashToNumber = input => {\n    if (!input) return 0;\n    const hash = CryptoJS.SHA256(input.toString()).toString(CryptoJS.enc.Base64);\n    return [...hash].reduce((acc, char) => acc + char.charCodeAt(0), 0) % 10;\n  };\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const data = await axios.post('http://127.0.0.1:8000/generate_session', {\n        username\n      });\n      console.log('Dados recebidos:', data.data);\n      if (data.data.sequence && Array.isArray(data.data.sequence)) {\n        setSessionId(data.data.session_id);\n        const generatedPassword = generateUniquePassword(10);\n        setPassword(generatedPassword);\n        setToken(data.data.token);\n        setIsSessionValid(true);\n        generateButtons(data.data.sequence);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: sequência inválida.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão.');\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const generateButtons = sequence => {\n    const uniqueNumbers = [...new Set(sequence)];\n    let allButtons = uniqueNumbers.map(num => ({\n      num,\n      shortNumber: hashToNumber(num),\n      secondShortNumber: hashToNumber(num + 1),\n      isClickable: true\n    }));\n    setButtons(allButtons.sort(() => Math.random() - 0.5));\n  };\n  const handleButtonClick = num => {\n    if (inputSequence.includes(num)) {\n      toast.error('Número já selecionado.');\n      return;\n    }\n    const nextExpectedNumber = password[inputSequence.length];\n    if (num === nextExpectedNumber) {\n      setInputSequence([...inputSequence, num]);\n      if (inputSequence.length + 1 === password.length) {\n        toast.success('Senha correta! Acesso liberado.');\n      }\n    } else {\n      toast.error('Número incorreto!');\n      setIsButtonDisabled(true);\n      setTimeout(() => setIsButtonDisabled(false), 2000);\n    }\n  };\n  const handleValidatePassword = async () => {\n    if (inputSequence.join(' ') !== password.join(' ')) {\n      toast.error('Senha incorreta.');\n      return;\n    }\n    try {\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, ENCRYPTION_KEY).toString();\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: password.map(String)\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Encrypted-Session-Id': encryptedSessionId\n        }\n      });\n      toast.success('Senha validada com sucesso!');\n      setIsSessionValid(false);\n    } catch (error) {\n      toast.error('Erro ao validar senha.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      className: \"primary-button\",\n      disabled: isLoading,\n      children: isLoading ? 'Gerando...' : 'Gerar Sessão'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), isSessionValid && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password.join(', ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos bot\\xF5es para inserir a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: buttons.map(button => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(button.num),\n          disabled: isButtonDisabled,\n          className: \"button\",\n          style: {\n            backgroundColor: inputSequence.includes(button.num) ? 'green' : ''\n          },\n          children: [button.shortNumber, \" / \", button.secondShortNumber]\n        }, button.num, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputSequence.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        className: \"primary-button\",\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Token:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eIx+b+r9j2UTAAJYly2mAUAaAp8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","axios","CryptoJS","jsxDEV","_jsxDEV","Fragment","_Fragment","ENCRYPTION_KEY","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","isLoading","setIsLoading","generateUniquePassword","length","Error","Array","keys","sort","Math","random","slice","hashToNumber","input","hash","SHA256","toString","enc","Base64","reduce","acc","char","charCodeAt","handleGenerateSession","error","data","post","console","log","sequence","isArray","session_id","generatedPassword","generateButtons","success","uniqueNumbers","Set","allButtons","map","num","shortNumber","secondShortNumber","isClickable","handleButtonClick","includes","nextExpectedNumber","setTimeout","handleValidatePassword","join","encryptedSessionId","AES","encrypt","response","String","headers","Authorization","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","disabled","button","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst ENCRYPTION_KEY = 'chave-secreta';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const generateUniquePassword = (length) => {\r\n    if (length > 10) {\r\n      throw new Error(\"A senha não pode ter mais de 10 números únicos.\");\r\n    }\r\n    return [...Array(10).keys()].sort(() => Math.random() - 0.5).slice(0, length);\r\n  };\r\n\r\n  const hashToNumber = (input) => {\r\n    if (!input) return 0;\r\n    const hash = CryptoJS.SHA256(input.toString()).toString(CryptoJS.enc.Base64);\r\n    return [...hash].reduce((acc, char) => acc + char.charCodeAt(0), 0) % 10;\r\n  };\r\n\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    try {\r\n      const data = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n      console.log('Dados recebidos:', data.data);\r\n\r\n      if (data.data.sequence && Array.isArray(data.data.sequence)) {\r\n        setSessionId(data.data.session_id);\r\n        const generatedPassword = generateUniquePassword(10);\r\n        setPassword(generatedPassword);\r\n        setToken(data.data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.data.sequence);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: sequência inválida.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão.');\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateButtons = (sequence) => {\r\n    const uniqueNumbers = [...new Set(sequence)];\r\n    let allButtons = uniqueNumbers.map((num) => ({\r\n      num,\r\n      shortNumber: hashToNumber(num),\r\n      secondShortNumber: hashToNumber(num + 1),\r\n      isClickable: true,\r\n    }));\r\n    setButtons(allButtons.sort(() => Math.random() - 0.5));\r\n  };\r\n\r\n  const handleButtonClick = (num) => {\r\n    if (inputSequence.includes(num)) {\r\n      toast.error('Número já selecionado.');\r\n      return;\r\n    }\r\n    const nextExpectedNumber = password[inputSequence.length];\r\n    if (num === nextExpectedNumber) {\r\n      setInputSequence([...inputSequence, num]);\r\n      if (inputSequence.length + 1 === password.length) {\r\n        toast.success('Senha correta! Acesso liberado.');\r\n      }\r\n    } else {\r\n      toast.error('Número incorreto!');\r\n      setIsButtonDisabled(true);\r\n      setTimeout(() => setIsButtonDisabled(false), 2000);\r\n    }\r\n  };\r\n\r\n  const handleValidatePassword = async () => {\r\n    if (inputSequence.join(' ') !== password.join(' ')) {\r\n      toast.error('Senha incorreta.');\r\n      return;\r\n    }\r\n    try {\r\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, ENCRYPTION_KEY).toString();\r\n      const response = await axios.post(\r\n        'http://127.0.0.1:8000/validate_sequence',\r\n        { session_id: sessionId, sequence: password.map(String) },\r\n        { headers: { Authorization: `Bearer ${token}`, 'Encrypted-Session-Id': encryptedSessionId } }\r\n      );\r\n      toast.success('Senha validada com sucesso!');\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      toast.error('Erro ao validar senha.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n      <div className=\"form-container\">\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome\"\r\n        />\r\n      </div>\r\n      <button onClick={handleGenerateSession} className=\"primary-button\" disabled={isLoading}>\r\n        {isLoading ? 'Gerando...' : 'Gerar Sessão'}\r\n      </button>\r\n      {isSessionValid && (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          <p>{password.join(', ')}</p>\r\n          <h2>Clique nos botões para inserir a senha:</h2>\r\n          <div className=\"buttons\">\r\n            {buttons.map((button) => (\r\n              <button\r\n                key={button.num}\r\n                onClick={() => handleButtonClick(button.num)}\r\n                disabled={isButtonDisabled}\r\n                className=\"button\"\r\n                style={{ backgroundColor: inputSequence.includes(button.num) ? 'green' : '' }}\r\n              >\r\n                {button.shortNumber} / {button.secondShortNumber}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <h3>Senha Selecionada:</h3>\r\n          <p>{inputSequence.join(' ')}</p>\r\n          <button onClick={handleValidatePassword} className=\"primary-button\">\r\n            Validar Senha\r\n          </button>\r\n          <h3>Token:</h3>\r\n          <p>{token}</p>\r\n        </>\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}