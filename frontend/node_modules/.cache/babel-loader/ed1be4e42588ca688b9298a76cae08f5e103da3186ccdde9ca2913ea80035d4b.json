{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n\n  // Gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(data.sequence); // Armazena a sequência plana\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence); // Gera botões com números individuais\n        console.log(\"Token de Verificação:\", data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  };\n\n  // Gerar botões com números individuais\n  const generateButtons = sequence => {\n    const correctNumbers = [...sequence];\n    const fakeNumbers = Array.from({\n      length: correctNumbers.length\n    }, () => Math.floor(Math.random() * 9) + 1);\n    const allButtons = [...correctNumbers, ...fakeNumbers];\n    const shuffledButtons = allButtons.sort(() => Math.random() - 0.5);\n    setButtons(shuffledButtons);\n  };\n\n  // Validar a sequência\n  const handleValidatePassword = async () => {\n    try {\n      console.log(\"Senha do usuário:\", inputSequence);\n\n      // Verifica cada número individualmente\n      for (let i = 0; i < inputSequence.length; i++) {\n        if (inputSequence[i] !== password[i]) {\n          toast.error(`Erro na posição ${i + 1}: esperado ${password[i]}, recebido ${inputSequence[i]}`);\n          return;\n        }\n      }\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: inputSequence\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n      setIsButtonDisabled(true);\n    } catch (error) {\n      var _error$response;\n      toast.error('Erro ao validar a sequência');\n      console.error('Erro:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n\n  // Gerar sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    return response.data;\n  };\n\n  // Clique nos botões\n  const handleButtonClick = number => {\n    setInputSequence(prev => [...prev, number]);\n  };\n\n  // Exibir senha formatada em pares\n  const displayPassword = () => {\n    if (password.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando senha...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 39\n    }, this);\n    const pairs = [];\n    for (let i = 0; i < password.length; i += 2) {\n      pairs.push(`[${password[i]},${password[i + 1]}]`);\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: pairs.join(' ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Exibir botões individuais\n  const displayButtons = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buttons\",\n    children: buttons.map((number, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick(number),\n      disabled: isButtonDisabled,\n      children: number\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), isSessionValid && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), displayPassword(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos n\\xFAmeros:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), displayButtons(), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Digitada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputSequence.join(', ') || \"Nenhuma entrada...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        children: \"Validar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QP7fkk/X+Eyp9jbv71tHJv8d/Ls=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","generateButtons","success","correctNumbers","fakeNumbers","from","length","Math","floor","random","allButtons","shuffledButtons","sort","handleValidatePassword","i","response","post","headers","Authorization","_error$response","message","handleButtonClick","number","prev","displayPassword","children","fileName","_jsxFileName","lineNumber","columnNumber","pairs","push","join","displayButtons","className","map","index","onClick","disabled","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n\r\n  // Gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(data.sequence); // Armazena a sequência plana\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence); // Gera botões com números individuais\r\n        console.log(\"Token de Verificação:\", data.token);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  };\r\n\r\n  // Gerar botões com números individuais\r\n  const generateButtons = (sequence) => {\r\n    const correctNumbers = [...sequence];\r\n    const fakeNumbers = Array.from({ length: correctNumbers.length }, () => \r\n      Math.floor(Math.random() * 9) + 1\r\n    );\r\n    \r\n    const allButtons = [...correctNumbers, ...fakeNumbers];\r\n    const shuffledButtons = allButtons.sort(() => Math.random() - 0.5);\r\n    \r\n    setButtons(shuffledButtons);\r\n  };\r\n\r\n  // Validar a sequência\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      console.log(\"Senha do usuário:\", inputSequence);\r\n      \r\n      // Verifica cada número individualmente\r\n      for (let i = 0; i < inputSequence.length; i++) {\r\n        if (inputSequence[i] !== password[i]) {\r\n          toast.error(`Erro na posição ${i + 1}: esperado ${password[i]}, recebido ${inputSequence[i]}`);\r\n          return;\r\n        }\r\n      }\r\n\r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\r\n        session_id: sessionId,\r\n        sequence: inputSequence,\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n      setIsButtonDisabled(true);\r\n    } catch (error) {\r\n      toast.error('Erro ao validar a sequência');\r\n      console.error('Erro:', error.response?.data || error.message);\r\n    }\r\n  };\r\n\r\n  // Gerar sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    return response.data;\r\n  };\r\n\r\n  // Clique nos botões\r\n  const handleButtonClick = (number) => {\r\n    setInputSequence(prev => [...prev, number]);\r\n  };\r\n\r\n  // Exibir senha formatada em pares\r\n  const displayPassword = () => {\r\n    if (password.length === 0) return <p>Carregando senha...</p>;\r\n    \r\n    const pairs = [];\r\n    for (let i = 0; i < password.length; i += 2) {\r\n      pairs.push(`[${password[i]},${password[i + 1]}]`);\r\n    }\r\n    \r\n    return <p>{pairs.join(' ')}</p>;\r\n  };\r\n\r\n  // Exibir botões individuais\r\n  const displayButtons = () => (\r\n    <div className=\"buttons\">\r\n      {buttons.map((number, index) => (\r\n        <button\r\n          key={index}\r\n          onClick={() => handleButtonClick(number)}\r\n          disabled={isButtonDisabled}\r\n        >\r\n          {number}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div>\r\n        <label>Nome de Usuário:</label>\r\n        <input\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession}>Gerar Sessão</button>\r\n\r\n      {isSessionValid && (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          {displayPassword()}\r\n\r\n          <h2>Clique nos números:</h2>\r\n          {displayButtons()}\r\n\r\n          <h3>Senha Digitada:</h3>\r\n          <p>{inputSequence.join(', ') || \"Nenhuma entrada...\"}</p>\r\n\r\n          <button onClick={handleValidatePassword}>Validar</button>\r\n          \r\n          <div>\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}