{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://127.0.0.1:8000\";\n\n// Função para validar a sequência\nexport async function validateSequence(sessionId, sequence) {\n  // Transformando a sequência em pares (caso necessário)\n  const formattedSequence = sequence.map(num => [num]); // Transforma números individuais em pares\n\n  try {\n    const response = await axios.post(`${API_URL}/validate_sequence`, {\n      session_id: sessionId,\n      sequence: formattedSequence // Agora enviamos no formato correto!\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    console.log(\"Resposta do servidor:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao validar sequência:\", error);\n    throw error;\n  }\n}\n\n// Outras funções da API\nexport async function generateSession(username) {\n  const response = await axios.post(`${API_URL}/generate_session`, {\n    username\n  });\n  return response.data;\n}\nexport async function invalidateSession(sessionId) {\n  const response = await axios.post(`${API_URL}/invalidate_session`, {\n    session_id: sessionId\n  });\n  return response.data;\n}\nexport async function registerUser(username, password) {\n  const response = await axios.post(`${API_URL}/register`, {\n    username,\n    password\n  });\n  return response.data;\n}","map":{"version":3,"names":["axios","API_URL","validateSequence","sessionId","sequence","formattedSequence","map","num","response","post","session_id","headers","Authorization","localStorage","getItem","console","log","data","error","generateSession","username","invalidateSession","registerUser","password"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://127.0.0.1:8000\";\r\n\r\n// Função para validar a sequência\r\nexport async function validateSequence(sessionId, sequence) {\r\n    // Transformando a sequência em pares (caso necessário)\r\n    const formattedSequence = sequence.map(num => [num]); // Transforma números individuais em pares\r\n\r\n    try {\r\n        const response = await axios.post(`${API_URL}/validate_sequence`, {\r\n            session_id: sessionId,\r\n            sequence: formattedSequence  // Agora enviamos no formato correto!\r\n        }, {\r\n            headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n            }\r\n        });\r\n\r\n        console.log(\"Resposta do servidor:\", response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Erro ao validar sequência:\", error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n// Outras funções da API\r\nexport async function generateSession(username) {\r\n    const response = await axios.post(`${API_URL}/generate_session`, { username });\r\n    return response.data;\r\n}\r\n\r\nexport async function invalidateSession(sessionId) {\r\n    const response = await axios.post(`${API_URL}/invalidate_session`, { session_id: sessionId });\r\n    return response.data;\r\n}\r\n\r\nexport async function registerUser(username, password) {\r\n    const response = await axios.post(`${API_URL}/register`, { username, password });\r\n    return response.data;\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;;AAEvC;AACA,OAAO,eAAeC,gBAAgBA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EACxD;EACA,MAAMC,iBAAiB,GAAGD,QAAQ,CAACE,GAAG,CAACC,GAAG,IAAI,CAACA,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEtD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,oBAAoB,EAAE;MAC9DS,UAAU,EAAEP,SAAS;MACrBC,QAAQ,EAAEC,iBAAiB,CAAE;IACjC,CAAC,EAAE;MACCM,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC1D;IACJ,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAER,QAAQ,CAACS,IAAI,CAAC;IACnD,OAAOT,QAAQ,CAACS,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACf;AACJ;;AAEA;AACA,OAAO,eAAeC,eAAeA,CAACC,QAAQ,EAAE;EAC5C,MAAMZ,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,mBAAmB,EAAE;IAAEmB;EAAS,CAAC,CAAC;EAC9E,OAAOZ,QAAQ,CAACS,IAAI;AACxB;AAEA,OAAO,eAAeI,iBAAiBA,CAAClB,SAAS,EAAE;EAC/C,MAAMK,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,qBAAqB,EAAE;IAAES,UAAU,EAAEP;EAAU,CAAC,CAAC;EAC7F,OAAOK,QAAQ,CAACS,IAAI;AACxB;AAEA,OAAO,eAAeK,YAAYA,CAACF,QAAQ,EAAEG,QAAQ,EAAE;EACnD,MAAMf,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,WAAW,EAAE;IAAEmB,QAAQ;IAAEG;EAAS,CAAC,CAAC;EAChF,OAAOf,QAAQ,CAACS,IAAI;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}