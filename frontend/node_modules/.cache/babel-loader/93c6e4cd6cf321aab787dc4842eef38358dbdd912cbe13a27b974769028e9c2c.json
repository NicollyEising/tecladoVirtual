{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [passwordGrid, setPasswordGrid] = useState([]);\n  const [selectedSequence, setSelectedSequence] = useState([]);\n  const [sessionId, setSessionId] = useState(null);\n\n  // Simulação da geração de senha\n  useEffect(() => {\n    generateNewSession();\n  }, []);\n  const generateNewSession = async () => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/generate_session\");\n      const {\n        session_id,\n        sequence\n      } = response.data;\n      setSessionId(session_id);\n      setPasswordGrid(formatSequence(sequence)); // Formata a sequência em pares\n      setSelectedSequence([]);\n    } catch (error) {\n      console.error(\"Erro ao gerar sessão:\", error);\n    }\n  };\n\n  // Formata a sequência em pares para exibição como botões\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n\n  // Lida com a seleção do usuário ao clicar nos botões\n  const handleNumberClick = pair => {\n    setSelectedSequence(prev => [...prev, pair]);\n  };\n\n  // Envia a sequência digitada para validação\n  const handleValidatePassword = async () => {\n    try {\n      if (!sessionId) {\n        console.error(\"Sessão inválida\");\n        return;\n      }\n\n      // Achata a estrutura para garantir um array simples de inteiros\n      const flatSequence = selectedSequence.flat();\n      const response = await axios.post(\"http://127.0.0.1:8000/validate_sequence\", {\n        session_id: sessionId,\n        sequence: flatSequence\n      });\n      alert(\"Senha validada com sucesso!\");\n    } catch (error) {\n      var _error$response;\n      console.error(\"Erro ao validar senha:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      alert(\"Falha na validação da senha.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }, this), \" Usu\\xE1rioTeste\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateNewSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Senha Gerada:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), passwordGrid.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleNumberClick(pair),\n      children: [pair[0], \" / \", pair[1]]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Senha Selecionada:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedSequence.map(pair => pair.join(\" / \")).join(\", \") || \"Nenhuma sequência selecionada ainda...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleValidatePassword,\n      children: \"Validar Senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"A2ZJD3m9RgKPwe1N5SAoi9CbfIM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","passwordGrid","setPasswordGrid","selectedSequence","setSelectedSequence","sessionId","setSessionId","generateNewSession","response","post","session_id","sequence","data","formatSequence","error","console","formatted","i","length","push","handleNumberClick","pair","prev","handleValidatePassword","flatSequence","flat","alert","_error$response","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","join","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n  const [passwordGrid, setPasswordGrid] = useState([]);\r\n  const [selectedSequence, setSelectedSequence] = useState([]);\r\n  const [sessionId, setSessionId] = useState(null);\r\n\r\n  // Simulação da geração de senha\r\n  useEffect(() => {\r\n    generateNewSession();\r\n  }, []);\r\n\r\n  const generateNewSession = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:8000/generate_session\");\r\n      const { session_id, sequence } = response.data;\r\n\r\n      setSessionId(session_id);\r\n      setPasswordGrid(formatSequence(sequence)); // Formata a sequência em pares\r\n      setSelectedSequence([]);\r\n    } catch (error) {\r\n      console.error(\"Erro ao gerar sessão:\", error);\r\n    }\r\n  };\r\n\r\n  // Formata a sequência em pares para exibição como botões\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n  // Lida com a seleção do usuário ao clicar nos botões\r\n  const handleNumberClick = (pair) => {\r\n    setSelectedSequence((prev) => [...prev, pair]);\r\n  };\r\n\r\n  // Envia a sequência digitada para validação\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      if (!sessionId) {\r\n        console.error(\"Sessão inválida\");\r\n        return;\r\n      }\r\n\r\n      // Achata a estrutura para garantir um array simples de inteiros\r\n      const flatSequence = selectedSequence.flat();\r\n\r\n      const response = await axios.post(\"http://127.0.0.1:8000/validate_sequence\", {\r\n        session_id: sessionId,\r\n        sequence: flatSequence,\r\n      });\r\n\r\n      alert(\"Senha validada com sucesso!\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao validar senha:\", error.response?.data || error);\r\n      alert(\"Falha na validação da senha.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <h2>Teclado Virtual</h2>\r\n\r\n      <p><strong>Nome de Usuário:</strong> UsuárioTeste</p>\r\n\r\n      <button onClick={generateNewSession}>Gerar Nova Sessão</button>\r\n\r\n      <h3>Senha Gerada:</h3>\r\n      {passwordGrid.map((pair, index) => (\r\n        <button key={index} onClick={() => handleNumberClick(pair)}>\r\n          {pair[0]} / {pair[1]}\r\n        </button>\r\n      ))}\r\n\r\n      <h3>Senha Selecionada:</h3>\r\n      <p>{selectedSequence.map(pair => pair.join(\" / \")).join(\", \") || \"Nenhuma sequência selecionada ainda...\"}</p>\r\n\r\n      <button onClick={handleValidatePassword}>Validar Senha</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACdY,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,wCAAwC,CAAC;MAC3E,MAAM;QAAEC,UAAU;QAAEC;MAAS,CAAC,GAAGH,QAAQ,CAACI,IAAI;MAE9CN,YAAY,CAACI,UAAU,CAAC;MACxBR,eAAe,CAACW,cAAc,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC3CP,mBAAmB,CAAC,EAAE,CAAC;IACzB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;;EAED;EACA,MAAMD,cAAc,GAAIF,QAAQ,IAAK;IACnC,IAAIK,SAAS,GAAG,EAAE;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,QAAQ,CAACO,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MAC3CD,SAAS,CAACG,IAAI,CAAC,CAACR,QAAQ,CAACM,CAAC,CAAC,EAAEN,QAAQ,CAACM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChD;IACA,OAAOD,SAAS;EAClB,CAAC;;EAED;EACA,MAAMI,iBAAiB,GAAIC,IAAI,IAAK;IAClCjB,mBAAmB,CAAEkB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,IAAI,CAAC,CAAC;EAChD,CAAC;;EAED;EACA,MAAME,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF,IAAI,CAAClB,SAAS,EAAE;QACdU,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAC;QAChC;MACF;;MAEA;MACA,MAAMU,YAAY,GAAGrB,gBAAgB,CAACsB,IAAI,CAAC,CAAC;MAE5C,MAAMjB,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,yCAAyC,EAAE;QAC3EC,UAAU,EAAEL,SAAS;QACrBM,QAAQ,EAAEa;MACZ,CAAC,CAAC;MAEFE,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAAa,eAAA;MACdZ,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAE,EAAAa,eAAA,GAAAb,KAAK,CAACN,QAAQ,cAAAmB,eAAA,uBAAdA,eAAA,CAAgBf,IAAI,KAAIE,KAAK,CAAC;MACtEY,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,oBACE5B,OAAA;IAAK8B,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDjC,OAAA;MAAAiC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExBrC,OAAA;MAAAiC,QAAA,gBAAGjC,OAAA;QAAAiC,QAAA,EAAQ;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,oBAAa;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAErDrC,OAAA;MAAQsC,OAAO,EAAE7B,kBAAmB;MAAAwB,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/DrC,OAAA;MAAAiC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBlC,YAAY,CAACoC,GAAG,CAAC,CAAChB,IAAI,EAAEiB,KAAK,kBAC5BxC,OAAA;MAAoBsC,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAACC,IAAI,CAAE;MAAAU,QAAA,GACxDV,IAAI,CAAC,CAAC,CAAC,EAAC,KAAG,EAACA,IAAI,CAAC,CAAC,CAAC;IAAA,GADTiB,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACT,CAAC,eAEFrC,OAAA;MAAAiC,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BrC,OAAA;MAAAiC,QAAA,EAAI5B,gBAAgB,CAACkC,GAAG,CAAChB,IAAI,IAAIA,IAAI,CAACkB,IAAI,CAAC,KAAK,CAAC,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC,IAAI;IAAwC;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9GrC,OAAA;MAAQsC,OAAO,EAAEb,sBAAuB;MAAAQ,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAACnC,EAAA,CAjFID,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAmFT,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}