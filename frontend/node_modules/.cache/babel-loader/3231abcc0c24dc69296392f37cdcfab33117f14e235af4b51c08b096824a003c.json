{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport CryptoJS from 'crypto-js'; // Importe a biblioteca\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n  const [isLoading, setIsLoading] = useState(false); // Para controle de loading\n\n  // Função para gerar um hash único para um número\n  const hashNumberToShortNumber = number => {\n    const hash = CryptoJS.SHA256(number.toString()).toString();\n    const hashPart = parseInt(hash.slice(0, 8), 16);\n    return hashPart % 10; // Gera um número curto entre 0 e 9\n  };\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    setIsLoading(true); // Ativa o loading\n\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(formatSequence(data.sequence)); // Guardando a senha formatada\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence); // Gera botões misturados\n\n        console.log('Token de Verificação:', data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    } finally {\n      setIsLoading(false); // Desativa o loading\n    }\n  };\n\n  // Função para formatar a sequência em pares\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n\n  // Função para gerar os botões (misturados)\n  const generateButtons = sequence => {\n    let correctPairs = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      let num1 = sequence[i];\n      let num2 = sequence[i + 1];\n      correctPairs.push([num1, num2]);\n    }\n    let numberToHashMap = new Map();\n    for (let i = 0; i < 10; i++) {\n      numberToHashMap.set(i, hashNumberToShortNumber(i));\n    }\n    let allButtons = [];\n\n    // Adiciona os botões corretos\n    correctPairs.forEach((pair, index) => {\n      const hashKey = `${pair[0]}${pair[1]}${index}`;\n      const shortNumbers = [numberToHashMap.get(pair[0]), numberToHashMap.get(pair[1])];\n      allButtons.push({\n        pair,\n        shortNumbers,\n        hashKey,\n        isCorrect: true\n      });\n    });\n\n    // Adiciona botões com valores alternativos (números aleatórios)\n    for (let i = 0; i < correctPairs.length; i++) {\n      let num1 = Math.floor(Math.random() * 10);\n      let num2 = Math.floor(Math.random() * 10);\n      const hashKey = `${num1}${num2}${i + correctPairs.length}`;\n      const shortNumbers = [numberToHashMap.get(num1), numberToHashMap.get(num2)];\n      allButtons.push({\n        pair: [num1, num2],\n        shortNumbers,\n        hashKey,\n        isCorrect: false\n      });\n    }\n\n    // Embaralha a ordem dos botões\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\n    setButtons(allButtons);\n  };\n\n  // Exibe os botões misturados\n  const displayButtons = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map(button => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(button.pair),\n        disabled: isButtonDisabled,\n        className: \"button\",\n        style: inputSequence.includes(button.pair[0]) || inputSequence.includes(button.pair[1]) ? {\n          backgroundColor: 'green'\n        } : {},\n        children: [button.shortNumbers[0], \" \", button.shortNumbers[1], \" \"]\n      }, button.hashKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Função para lidar com o clique nos botões\n  const handleButtonClick = pair => {\n    const flatPassword = password.flat(); // \"Achata\" a senha para facilitar a comparação\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Obtém o próximo número esperado da senha\n\n    // Verifica se o próximo número esperado está em qualquer posição no par\n    const isValid = pair.includes(nextExpectedNumber);\n    if (isValid) {\n      setInputSequence(prevSequence => {\n        const newSequence = [...prevSequence, nextExpectedNumber];\n        console.log('Sequência do usuário após clique:', newSequence);\n        return newSequence;\n      });\n    } else {\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\n    }\n  };\n\n  // Exibe a senha gerada com os números curtos\n  const displayGeneratedPassword = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [password.map(pair => {\n          const button = buttons.find(b => b.pair[0] === pair[0] && b.pair[1] === pair[1] && b.isCorrect);\n          if (button) {\n            return `[${button.shortNumbers[0]}, ${button.shortNumbers[1]}]`; // Exibe os números curtos correspondentes\n          }\n          return '';\n        }).join(' '), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Função para validar a sequência\n  const handleValidatePassword = async () => {\n    try {\n      console.log('Session ID enviado:', sessionId);\n      const formattedSequence = password.flat().map(item => item.toString());\n      console.log('Senha do usuário antes do envio:', formattedSequence);\n      const data = {\n        session_id: sessionId,\n        sequence: formattedSequence\n      };\n\n      // Criptografa o sessionId antes de enviar ao backend\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', data, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Encrypted-Session-Id': encryptedSessionId // Envia sessionId criptografado\n        }\n      });\n      console.log('✅ Sequência validada com sucesso:', response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false); // Desativa a sessão após validação bem-sucedida\n      setInputSequence([]); // Limpa a sequência de entrada\n      setButtons([]); // Limpa os botões\n      setPassword([]); // Limpa a senha\n      setToken(''); // Limpa o token\n      setSessionId(''); // Limpa o sessionId\n    } catch (error) {\n      console.log('Error response:', error.response ? error.response.data : error.message);\n      toast.error('Erro ao validar a sequência');\n    }\n  };\n\n  // Função para gerar sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome de usu\\xE1rio\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateSession,\n        disabled: isLoading,\n        children: isLoading ? 'Gerando...' : 'Gerar Sessão'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), displayButtons(), displayGeneratedPassword(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleValidatePassword,\n      disabled: isButtonDisabled,\n      children: \"Validar Sequ\\xEAncia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eIx+b+r9j2UTAAJYly2mAUAaAp8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","CryptoJS","jsxDEV","_jsxDEV","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","isLoading","setIsLoading","hashNumberToShortNumber","number","hash","SHA256","toString","hashPart","parseInt","slice","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","formatSequence","generateButtons","success","formatted","i","length","push","correctPairs","num1","num2","numberToHashMap","Map","set","allButtons","forEach","pair","index","hashKey","shortNumbers","get","isCorrect","Math","floor","random","sort","displayButtons","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","button","onClick","handleButtonClick","disabled","style","includes","backgroundColor","flatPassword","flat","nextExpectedNumber","isValid","prevSequence","newSequence","displayGeneratedPassword","find","b","join","handleValidatePassword","formattedSequence","item","encryptedSessionId","AES","encrypt","response","post","headers","Authorization","message","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\nimport CryptoJS from 'crypto-js'; // Importe a biblioteca\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false); // Para controle de loading\r\n\r\n  // Função para gerar um hash único para um número\r\n  const hashNumberToShortNumber = (number) => {\r\n    const hash = CryptoJS.SHA256(number.toString()).toString();\r\n    const hashPart = parseInt(hash.slice(0, 8), 16);\r\n    return hashPart % 10; // Gera um número curto entre 0 e 9\r\n  };\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true); // Ativa o loading\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(formatSequence(data.sequence)); // Guardando a senha formatada\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence); // Gera botões misturados\r\n\r\n        console.log('Token de Verificação:', data.token);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    } finally {\r\n      setIsLoading(false); // Desativa o loading\r\n    }\r\n  };\r\n\r\n  // Função para formatar a sequência em pares\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n  // Função para gerar os botões (misturados)\r\n  const generateButtons = (sequence) => {\r\n    let correctPairs = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      let num1 = sequence[i];\r\n      let num2 = sequence[i + 1];\r\n      correctPairs.push([num1, num2]);\r\n    }\r\n\r\n    let numberToHashMap = new Map();\r\n    for (let i = 0; i < 10; i++) {\r\n      numberToHashMap.set(i, hashNumberToShortNumber(i));\r\n    }\r\n\r\n    let allButtons = [];\r\n\r\n    // Adiciona os botões corretos\r\n    correctPairs.forEach((pair, index) => {\r\n      const hashKey = `${pair[0]}${pair[1]}${index}`;\r\n      const shortNumbers = [numberToHashMap.get(pair[0]), numberToHashMap.get(pair[1])];\r\n      allButtons.push({ pair, shortNumbers, hashKey, isCorrect: true });\r\n    });\r\n\r\n    // Adiciona botões com valores alternativos (números aleatórios)\r\n    for (let i = 0; i < correctPairs.length; i++) {\r\n      let num1 = Math.floor(Math.random() * 10);\r\n      let num2 = Math.floor(Math.random() * 10);\r\n      const hashKey = `${num1}${num2}${i + correctPairs.length}`;\r\n      const shortNumbers = [numberToHashMap.get(num1), numberToHashMap.get(num2)];\r\n      allButtons.push({ pair: [num1, num2], shortNumbers, hashKey, isCorrect: false });\r\n    }\r\n\r\n    // Embaralha a ordem dos botões\r\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\r\n    setButtons(allButtons);\r\n  };\r\n\r\n  // Exibe os botões misturados\r\n  const displayButtons = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n\r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((button) => (\r\n          <button\r\n            key={button.hashKey}\r\n            onClick={() => handleButtonClick(button.pair)}\r\n            disabled={isButtonDisabled}\r\n            className=\"button\"\r\n            style={\r\n              inputSequence.includes(button.pair[0]) || inputSequence.includes(button.pair[1])\r\n                ? { backgroundColor: 'green' }\r\n                : {}\r\n            }\r\n          >\r\n            {button.shortNumbers[0]} {button.shortNumbers[1]} {/* Exibe os dois números curtos */}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões\r\n  const handleButtonClick = (pair) => {\r\n    const flatPassword = password.flat(); // \"Achata\" a senha para facilitar a comparação\r\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Obtém o próximo número esperado da senha\r\n\r\n    // Verifica se o próximo número esperado está em qualquer posição no par\r\n    const isValid = pair.includes(nextExpectedNumber); \r\n\r\n    if (isValid) {\r\n      setInputSequence((prevSequence) => {\r\n        const newSequence = [...prevSequence, nextExpectedNumber];\r\n        console.log('Sequência do usuário após clique:', newSequence);\r\n        return newSequence;\r\n      });\r\n    } else {\r\n      toast.error(`Número ${nextExpectedNumber} não está no par. Tente novamente.`);\r\n    }\r\n  };\r\n\r\n  // Exibe a senha gerada com os números curtos\r\n  const displayGeneratedPassword = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequência...</p>;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Senha Gerada:</h2>\r\n        <p>\r\n          {password\r\n            .map(pair => {\r\n              const button = buttons.find(b => b.pair[0] === pair[0] && b.pair[1] === pair[1] && b.isCorrect);\r\n              if (button) {\r\n                return `[${button.shortNumbers[0]}, ${button.shortNumbers[1]}]`;  // Exibe os números curtos correspondentes\r\n              }\r\n              return '';\r\n            })\r\n            .join(' ')} {/* Junta os números curtos com espaço */}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Função para validar a sequência\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      console.log('Session ID enviado:', sessionId);\r\n\r\n      const formattedSequence = password.flat().map((item) => item.toString());\r\n      console.log('Senha do usuário antes do envio:', formattedSequence);\r\n\r\n      const data = {\r\n        session_id: sessionId,\r\n        sequence: formattedSequence,\r\n      };\r\n\r\n      // Criptografa o sessionId antes de enviar ao backend\r\n      const encryptedSessionId = CryptoJS.AES.encrypt(sessionId, 'chave-secreta').toString();\r\n\r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Encrypted-Session-Id': encryptedSessionId, // Envia sessionId criptografado\r\n        },\r\n      });\r\n\r\n      console.log('✅ Sequência validada com sucesso:', response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false); // Desativa a sessão após validação bem-sucedida\r\n      setInputSequence([]); // Limpa a sequência de entrada\r\n      setButtons([]); // Limpa os botões\r\n      setPassword([]); // Limpa a senha\r\n      setToken(''); // Limpa o token\r\n      setSessionId(''); // Limpa o sessionId\r\n    } catch (error) {\r\n      console.log('Error response:', error.response ? error.response.data : error.message);\r\n      toast.error('Erro ao validar a sequência');\r\n    }\r\n  };\r\n\r\n  // Função para gerar sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nome de usuário\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <button onClick={handleGenerateSession} disabled={isLoading}>\r\n          {isLoading ? 'Gerando...' : 'Gerar Sessão'}\r\n        </button>\r\n      </div>\r\n\r\n      {displayButtons()}\r\n\r\n      {displayGeneratedPassword()}\r\n\r\n      <button onClick={handleValidatePassword} disabled={isButtonDisabled}>\r\n        Validar Sequência\r\n      </button>\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}