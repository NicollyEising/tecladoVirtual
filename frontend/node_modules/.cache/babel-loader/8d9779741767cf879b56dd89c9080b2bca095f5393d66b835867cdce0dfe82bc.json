{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { generateSession, validateSequence, invalidateSession } from './api.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState(''); // Adicionando o estado para o nome de usuário\n  const [sessionId, setSessionId] = useState('');\n  const [sequence, setSequence] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n\n  // Gera uma nova sessão, agora passando o username\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username); // Passando username para a função\n      setSessionId(data.session_id);\n      setSequence(data.sequence);\n      setToken(data.token);\n      setIsSessionValid(true);\n      toast.success('Sessão gerada com sucesso!');\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n    }\n  };\n\n  // Valida a sequência fornecida\n  // Valida a sequência fornecida\n  const handleValidateSequence = async () => {\n    try {\n      // Fazendo a requisição ao backend para validar a sequência\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: inputSequence.map(Number) // Converte a sequência para inteiros\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}` // Envia o token JWT corretamente\n        }\n      });\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false); // Finaliza a sessão após validação\n    } catch (error) {\n      if (error.response) {\n        // Resposta de erro da API\n        console.error(\"❌ Erro ao validar sequência:\", error.response.data);\n        toast.error('Sequência incorreta');\n      } else if (error.request) {\n        // Se não houve resposta da API\n        console.error(\"❌ Erro ao conectar com o servidor:\", error.request);\n        toast.error('Erro ao conectar com o servidor');\n      } else {\n        // Outros tipos de erro\n        console.error(\"❌ Erro desconhecido:\", error.message);\n        toast.error('Erro desconhecido');\n      }\n    }\n  };\n\n  // Invalidar a sessão\n  const handleInvalidateSession = async () => {\n    try {\n      await invalidateSession(sessionId);\n      toast.success('Sessão invalidada!');\n      setIsSessionValid(false);\n    } catch (error) {\n      toast.error('Erro ao invalidar sessão');\n    }\n  };\n\n  // Função para adicionar um número à sequência de entrada\n  const handleButtonClick = number => {\n    if (inputSequence.length < sequence.length) {\n      setInputSequence([...inputSequence, number]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), isSessionValid && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sequ\\xEAncia Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sequence.map((pair, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [pair[0], \" - \", pair[1]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique na sequ\\xEAncia:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: sequence.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(index + 1),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sequ\\xEAncia Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: inputSequence.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidateSequence,\n        children: \"Validar Sequ\\xEAncia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInvalidateSession,\n      children: \"Invalidar Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tb6TjcSR3dTu7TY1IGYt09qsNps=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","generateSession","validateSequence","invalidateSession","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","sequence","setSequence","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","handleGenerateSession","error","data","session_id","success","handleValidateSequence","response","axios","post","map","Number","headers","Authorization","console","log","request","message","handleInvalidateSession","handleButtonClick","number","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","pair","index","_","num","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { generateSession, validateSequence, invalidateSession } from './api.js';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');  // Adicionando o estado para o nome de usuário\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [sequence, setSequence] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n\r\n  // Gera uma nova sessão, agora passando o username\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);  // Passando username para a função\r\n      setSessionId(data.session_id);\r\n      setSequence(data.sequence);\r\n      setToken(data.token);\r\n      setIsSessionValid(true);\r\n      toast.success('Sessão gerada com sucesso!');\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n    }\r\n  };\r\n\r\n  // Valida a sequência fornecida\r\n// Valida a sequência fornecida\r\nconst handleValidateSequence = async () => {\r\n  try {\r\n    // Fazendo a requisição ao backend para validar a sequência\r\n    const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\r\n      session_id: sessionId,\r\n      sequence: inputSequence.map(Number), // Converte a sequência para inteiros\r\n    }, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // Envia o token JWT corretamente\r\n      },\r\n    });\r\n\r\n    console.log(\"✅ Sequência validada com sucesso:\", response.data);\r\n    toast.success('Sequência validada com sucesso!');\r\n    setIsSessionValid(false);  // Finaliza a sessão após validação\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // Resposta de erro da API\r\n      console.error(\"❌ Erro ao validar sequência:\", error.response.data);\r\n      toast.error('Sequência incorreta');\r\n    } else if (error.request) {\r\n      // Se não houve resposta da API\r\n      console.error(\"❌ Erro ao conectar com o servidor:\", error.request);\r\n      toast.error('Erro ao conectar com o servidor');\r\n    } else {\r\n      // Outros tipos de erro\r\n      console.error(\"❌ Erro desconhecido:\", error.message);\r\n      toast.error('Erro desconhecido');\r\n    }\r\n  }\r\n};\r\n\r\n\r\n  // Invalidar a sessão\r\n  const handleInvalidateSession = async () => {\r\n    try {\r\n      await invalidateSession(sessionId);\r\n      toast.success('Sessão invalidada!');\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      toast.error('Erro ao invalidar sessão');\r\n    }\r\n  };\r\n\r\n  // Função para adicionar um número à sequência de entrada\r\n  const handleButtonClick = (number) => {\r\n    if (inputSequence.length < sequence.length) {\r\n      setInputSequence([...inputSequence, number]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n      \r\n      {/* Campo para inserir o nome de usuário */}\r\n      <div>\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input \r\n          id=\"username\" \r\n          type=\"text\" \r\n          value={username} \r\n          onChange={(e) => setUsername(e.target.value)} \r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n\r\n      {isSessionValid && (\r\n        <>\r\n          <h2>Sequência Gerada:</h2>\r\n          <ul>\r\n            {sequence.map((pair, index) => (\r\n              <li key={index}>\r\n                {pair[0]} - {pair[1]}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <h2>Clique na sequência:</h2>\r\n          <div className=\"buttons\">\r\n            {/* Adicionando botões numerados */}\r\n            {sequence.map((_, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleButtonClick(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <h3>Sequência Selecionada:</h3>\r\n          <ul>\r\n            {inputSequence.map((num, index) => (\r\n              <li key={index}>{num}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button onClick={handleValidateSequence}>Validar Sequência</button>\r\n        </>\r\n      )}\r\n\r\n      <button onClick={handleInvalidateSession}>Invalidar Sessão</button>\r\n      \r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}