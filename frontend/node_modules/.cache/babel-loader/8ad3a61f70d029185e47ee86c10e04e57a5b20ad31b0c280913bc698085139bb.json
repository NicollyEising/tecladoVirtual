{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { generateSession, validateSequence, invalidateSession } from './api.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CryptoJS from 'crypto-js'; // Importe o CryptoJS para gerar o hash\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [sequence, setSequence] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n\n  // Gerar hash da sequência\n  const generateHash = sequence => {\n    // Converte a sequência de números para string e gera o hash\n    const sequenceString = sequence.join('-'); // Exemplo: \"1-2-3-4-5\"\n    return CryptoJS.SHA256(sequenceString).toString(CryptoJS.enc.Base64); // Gerando hash e convertendo para Base64\n  };\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      setSessionId(data.session_id);\n      setSequence(data.sequence);\n      setToken(data.token);\n      setIsSessionValid(true);\n      toast.success('Sessão gerada com sucesso!');\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n    }\n  };\n  const handleValidateSequence = async () => {\n    console.log(\"Sessão ID:\", sessionId);\n    console.log(\"Token:\", token);\n    console.log(\"Sequência enviada:\", inputSequence);\n    try {\n      const formattedSequence = inputSequence.map(index => sequence[index]); // Captura os pares corretamente\n\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: formattedSequence,\n        // Agora estamos enviando os pares corretamente\n        ip_address: \"127.0.0.1\"\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n    } catch (error) {\n      if (error.response) {\n        console.error(\"❌ Erro ao validar sequência:\", error.response.data);\n        toast.error('Sequência incorreta');\n      } else if (error.request) {\n        console.error(\"❌ Erro ao conectar com o servidor:\", error.request);\n        toast.error('Erro ao conectar com o servidor');\n      } else {\n        console.error(\"❌ Erro desconhecido:\", error.message);\n        toast.error('Erro desconhecido');\n      }\n    }\n  };\n  const handleInvalidateSession = async () => {\n    try {\n      await invalidateSession(sessionId);\n      toast.success('Sessão invalidada!');\n      setIsSessionValid(false);\n    } catch (error) {\n      toast.error('Erro ao invalidar sessão');\n    }\n  };\n  const handleButtonClick = number => {\n    if (inputSequence.length < sequence.flat().length) {\n      setInputSequence([...inputSequence, number]);\n    }\n  };\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buttons\",\n    children: sequence.flat().map((num, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick(num),\n      children: num\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), isSessionValid && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sequ\\xEAncia Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sequence.map((pair, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [pair[0], \" - \", pair[1]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique na sequ\\xEAncia:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: sequence.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(index + 1),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sequ\\xEAncia Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: inputSequence.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidateSequence,\n        children: \"Validar Sequ\\xEAncia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInvalidateSession,\n      children: \"Invalidar Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tb6TjcSR3dTu7TY1IGYt09qsNps=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","generateSession","validateSequence","invalidateSession","ToastContainer","toast","CryptoJS","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","sequence","setSequence","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","generateHash","sequenceString","join","SHA256","toString","enc","Base64","handleGenerateSession","error","data","session_id","success","handleValidateSequence","console","log","formattedSequence","map","index","response","post","ip_address","headers","Authorization","request","message","handleInvalidateSession","handleButtonClick","number","length","flat","className","children","num","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","pair","_","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { generateSession, validateSequence, invalidateSession } from './api.js';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CryptoJS from 'crypto-js'; // Importe o CryptoJS para gerar o hash\r\nimport axios from 'axios';\r\n\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [sequence, setSequence] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n\r\n  // Gerar hash da sequência\r\n  const generateHash = (sequence) => {\r\n    // Converte a sequência de números para string e gera o hash\r\n    const sequenceString = sequence.join('-'); // Exemplo: \"1-2-3-4-5\"\r\n    return CryptoJS.SHA256(sequenceString).toString(CryptoJS.enc.Base64); // Gerando hash e convertendo para Base64\r\n  };\r\n\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      setSessionId(data.session_id);\r\n      setSequence(data.sequence);\r\n      setToken(data.token);\r\n      setIsSessionValid(true);\r\n      toast.success('Sessão gerada com sucesso!');\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n    }\r\n  };\r\n\r\n  const handleValidateSequence = async () => {\r\n  console.log(\"Sessão ID:\", sessionId);\r\n  console.log(\"Token:\", token);\r\n  console.log(\"Sequência enviada:\", inputSequence);\r\n\r\n  try {\r\n    const formattedSequence = inputSequence.map(index => sequence[index]); // Captura os pares corretamente\r\n\r\n    const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\r\n      session_id: sessionId,\r\n      sequence: formattedSequence, // Agora estamos enviando os pares corretamente\r\n      ip_address: \"127.0.0.1\"\r\n    }, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    console.log(\"✅ Sequência validada com sucesso:\", response.data);\r\n    toast.success('Sequência validada com sucesso!');\r\n    setIsSessionValid(false);\r\n  } catch (error) {\r\n    if (error.response) {\r\n      console.error(\"❌ Erro ao validar sequência:\", error.response.data);\r\n      toast.error('Sequência incorreta');\r\n    } else if (error.request) {\r\n      console.error(\"❌ Erro ao conectar com o servidor:\", error.request);\r\n      toast.error('Erro ao conectar com o servidor');\r\n    } else {\r\n      console.error(\"❌ Erro desconhecido:\", error.message);\r\n      toast.error('Erro desconhecido');\r\n    }\r\n  }\r\n};\r\n\r\n  \r\n\r\n  const handleInvalidateSession = async () => {\r\n    try {\r\n      await invalidateSession(sessionId);\r\n      toast.success('Sessão invalidada!');\r\n      setIsSessionValid(false);\r\n    } catch (error) {\r\n      toast.error('Erro ao invalidar sessão');\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = (number) => {\r\n    if (inputSequence.length < sequence.flat().length) {\r\n      setInputSequence([...inputSequence, number]);\r\n    }\r\n  };\r\n  \r\n  <div className=\"buttons\">\r\n    {sequence.flat().map((num, index) => (\r\n      <button key={index} onClick={() => handleButtonClick(num)}>\r\n        {num}\r\n      </button>\r\n    ))}\r\n  </div>\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n      <div>\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input \r\n          id=\"username\" \r\n          type=\"text\" \r\n          value={username} \r\n          onChange={(e) => setUsername(e.target.value)} \r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n\r\n      {isSessionValid && (\r\n        <>\r\n          <h2>Sequência Gerada:</h2>\r\n          <ul>\r\n            {sequence.map((pair, index) => (\r\n              <li key={index}>\r\n                {pair[0]} - {pair[1]}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <h2>Clique na sequência:</h2>\r\n          <div className=\"buttons\">\r\n            {sequence.map((_, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleButtonClick(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <h3>Sequência Selecionada:</h3>\r\n          <ul>\r\n            {inputSequence.map((num, index) => (\r\n              <li key={index}>{num}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button onClick={handleValidateSequence}>Validar Sequência</button>\r\n        </>\r\n      )}\r\n\r\n      <button onClick={handleInvalidateSession}>Invalidar Sessão</button>\r\n      \r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}