{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]); // Senha gerada com pares de números\n  const [inputPassword, setInputPassword] = useState([]); // Senha digitada\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = useCallback(async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(data.sequence);\n        setToken(data.token);\n        setIsSessionValid(true);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  }, [username]);\n\n  // Função para enviar a senha e validar no backend\n  const handleValidatePassword = async () => {\n    try {\n      // A sequência precisa estar como um array de arrays contendo os números, ex: [[6], [3], [9], [2]]\n      const wrappedSequence = inputPassword.map(num => [num]); // Isso já está certo, mas vamos verificar a estrutura\n\n      console.log(\"Sequência para envio:\", wrappedSequence); // Verifique o que está sendo enviado\n\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: wrappedSequence // A sequência agora deve estar no formato correto\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n      setIsButtonDisabled(true); // Desabilita botões após a validação\n    } catch (error) {\n      console.error(error.response ? error.response.data : error.message); // Log para erros detalhados\n      toast.error('Sequência incorreta');\n    }\n  };\n\n  // Função para gerar a sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    return response.data;\n  };\n\n  // Função para lidar com o clique nos botões da sequência\n  const handleButtonClick = position => {\n    const selectedNumber = password[position][0]; // Pega o número do par\n    setInputPassword(prevSequence => [...prevSequence, selectedNumber]);\n  };\n  useEffect(() => {\n    if (Array.isArray(password) && password.length > 0) {\n      console.log('Senha carregada:', password);\n    }\n  }, [password]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), isSessionValid && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), password.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando senha...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password.length === 0 ? 'Senha não gerada ou estrutura incorreta' : password.map((pair, index) => {\n          // Verificar se 'pair' é um array e tem pelo menos 1 item\n          if (Array.isArray(pair) && pair.length > 0) {\n            return pair.join(' / '); // Aplica join nos elementos internos da array\n          }\n          return `Erro no item ${index + 1}: Estrutura inválida ou vazio`; // Caso a estrutura não seja válida\n        }).join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos n\\xFAmeros abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), password.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Esperando sequ\\xEAncia...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: password.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(index),\n          disabled: isButtonDisabled // Desabilita os botões após a validação\n          ,\n          children: [pair.join(' / '), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: inputPassword.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nenhuma sequ\\xEAncia selecionada ainda...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this) : inputPassword.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hV++2cd739Y+Yl0makPPZmFOpbU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ToastContainer","toast","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputPassword","setInputPassword","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","handleGenerateSession","error","data","generateSession","sequence","Array","isArray","session_id","success","console","handleValidatePassword","wrappedSequence","map","num","log","response","post","headers","Authorization","message","handleButtonClick","position","selectedNumber","prevSequence","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","pair","index","join","disabled","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]); // Senha gerada com pares de números\r\n  const [inputPassword, setInputPassword] = useState([]); // Senha digitada\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = useCallback(async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(data.sequence);\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  }, [username]);\r\n\r\n  // Função para enviar a senha e validar no backend\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      // A sequência precisa estar como um array de arrays contendo os números, ex: [[6], [3], [9], [2]]\r\n      const wrappedSequence = inputPassword.map(num => [num]); // Isso já está certo, mas vamos verificar a estrutura\r\n  \r\n      console.log(\"Sequência para envio:\", wrappedSequence); // Verifique o que está sendo enviado\r\n  \r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\r\n        session_id: sessionId,\r\n        sequence: wrappedSequence,  // A sequência agora deve estar no formato correto\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n  \r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n      setIsButtonDisabled(true);  // Desabilita botões após a validação\r\n    } catch (error) {\r\n      console.error(error.response ? error.response.data : error.message); // Log para erros detalhados\r\n      toast.error('Sequência incorreta');\r\n    }\r\n  };\r\n  \r\n\r\n  // Função para gerar a sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    return response.data;\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões da sequência\r\n  const handleButtonClick = (position) => {\r\n    const selectedNumber = password[position][0]; // Pega o número do par\r\n    setInputPassword((prevSequence) => [...prevSequence, selectedNumber]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(password) && password.length > 0) {\r\n      console.log('Senha carregada:', password);\r\n    }\r\n  }, [password]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div>\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n\r\n      {isSessionValid && (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          {password.length === 0 ? (\r\n            <p>Carregando senha...</p>\r\n          ) : (\r\n            <p>\r\n              {password.length === 0\r\n                ? 'Senha não gerada ou estrutura incorreta'\r\n                : password.map((pair, index) => {\r\n                    // Verificar se 'pair' é um array e tem pelo menos 1 item\r\n                    if (Array.isArray(pair) && pair.length > 0) {\r\n                      return pair.join(' / '); // Aplica join nos elementos internos da array\r\n                    }\r\n                    return `Erro no item ${index + 1}: Estrutura inválida ou vazio`; // Caso a estrutura não seja válida\r\n                  }).join(' ')}\r\n            </p>\r\n          )}\r\n\r\n          <h2>Clique nos números abaixo para digitar a senha:</h2>\r\n          {password.length === 0 ? (\r\n            <p>Esperando sequência...</p>\r\n          ) : (\r\n            <div className=\"buttons\">\r\n              {password.map((pair, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => handleButtonClick(index)}\r\n                  disabled={isButtonDisabled} // Desabilita os botões após a validação\r\n                >\r\n                  {pair.join(' / ')} {/* Exibe os dois números no botão */}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <ul>\r\n            {inputPassword.length === 0 ? (\r\n              <p>Nenhuma sequência selecionada ainda...</p>\r\n            ) : (\r\n              inputPassword.map((num, index) => (\r\n                <li key={index}>{num}</li>\r\n              ))\r\n            )}\r\n          </ul>\r\n\r\n          <button onClick={handleValidatePassword}>Validar Senha</button>\r\n\r\n          <div>\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}