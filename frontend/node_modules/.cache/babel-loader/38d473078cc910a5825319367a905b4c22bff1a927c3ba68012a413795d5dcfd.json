{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]); // Senha gerada\n  const [inputPassword, setInputPassword] = useState([]); // Senha digitada\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [inputSequence, setInputSequence] = useState([]); // Initialized as empty array\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(data.sequence); // Guardando a senha\n        setToken(data.token);\n        setIsSessionValid(true);\n        console.log(\"Token de Verificação:\", data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  };\n\n  // Função para enviar a senha e validar no backend\n  const handleValidatePassword = async () => {\n    try {\n      console.log(\"Senha do usuário antes do envio:\", inputSequence); // Verify sequence format\n\n      // Ensure the sequence is a flat array before sending\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: inputSequence // Directly send the flat sequence\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}` // Include token for authentication\n        }\n      });\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n      setIsButtonDisabled(true); // Disable buttons after validation\n    } catch (error) {\n      console.log(error.response ? error.response.data : error.message); // Log error details\n      toast.error('Sequência incorreta');\n    }\n  };\n\n  // Função para gerar a sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n\n  // Função para lidar com o clique nos botões da sequência\n  const handleButtonClick = number => {\n    setInputSequence(prevSequence => {\n      const newSequence = [...prevSequence, number];\n      console.log(\"Sequência do usuário após clique:\", newSequence);\n      return newSequence;\n    });\n  };\n\n  // Verificação do estado da sequência\n  useEffect(() => {\n    if (Array.isArray(password) && password.length > 0) {\n      console.log('Senha carregada:', password);\n    }\n  }, [password]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), password.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando senha...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this) // Exibe a senha gerada\n      , /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos n\\xFAmeros abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), password.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Esperando sequ\\xEAncia...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: Array.from({\n          length: 9\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(index + 1),\n          disabled: isButtonDisabled // Desabilita os botões após a validação\n          ,\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: inputPassword.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nenhuma sequ\\xEAncia selecionada ainda...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this) : inputPassword.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wKRsjpgeVmaQ2W/hcIaQoGbt4hQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputPassword","setInputPassword","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","inputSequence","setInputSequence","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","success","handleValidatePassword","response","post","headers","Authorization","message","handleButtonClick","number","prevSequence","newSequence","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","join","from","_","index","disabled","map","num","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]); // Senha gerada\r\n  const [inputPassword, setInputPassword] = useState([]); // Senha digitada\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [inputSequence, setInputSequence] = useState([]);  // Initialized as empty array\r\n\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(data.sequence); // Guardando a senha\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n\r\n        console.log(\"Token de Verificação:\", data.token);\r\n\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  };\r\n\r\n  // Função para enviar a senha e validar no backend\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      console.log(\"Senha do usuário antes do envio:\", inputSequence);  // Verify sequence format\r\n  \r\n      // Ensure the sequence is a flat array before sending\r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\r\n        session_id: sessionId,\r\n        sequence: inputSequence,  // Directly send the flat sequence\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,  // Include token for authentication\r\n        },\r\n      });\r\n  \r\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n      setIsButtonDisabled(true);  // Disable buttons after validation\r\n    } catch (error) {\r\n      console.log(error.response ? error.response.data : error.message);  // Log error details\r\n      toast.error('Sequência incorreta');\r\n    }\r\n  };\r\n  \r\n\r\n  // Função para gerar a sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões da sequência\r\n  const handleButtonClick = (number) => {\r\n    setInputSequence((prevSequence) => {\r\n      const newSequence = [...prevSequence, number];\r\n      console.log(\"Sequência do usuário após clique:\", newSequence);\r\n      return newSequence;\r\n    });\r\n  };\r\n  \r\n\r\n  // Verificação do estado da sequência\r\n  useEffect(() => {\r\n    if (Array.isArray(password) && password.length > 0) {\r\n      console.log('Senha carregada:', password);\r\n    }\r\n  }, [password]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div>\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n\r\n      {isSessionValid ? (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          {password.length === 0 ? (\r\n            <p>Carregando senha...</p>\r\n          ) : (\r\n            <p>{password.join(' ')}</p> // Exibe a senha gerada\r\n          )}\r\n\r\n          <h2>Clique nos números abaixo para digitar a senha:</h2>\r\n          {password.length === 0 ? (\r\n            <p>Esperando sequência...</p>\r\n          ) : (\r\n            <div className=\"buttons\">\r\n              {Array.from({ length: 9 }, (_, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => handleButtonClick(index + 1)}\r\n                  disabled={isButtonDisabled} // Desabilita os botões após a validação\r\n                >\r\n                  {index + 1}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <ul>\r\n            {inputPassword.length === 0 ? (\r\n              <p>Nenhuma sequência selecionada ainda...</p>\r\n            ) : (\r\n              inputPassword.map((num, index) => (\r\n                <li key={index}>{num}</li>\r\n              ))\r\n            )}\r\n          </ul>\r\n\r\n          <button onClick={handleValidatePassword}>Validar Senha</button>\r\n\r\n          {/* Exibe o Token de Verificação */}\r\n          <div>\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}