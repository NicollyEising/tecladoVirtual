{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n\n  // Função para gerar nova sessão\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usuário.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(formatSequence(data.sequence)); // Guardando a senha formatada\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence); // Gera botões com misturados\n\n        console.log(\"Token de Verificação:\", data.token);\n        toast.success('Sessão gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequência não foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sessão');\n      console.error('Erro ao gerar sessão:', error);\n    }\n  };\n\n  // Formata a sequência correta em pares\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n\n  // Gera botões misturando os corretos com falsos\n  const generateButtons = sequence => {\n    let correctPairs = formatSequence(sequence);\n    let fakePairs = generateFakePairs(correctPairs.length);\n    let allButtons = [...correctPairs, ...fakePairs];\n    allButtons = allButtons.sort(() => Math.random() - 0.5); // Embaralha os botões\n\n    setButtons(allButtons);\n  };\n\n  // Gera pares falsos para confundir\n  const generateFakePairs = count => {\n    let fakePairs = [];\n    while (fakePairs.length < count) {\n      let num1 = Math.floor(Math.random() * 9) + 1;\n      let num2 = Math.floor(Math.random() * 9) + 1;\n      let newPair = [num1, num2];\n\n      // Evita duplicação com pares corretos\n      if (!fakePairs.some(pair => pair[0] === newPair[0] && pair[1] === newPair[1])) {\n        fakePairs.push(newPair);\n      }\n    }\n    return fakePairs;\n  };\n  let resposta = [];\n  // Função para validar a sequência\n  const handleValidatePassword = async () => {\n    try {\n      const flatSequence = inputSequence.flat();\n      console.log(\"Senha do usuário antes do envio:\", flatSequence);\n      for (let i = 0; i < flatSequence.length; i++) {\n        console.log(flatSequence[i]);\n        if (flatSequence[i][0] !== password[i][0] || flatSequence[i][1] !== password[i][1]) {\n          console.log(\"Sequência incorreta: \" + flatSequence[i]);\n          toast.error('Sequência incorreta: ' + flatSequence[i]);\n          return;\n        } else if (flatSequence[i] === password[i]) {\n          resposta[i] = flatSequence[i];\n        }\n      }\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\n        session_id: sessionId,\n        sequence: resposta\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\n      toast.success('Sequência validada com sucesso!');\n      setIsSessionValid(false);\n      setIsButtonDisabled(true);\n    } catch (error) {\n      console.log(error.response ? error.response.data : error.message);\n      toast.error('Sequência incorreta');\n    }\n  };\n\n  // Função para gerar sessão no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de geração de sessão:', response.data);\n    return response.data;\n  };\n\n  // Função para lidar com o clique nos botões\n  const handleButtonClick = pair => {\n    setInputSequence(prevSequence => {\n      const newSequence = [...prevSequence, pair];\n      console.log(\"Sequência do usuário após clique:\", newSequence);\n      return newSequence;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), password.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando senha...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), buttons.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Esperando sequ\\xEAncia...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: buttons.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(pair),\n          disabled: isButtonDisabled,\n          children: [\"[\", pair[0], \", \", pair[1], \"]\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputSequence.map(pair => `[${pair[0]},${pair[1]}]`).join(' ') || \"Nenhuma sequência selecionada ainda...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QP7fkk/X+Eyp9jbv71tHJv8d/Ls=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","formatSequence","generateButtons","success","formatted","i","length","push","correctPairs","fakePairs","generateFakePairs","allButtons","sort","Math","random","count","num1","floor","num2","newPair","some","pair","resposta","handleValidatePassword","flatSequence","flat","response","post","headers","Authorization","message","handleButtonClick","prevSequence","newSequence","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","map","join","index","disabled","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n\r\n  // Função para gerar nova sessão\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usuário.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(formatSequence(data.sequence)); // Guardando a senha formatada\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence); // Gera botões com misturados\r\n\r\n        console.log(\"Token de Verificação:\", data.token);\r\n        toast.success('Sessão gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequência não foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sessão');\r\n      console.error('Erro ao gerar sessão:', error);\r\n    }\r\n  };\r\n\r\n  // Formata a sequência correta em pares\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n  // Gera botões misturando os corretos com falsos\r\n  const generateButtons = (sequence) => {\r\n    let correctPairs = formatSequence(sequence);\r\n    let fakePairs = generateFakePairs(correctPairs.length);\r\n\r\n    let allButtons = [...correctPairs, ...fakePairs];\r\n    allButtons = allButtons.sort(() => Math.random() - 0.5); // Embaralha os botões\r\n\r\n    setButtons(allButtons);\r\n  };\r\n\r\n  // Gera pares falsos para confundir\r\n  const generateFakePairs = (count) => {\r\n    let fakePairs = [];\r\n    while (fakePairs.length < count) {\r\n      let num1 = Math.floor(Math.random() * 9) + 1;\r\n      let num2 = Math.floor(Math.random() * 9) + 1;\r\n      let newPair = [num1, num2];\r\n\r\n      // Evita duplicação com pares corretos\r\n      if (!fakePairs.some(pair => pair[0] === newPair[0] && pair[1] === newPair[1])) {\r\n        fakePairs.push(newPair);\r\n      }\r\n    }\r\n    return fakePairs;\r\n  };\r\n\r\n\r\n  let resposta = [];\r\n  // Função para validar a sequência\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n      const flatSequence = inputSequence.flat();\r\n\r\n      console.log(\"Senha do usuário antes do envio:\", flatSequence);\r\n\r\n      for (let i = 0; i < flatSequence.length; i++) {\r\n        console.log(flatSequence[i]);\r\n        if (flatSequence[i][0] !== password[i][0] || flatSequence[i][1] !== password[i][1]) {\r\n          console.log(\"Sequência incorreta: \" + flatSequence[i]);\r\n          toast.error('Sequência incorreta: ' + flatSequence[i]);\r\n          return;\r\n        }else if (flatSequence[i] === password[i]) {\r\n          resposta[i] = flatSequence[i];\r\n        }\r\n      }\r\n\r\n      const response = await axios.post('http://127.0.0.1:8000/validate_sequence', {\r\n        session_id: sessionId,\r\n        sequence: resposta,\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      console.log(\"✅ Sequência validada com sucesso:\", response.data);\r\n      toast.success('Sequência validada com sucesso!');\r\n      setIsSessionValid(false);\r\n      setIsButtonDisabled(true);\r\n    } catch (error) {\r\n      console.log(error.response ? error.response.data : error.message);\r\n      toast.error('Sequência incorreta');\r\n    }\r\n  };\r\n\r\n  // Função para gerar sessão no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de geração de sessão:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  // Função para lidar com o clique nos botões\r\n  const handleButtonClick = (pair) => {\r\n    setInputSequence((prevSequence) => {\r\n      const newSequence = [...prevSequence, pair];\r\n      console.log(\"Sequência do usuário após clique:\", newSequence);\r\n      return newSequence;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div>\r\n        <label htmlFor=\"username\">Nome de Usuário:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usuário\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession}>Gerar Nova Sessão</button>\r\n\r\n      {isSessionValid ? (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          {password.length === 0 ? (\r\n            <p>Carregando senha...</p>\r\n          ) : (\r\n            <p>{password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')}</p>\r\n          )}\r\n\r\n          <h2>Clique nos botões abaixo para digitar a senha:</h2>\r\n          {buttons.length === 0 ? (\r\n            <p>Esperando sequência...</p>\r\n          ) : (\r\n            <div className=\"buttons\">\r\n              {buttons.map((pair, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => handleButtonClick(pair)}\r\n                  disabled={isButtonDisabled}\r\n                >\r\n                  [{pair[0]}, {pair[1]}]\r\n                </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <p>{inputSequence.map(pair => `[${pair[0]},${pair[1]}]`).join(' ') || \"Nenhuma sequência selecionada ainda...\"}</p>\r\n\r\n          <button onClick={handleValidatePassword}>Validar Senha</button>\r\n\r\n          {/* Exibe o Token de Verificação */}\r\n          <div>\r\n            <h3>Token de Verificação:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}