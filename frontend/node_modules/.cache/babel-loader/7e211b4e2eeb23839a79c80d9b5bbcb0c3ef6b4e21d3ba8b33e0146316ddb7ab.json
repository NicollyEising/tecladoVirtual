{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faculdade\\\\Desktop\\\\Algoritmos Avan\\xE7ados\\\\tecladoVirtual\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './api.css';\nimport CryptoJS from 'crypto-js'; // Importe a biblioteca\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [password, setPassword] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [token, setToken] = useState('');\n  const [isSessionValid, setIsSessionValid] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [buttons, setButtons] = useState([]);\n\n  // Fun√ß√£o para gerar nova sess√£o\n  const handleGenerateSession = async () => {\n    if (!username) {\n      toast.error('Por favor, insira um nome de usu√°rio.');\n      return;\n    }\n    try {\n      const data = await generateSession(username);\n      console.log('Dados recebidos da API:', data);\n      if (data && data.sequence && Array.isArray(data.sequence)) {\n        setSessionId(data.session_id);\n        setPassword(formatSequence(data.sequence)); // Guardando a senha formatada\n        setToken(data.token);\n        setIsSessionValid(true);\n        generateButtons(data.sequence); // Gera bot√µes com misturados\n\n        console.log(\"Token de Verifica√ß√£o:\", data.token);\n        toast.success('Sess√£o gerada com sucesso!');\n      } else {\n        toast.error('Erro: a sequ√™ncia n√£o foi retornada corretamente.');\n      }\n    } catch (error) {\n      toast.error('Erro ao gerar sess√£o');\n      console.error('Erro ao gerar sess√£o:', error);\n    }\n  };\n\n  // Formata a sequ√™ncia correta em pares\n  const formatSequence = sequence => {\n    let formatted = [];\n    for (let i = 0; i < sequence.length; i += 2) {\n      formatted.push([sequence[i], sequence[i + 1]]);\n    }\n    return formatted;\n  };\n\n  // Fun√ß√£o para validar a sele√ß√£o\n  const isValidSelection = selectedNumber => {\n    const flatPassword = password.flat(); // Aqui \"achata\" a sequ√™ncia correta da senha\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Verifica o pr√≥ximo n√∫mero esperado\n    return selectedNumber === nextExpectedNumber;\n  };\n\n  // Fun√ß√£o para lidar com o clique nos bot√µes\n  const handleButtonClick = pair => {\n    const flatPassword = password.flat(); // \"Achata\" a senha para facilitar a compara√ß√£o\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Obt√©m o pr√≥ximo n√∫mero esperado da senha\n\n    // Verifica se o n√∫mero do par √© v√°lido (igual ao pr√≥ximo n√∫mero esperado)\n    const isValid = pair.includes(nextExpectedNumber); // Verifica se o pr√≥ximo n√∫mero esperado est√° no par\n\n    if (isValid) {\n      // Se for v√°lido, adiciona o n√∫mero √† sequ√™ncia\n      setInputSequence(prevSequence => {\n        const newSequence = [...prevSequence, nextExpectedNumber];\n        console.log(\"Sequ√™ncia do usu√°rio ap√≥s clique:\", newSequence);\n        return newSequence;\n      });\n    } else {\n      // Se for inv√°lido, exibe uma mensagem de erro e n√£o faz nada\n      toast.error(`N√∫mero ${nextExpectedNumber} n√£o est√° no par. Tente novamente.`);\n    }\n  };\n\n  // Gera bot√µes misturados, incluindo as alternativas corretas\n  const generateButtons = sequence => {\n    let correctPairs = [];\n\n    // Criar pares corretos com op√ß√µes alternativas\n    for (let i = 0; i < sequence.length; i += 2) {\n      let num1 = sequence[i];\n      let num2 = sequence[i + 1];\n\n      // Adiciona cada par como uma op√ß√£o alternada\n      correctPairs.push([num1, num2]);\n    }\n    let allButtons = [];\n\n    // Adiciona os pares corretos\n    correctPairs.forEach(pair => {\n      allButtons.push(pair);\n    });\n\n    // Adiciona pares falsos aleat√≥rios\n    for (let i = 0; i < correctPairs.length; i++) {\n      let num1 = Math.floor(Math.random() * 10); // N√∫mero aleat√≥rio entre 0-9\n      let num2 = Math.floor(Math.random() * 10);\n      allButtons.push([num1, num2]);\n    }\n\n    // Embaralha os pares de bot√µes\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\n\n    // Define os bot√µes embaralhados no estado\n    setButtons(allButtons);\n  };\n\n  // Exibe os bot√µes misturados\n  const displayButtons = () => {\n    if (buttons.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Esperando sequ\\xEAncia...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map((pair, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(pair) // Passa o par inteiro para a fun√ß√£o de clique\n        ,\n        disabled: isButtonDisabled,\n        children: [\"[\", pair[0], \" ou \", pair[1], \"]\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Fun√ß√£o para validar a sequ√™ncia ao final\n  const handleValidatePassword = async () => {\n    try {\n      // Certifique-se de que a sequ√™ncia est√° formatada corretamente\n      const formattedSequence = [];\n      for (let i = 0; i < inputSequence.length; i += 2) {\n        formattedSequence.push([inputSequence[i], inputSequence[i + 1]]);\n      }\n      console.log(\"Senha do usu√°rio antes do envio:\", formattedSequence);\n\n      // Verifica se a sequ√™ncia est√° correta\n      const isSequenceCorrect = formattedSequence.every((pair, index) => {\n        return pair[0] === password[index][0] && pair[1] === password[index][1];\n      });\n      if (!isSequenceCorrect) {\n        toast.error('Sequ√™ncia incorreta');\n        return;\n      }\n\n      // üîπ Defini√ß√£o da vari√°vel `data`\n      const data = {\n        session_id: sessionId,\n        // Certifique-se de que sessionId est√° armazenado corretamente\n        sequence: formattedSequence\n      };\n      const response = await axios.post(\"http://127.0.0.1:8000/validate_sequence\", data, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"‚úÖ Sequ√™ncia validada com sucesso:\", response.data);\n      toast.success('Sequ√™ncia validada com sucesso!');\n      setIsSessionValid(false);\n      setIsButtonDisabled(true);\n    } catch (error) {\n      console.log('Error response:', error.response ? error.response.data : error.message);\n      toast.error('Erro ao validar a sequ√™ncia');\n    }\n  };\n  // Fun√ß√£o para gerar sess√£o no backend\n  const generateSession = async username => {\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', {\n      username\n    });\n    console.log('Resposta da API de gera√ß√£o de sess√£o:', response.data);\n    return response.data;\n  };\n\n  // Exibe a senha gerada de forma formatada\n  const displayPassword = () => {\n    if (password.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando senha...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 39\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Nome de Usu\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Digite seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSession,\n      children: \"Gerar Nova Sess\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), isSessionValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Senha Gerada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), displayPassword(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clique nos bot\\xF5es abaixo para digitar a senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), displayButtons(), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Senha Selecionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: inputSequence.map(pair => `[${pair[0]},${pair[1]}]`).join(' ') || \"Nenhuma sequ√™ncia selecionada ainda...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidatePassword,\n        children: \"Validar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Token de Verifica\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QP7fkk/X+Eyp9jbv71tHJv8d/Ls=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","axios","CryptoJS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","sessionId","setSessionId","password","setPassword","inputSequence","setInputSequence","token","setToken","isSessionValid","setIsSessionValid","isButtonDisabled","setIsButtonDisabled","buttons","setButtons","handleGenerateSession","error","data","generateSession","console","log","sequence","Array","isArray","session_id","formatSequence","generateButtons","success","formatted","i","length","push","isValidSelection","selectedNumber","flatPassword","flat","nextExpectedNumber","handleButtonClick","pair","isValid","includes","prevSequence","newSequence","correctPairs","num1","num2","allButtons","forEach","Math","floor","random","sort","displayButtons","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","onClick","disabled","handleValidatePassword","formattedSequence","isSequenceCorrect","every","response","post","headers","Authorization","message","displayPassword","join","htmlFor","id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avan√ßados/tecladoVirtual/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './api.css';\r\nimport CryptoJS from 'crypto-js';  // Importe a biblioteca\r\n\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [password, setPassword] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [isSessionValid, setIsSessionValid] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n  const [buttons, setButtons] = useState([]);\r\n\r\n  // Fun√ß√£o para gerar nova sess√£o\r\n  const handleGenerateSession = async () => {\r\n    if (!username) {\r\n      toast.error('Por favor, insira um nome de usu√°rio.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await generateSession(username);\r\n      console.log('Dados recebidos da API:', data);\r\n\r\n      if (data && data.sequence && Array.isArray(data.sequence)) {\r\n        setSessionId(data.session_id);\r\n        setPassword(formatSequence(data.sequence)); // Guardando a senha formatada\r\n        setToken(data.token);\r\n        setIsSessionValid(true);\r\n        generateButtons(data.sequence); // Gera bot√µes com misturados\r\n\r\n        console.log(\"Token de Verifica√ß√£o:\", data.token);\r\n        toast.success('Sess√£o gerada com sucesso!');\r\n      } else {\r\n        toast.error('Erro: a sequ√™ncia n√£o foi retornada corretamente.');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erro ao gerar sess√£o');\r\n      console.error('Erro ao gerar sess√£o:', error);\r\n    }\r\n  };\r\n\r\n  // Formata a sequ√™ncia correta em pares\r\n  const formatSequence = (sequence) => {\r\n    let formatted = [];\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      formatted.push([sequence[i], sequence[i + 1]]);\r\n    }\r\n    return formatted;\r\n  };\r\n\r\n  // Fun√ß√£o para validar a sele√ß√£o\r\n  const isValidSelection = (selectedNumber) => {\r\n    const flatPassword = password.flat();  // Aqui \"achata\" a sequ√™ncia correta da senha\r\n    const nextExpectedNumber = flatPassword[inputSequence.length];  // Verifica o pr√≥ximo n√∫mero esperado\r\n    return selectedNumber === nextExpectedNumber;\r\n  };\r\n\r\n  // Fun√ß√£o para lidar com o clique nos bot√µes\r\n  const handleButtonClick = (pair) => {\r\n    const flatPassword = password.flat(); // \"Achata\" a senha para facilitar a compara√ß√£o\r\n    const nextExpectedNumber = flatPassword[inputSequence.length]; // Obt√©m o pr√≥ximo n√∫mero esperado da senha\r\n    \r\n    // Verifica se o n√∫mero do par √© v√°lido (igual ao pr√≥ximo n√∫mero esperado)\r\n    const isValid = pair.includes(nextExpectedNumber); // Verifica se o pr√≥ximo n√∫mero esperado est√° no par\r\n\r\n    if (isValid) {\r\n      // Se for v√°lido, adiciona o n√∫mero √† sequ√™ncia\r\n      setInputSequence((prevSequence) => {\r\n        const newSequence = [...prevSequence, nextExpectedNumber];\r\n        console.log(\"Sequ√™ncia do usu√°rio ap√≥s clique:\", newSequence);\r\n        return newSequence;\r\n      });\r\n    } else {\r\n      // Se for inv√°lido, exibe uma mensagem de erro e n√£o faz nada\r\n      toast.error(`N√∫mero ${nextExpectedNumber} n√£o est√° no par. Tente novamente.`);\r\n    }\r\n  };\r\n\r\n  // Gera bot√µes misturados, incluindo as alternativas corretas\r\n  const generateButtons = (sequence) => {\r\n    let correctPairs = [];\r\n    \r\n    // Criar pares corretos com op√ß√µes alternativas\r\n    for (let i = 0; i < sequence.length; i += 2) {\r\n      let num1 = sequence[i];\r\n      let num2 = sequence[i + 1];\r\n      \r\n      // Adiciona cada par como uma op√ß√£o alternada\r\n      correctPairs.push([num1, num2]);\r\n    }\r\n\r\n    let allButtons = [];\r\n\r\n    // Adiciona os pares corretos\r\n    correctPairs.forEach(pair => {\r\n      allButtons.push(pair);\r\n    });\r\n\r\n    // Adiciona pares falsos aleat√≥rios\r\n    for (let i = 0; i < correctPairs.length; i++) {\r\n      let num1 = Math.floor(Math.random() * 10);  // N√∫mero aleat√≥rio entre 0-9\r\n      let num2 = Math.floor(Math.random() * 10);\r\n      allButtons.push([num1, num2]);\r\n    }\r\n\r\n    // Embaralha os pares de bot√µes\r\n    allButtons = allButtons.sort(() => Math.random() - 0.5);\r\n\r\n    // Define os bot√µes embaralhados no estado\r\n    setButtons(allButtons);\r\n  };\r\n\r\n  // Exibe os bot√µes misturados\r\n  const displayButtons = () => {\r\n    if (buttons.length === 0) return <p>Esperando sequ√™ncia...</p>;\r\n\r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((pair, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleButtonClick(pair)}  // Passa o par inteiro para a fun√ß√£o de clique\r\n            disabled={isButtonDisabled}\r\n          >\r\n            [{pair[0]} ou {pair[1]}]\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Fun√ß√£o para validar a sequ√™ncia ao final\r\n  const handleValidatePassword = async () => {\r\n    try {\r\n        // Certifique-se de que a sequ√™ncia est√° formatada corretamente\r\n        const formattedSequence = [];\r\n        for (let i = 0; i < inputSequence.length; i += 2) {\r\n            formattedSequence.push([inputSequence[i], inputSequence[i + 1]]);\r\n        }\r\n\r\n        console.log(\"Senha do usu√°rio antes do envio:\", formattedSequence);\r\n\r\n        // Verifica se a sequ√™ncia est√° correta\r\n        const isSequenceCorrect = formattedSequence.every((pair, index) => {\r\n            return (\r\n                pair[0] === password[index][0] && pair[1] === password[index][1]\r\n            );\r\n        });\r\n\r\n        if (!isSequenceCorrect) {\r\n            toast.error('Sequ√™ncia incorreta');\r\n            return;\r\n        }\r\n\r\n        // üîπ Defini√ß√£o da vari√°vel `data`\r\n        const data = {\r\n            session_id: sessionId,  // Certifique-se de que sessionId est√° armazenado corretamente\r\n            sequence: formattedSequence\r\n        };\r\n\r\n        const response = await axios.post(\"http://127.0.0.1:8000/validate_sequence\", data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        console.log(\"‚úÖ Sequ√™ncia validada com sucesso:\", response.data);\r\n        toast.success('Sequ√™ncia validada com sucesso!');\r\n        setIsSessionValid(false);\r\n        setIsButtonDisabled(true);\r\n    } catch (error) {\r\n        console.log('Error response:', error.response ? error.response.data : error.message);\r\n        toast.error('Erro ao validar a sequ√™ncia');\r\n    }\r\n};\r\n  // Fun√ß√£o para gerar sess√£o no backend\r\n  const generateSession = async (username) => {\r\n    const response = await axios.post('http://127.0.0.1:8000/generate_session', { username });\r\n    console.log('Resposta da API de gera√ß√£o de sess√£o:', response.data);\r\n    return response.data;\r\n  };\r\n\r\n  // Exibe a senha gerada de forma formatada\r\n  const displayPassword = () => {\r\n    if (password.length === 0) return <p>Carregando senha...</p>;\r\n\r\n    return (\r\n      <p>\r\n        {password.map(pair => `[${pair[0]},${pair[1]}]`).join(' ')}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n\r\n      <div>\r\n        <label htmlFor=\"username\">Nome de Usu√°rio:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Digite seu nome de usu√°rio\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleGenerateSession}>Gerar Nova Sess√£o</button>\r\n\r\n      {isSessionValid ? (\r\n        <>\r\n          <h2>Senha Gerada:</h2>\r\n          {displayPassword()}\r\n\r\n          <h2>Clique nos bot√µes abaixo para digitar a senha:</h2>\r\n          {displayButtons()}\r\n\r\n          <h3>Senha Selecionada:</h3>\r\n          <p>{inputSequence.map(pair => `[${pair[0]},${pair[1]}]`).join(' ') || \"Nenhuma sequ√™ncia selecionada ainda...\"}</p>\r\n\r\n          <button onClick={handleValidatePassword}>Validar Senha</button>\r\n\r\n          {/* Exibe o Token de Verifica√ß√£o */}\r\n          <div>\r\n            <h3>Token de Verifica√ß√£o:</h3>\r\n            <p>{token}</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}