{"ast":null,"code":"import axios from 'axios';\n\n// Endpoints da API\nconst API_URL = 'http://127.0.0.1:8000'; // Substitua pelo seu endereço da API\n\n// Função para gerar a sessão\nexport const generateSession = async () => {\n  try {\n    const response = await axios.post(`${API_URL}/generate_session`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao gerar sessão:', error);\n    throw error;\n  }\n};\n\n// Função para validar a sequência\nexport const validateSequence = async (sessionId, sequence, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/validate_sequence`, {\n      session_id: sessionId,\n      sequence: sequence\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao validar sequência:', error);\n    throw error;\n  }\n};\n\n// Função para invalidar a sessão\nexport const invalidateSession = async sessionId => {\n  try {\n    const response = await axios.post(`${API_URL}/invalidate_session`, {\n      session_id: sessionId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao invalidar sessão:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","generateSession","response","post","data","error","console","validateSequence","sessionId","sequence","token","session_id","headers","Authorization","invalidateSession"],"sources":["C:/Users/faculdade/Desktop/Algoritmos Avançados/tecladoVirtual/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Endpoints da API\r\nconst API_URL = 'http://127.0.0.1:8000';  // Substitua pelo seu endereço da API\r\n\r\n// Função para gerar a sessão\r\nexport const generateSession = async () => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/generate_session`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro ao gerar sessão:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para validar a sequência\r\nexport const validateSequence = async (sessionId, sequence, token) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/validate_sequence`, {\r\n      session_id: sessionId,\r\n      sequence: sequence,\r\n    }, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro ao validar sequência:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para invalidar a sessão\r\nexport const invalidateSession = async (sessionId) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/invalidate_session`, { session_id: sessionId });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro ao invalidar sessão:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAE;;AAE1C;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,GAAGH,OAAO,mBAAmB,CAAC;IAChE,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,KAAK;EACpE,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,GAAGH,OAAO,oBAAoB,EAAE;MAChEW,UAAU,EAAEH,SAAS;MACrBC,QAAQ,EAAEA;IACZ,CAAC,EAAE;MACDG,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUH,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,iBAAiB,GAAG,MAAON,SAAS,IAAK;EACpD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,GAAGH,OAAO,qBAAqB,EAAE;MAAEW,UAAU,EAAEH;IAAU,CAAC,CAAC;IAC7F,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}